# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-27 20:01+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/refs/issues.rst:2
msgid "Known Issues"
msgstr "已知问题"

#: ../../source/refs/issues.rst:6
msgid ""
"Please also refer to the `Omniverse Isaac Sim documentation`_ for known "
"issues and workarounds."
msgstr "请参阅 `Omniverse Isaac Sim documentation`_ 以查看已知问题和解决方法。"

#: ../../source/refs/issues.rst:9
msgid "Stale values after resetting the environment"
msgstr "重置环境后数据值变旧"

#: ../../source/refs/issues.rst:11
msgid ""
"When resetting the environment, some of the data fields of assets and "
"sensors are not updated. These include the poses of links in a kinematic "
"chain, the camera images, the contact sensor readings, and the lidar point "
"clouds. This is a known issue which has to do with the way the PhysX and "
"rendering engines work in Omniverse."
msgstr ""
"重置环境时，某些资产和传感器的数据字段未更新。这些包括关节链中链接的姿势、摄像头图像、接触传感器读数和激光雷达点云。这是一个已知问题，与 "
"Omniverse 中 PhysX 和渲染引擎的工作方式有关。"

#: ../../source/refs/issues.rst:16
msgid ""
"Many physics engines do a simulation step as a two-level call: ``forward()``"
" and ``simulate()``, where the kinematic and dynamic states are updated, "
"respectively. Unfortunately, PhysX has only a single ``step()`` call where "
"the two operations are combined. Due to computations through GPU kernels, it"
" is not so straightforward for them to split these operations. Thus, at the "
"moment, it is not possible to set the root and/or joint states and do a "
"forward call to update the kinematic states of links. This affects both "
"initialization as well as episodic resets."
msgstr ""
"许多物理引擎将模拟步骤作为两级调用处理： ``forward()`` 和 ``simulate()`` "
"，分别更新关节链中的运动学和动态状态。不幸的是，PhysX 只有一个 ``step()`` 调用，其中两个操作合并起来。由于通过 GPU "
"内核计算，它们无法简单地将这些操作拆分开来。因此，目前无法设置根和/或关节状态并进行向前调用以更新链接的运动学状态。这既影响初始化，也影响周期性重置。"

#: ../../source/refs/issues.rst:23
msgid ""
"Similarly for RTX rendering related sensors (such as cameras), the sensor "
"data is not updated immediately after setting the state of the sensor. The "
"rendering engine update is bundled with the simulator's ``step()`` call "
"which only gets called when the simulation is stepped forward. This means "
"that the sensor data is not updated immediately after a reset and it will "
"hold outdated values."
msgstr ""
"对于与 RTX 渲染相关的传感器（如摄像头），在设置传感器状态后，传感器数据不会立即更新。渲染引擎更新与模拟器的 ``step()`` "
"调用捆绑在一起，仅在模拟向前步进时才会调用。这意味着传感器数据在重置后不会立即更新，它将保留过时的值。"

#: ../../source/refs/issues.rst:29
msgid ""
"While the above is erroneous, there is currently no direct workaround for "
"it. From our experience in using IsaacGym, the reset values affect the agent"
" learning critically depending on how frequently the environment terminates."
" Eventually if the agent is learning successfully, this number drops and "
"does not affect the performance that critically."
msgstr ""
"虽然上述是错误的，但目前没有直接的解决方法。根据我们在使用 IsaacGym "
"时的经验，重置值对智能体学习的影响取决于环境终止的频率。如果智能体成功学习，这个数字会下降并且不会对性能有显著影响。"

#: ../../source/refs/issues.rst:34
msgid ""
"We have made a feature request to the respective Omniverse teams to have "
"complete control over stepping different parts of the simulation app. "
"However, at this point, there is no set timeline for this feature request."
msgstr "我们已向相应的 Omniverse 团队提出了一个功能请求，以完全控制模拟应用的不同部分的步进。然而，目前尚未确定此功能请求的时间表。"

#: ../../source/refs/issues.rst:39
msgid ""
"With Isaac Lab 1.2, we have introduced a PhysX kinematic update call inside "
"the :attr:`~omni.isaac.lab.assets.ArticulationData.body_state_w` attribute. "
"This workaround ensures that the states of the links are updated when the "
"root state or joint state of an articulation is set."
msgstr ""
"使用 Isaac Lab 1.2，我们在 "
":attr:`~omni.isaac.lab.assets.ArticulationData.body_state_w` 属性内引入了 PhysX "
"运动学更新调用。 这种解决方法确保了当设置了root或关节的状态时，连杆的状态也会得到更新。"

#: ../../source/refs/issues.rst:46
msgid "Blank initial frames from the camera"
msgstr "摄像头前的空白初始帧"

#: ../../source/refs/issues.rst:48
msgid ""
"When using the :class:`~omni.isaac.lab.sensors.Camera` sensor in standalone "
"scripts, the first few frames may be blank. This is a known issue with the "
"simulator where it needs a few steps to load the material textures properly "
"and fill up the render targets."
msgstr ""
"在独立脚本中使用 :class:`~omni.isaac.lab.sensors.Camera` "
"传感器时，前几帧可能会是空白的。这是一个已知问题，模拟器需要一些步骤来正确加载材质纹理并填充渲染目标。"

#: ../../source/refs/issues.rst:52
msgid ""
"A hack to work around this is to add the following after initializing the "
"camera sensor and setting its pose:"
msgstr "解决此问题的一个方法是在初始化摄像头传感器并设置姿势后添加以下内容："

#: ../../source/refs/issues.rst:67
msgid "Using instanceable assets for markers"
msgstr "使用实例化资产作为标记对象"

#: ../../source/refs/issues.rst:69
msgid ""
"When using `instanceable assets`_ for markers, the markers do not work "
"properly, since Omniverse does not support instanceable assets when using "
"the :class:`UsdGeom.PointInstancer` schema. This is a known issue and will "
"hopefully be fixed in a future release."
msgstr ""
"使用 `instanceable assets`_ 作为标记对象时，标记对象不起作用，因为 Omniverse 在使用 "
":class:`~UsdGeom.PointInstancer` 模式时不支持实例化资产。这是一个已知问题，将在将来的版本中修复。"

#: ../../source/refs/issues.rst:73
msgid ""
"If you use an instanceable assets for markers, the marker class removes all "
"the physics properties of the asset. This is then replicated across other "
"references of the same asset since physics properties of instanceable assets"
" are stored in the instanceable asset's USD file and not in its stage "
"reference's USD file."
msgstr ""
"如果使用实例化资产作为标记对象，则标记对象类会删除资产的所有物理属性。这会在相同资产的其他引用上复制，因为实例化资产的物理属性存储在实例化资产的 USD"
" 文件中，而不是在其场景引用的 USD 文件中。"

#: ../../source/refs/issues.rst:82
msgid "Exiting the process"
msgstr "退出进程"

#: ../../source/refs/issues.rst:84
msgid ""
"When exiting a process with ``Ctrl+C``, occasionally the below error may "
"appear:"
msgstr "当使用 ``Ctrl+C`` 退出进程时，偶尔会出现以下错误："

#: ../../source/refs/issues.rst:90
msgid ""
"This is due to the termination occurring in the middle of a physics event "
"call and should not affect the functionality of Isaac Lab. It is safe to "
"ignore the error message and continue with terminating the process. On "
"Windows systems, please use ``Ctrl+Break`` or ``Ctrl+fn+B`` to terminate the"
" process."
msgstr ""
"这是因为终止发生在物理事件调用中间，不应影响 Isaac Lab 的功能。可以安全地忽略错误消息并继续终止进程。在 Windows 系统上，请使用 "
"``Ctrl+Break`` 或 ``Ctrl+fn+B`` 来终止进程。"
