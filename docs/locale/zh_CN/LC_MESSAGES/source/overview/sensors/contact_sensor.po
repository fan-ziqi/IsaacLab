# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 2.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-12 14:03+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/overview/sensors/contact_sensor.rst:4
msgid "Contact Sensor"
msgstr ""

#: ../../source/overview/sensors/contact_sensor.rst:-1
msgid "A contact sensor with filtering"
msgstr ""

#: ../../source/overview/sensors/contact_sensor.rst:11
msgid ""
"The contact sensor is designed to return the net contact force acting on "
"a given ridgid body. The sensor is written to behave as a physical "
"object, and so the \"scope\" of the contact sensor is limited to the body"
" (or bodies) that defines it. There are multiple ways to define this "
"scope, depending on your need to filter the forces coming from the "
"contact."
msgstr ""

#: ../../source/overview/sensors/contact_sensor.rst:13
msgid ""
"By default, the reported force is the total contact force, but your "
"application may only care about contact forces due to specific objects. "
"Retrieving contact forces from specific objects requires filtering, and "
"this can only be done in a \"many-to-one\" way. A multi-legged robot that"
" needs filterable contact information for its feet would require one "
"sensor per foot to be defined in the environment, but a robotic hand with"
" contact sensors on the tips of each finger can be defined with a single "
"sensor."
msgstr ""

#: ../../source/overview/sensors/contact_sensor.rst:15
msgid "Consider a simple environment with an Anymal Quadruped and a block"
msgstr ""

#: ../../source/overview/sensors/contact_sensor.rst:21
msgid ""
"We define the sensors on the feet of the robot in two different ways.  "
"The front feet are independent sensors (one sensor body per foot) and the"
" \"Cube\" is placed under the left foot.  The hind feet are defined as a "
"single sensor with multiple bodies."
msgstr ""

#: ../../source/overview/sensors/contact_sensor.rst:23
msgid "We can then run the scene and print the data from the sensors"
msgstr ""

#: ../../source/overview/sensors/contact_sensor.rst:50
msgid ""
"Here, we print both the net contact force and the filtered force matrix "
"for each contact sensor defined in the scene. The front left and front "
"right feet report the following"
msgstr ""

#: ../../source/overview/sensors/contact_sensor.rst:73
msgid ""
"Notice that even with filtering, both sensors report the net contact "
"force acting on the foot. However only the left foot has a non zero "
"\"force matrix\", because the right foot isn't standing on the filtered "
"body, ``/World/envs/env_.*/Cube``. Now, checkout the data coming from the"
" hind feet!"
msgstr ""

#: ../../source/overview/sensors/contact_sensor.rst:88
msgid ""
"In this case, the contact sensor has two bodies: the left and right hind "
"feet.  When the force matrix is queried, the result is ``None`` because "
"this is a many body sensor, and presently Isaac Lab only supports \"many "
"to one\" contact force filtering. Unlike the single body contact sensor, "
"the reported force tensor has multiple entries, with each \"row\" "
"corresponding to the contact force on a single body of the sensor "
"(matching the ordering at construction)."
msgstr ""

#: ../../source/overview/sensors/contact_sensor.rst
msgid "Code for contact_sensor.py"
msgstr ""

