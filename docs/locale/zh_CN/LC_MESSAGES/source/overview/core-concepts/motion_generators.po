# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-31 20:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/overview/core-concepts/motion_generators.rst:2
msgid "Motion Generators"
msgstr "运动生成器"

#: ../../source/overview/core-concepts/motion_generators.rst:4
msgid ""
"Robotic tasks are typically defined in task-space in terms of desired end-"
"effector trajectory, while control actions are executed in the joint-space. "
"This naturally leads to *joint-space* and *task-space* (operational-space) "
"control methods. However, successful execution of interaction tasks using "
"motion control often requires an accurate model of both the robot "
"manipulator as well as its environment. While a sufficiently precise "
"manipulator's model might be known, detailed description of environment is "
"hard to obtain :cite:p:`siciliano2009force`. Planning errors caused by this "
"mismatch can be overcome by introducing a *compliant* behavior during "
"interaction."
msgstr ""
"机器人任务通常在任务空间中定义，通常以期望的末端执行器轨迹来表示，而控制动作则在关节空间中执行。这自然导致了 *关节空间* 和 *任务空间* "
"（操作空间）控制方法。然而，使用运动控制成功执行交互任务通常需要一个准确的模型，既包括机器人操纵器，也包括其环境。虽然足够精确的操纵器模型可能是已知的，但环境的详细描述却很难获得"
" :cite:p:`siciliano2009force` 。通过在交互过程中引入 *顺应性* 行为，可以克服由这种不匹配引起的规划错误。"

#: ../../source/overview/core-concepts/motion_generators.rst:15
msgid ""
"While compliance is achievable passively through robot's structure (such as "
"elastic actuators, soft robot arms), we are more interested in controller "
"designs that focus on active interaction control. These are broadly "
"categorized into:"
msgstr "尽管合规性可以通过机器人结构（如弹性驱动器、软体机器人手臂）被动实现，但我们更感兴趣的是专注于主动交互控制的控制器设计。这些大致可分为:"

#: ../../source/overview/core-concepts/motion_generators.rst:20
msgid ""
"**impedance control:** indirect control method where motion deviations "
"caused during interaction relates to contact force as a mass-spring-damper "
"system with adjustable parameters (stiffness and damping). A specialized "
"case of this is *stiffness* control where only the static relationship "
"between position error and contact force is considered."
msgstr ""
"**阻抗控制:** 一种间接控制方法，其中在交互过程中产生的运动偏差与接触力之间的关系可以通过一个具有可调参数（刚度和阻尼）的质量-弹簧-"
"阻尼器系统来表示。其专门化形式是 *刚度* 控制，其中仅考虑位置误差与接触力之间的静态关系。"

#: ../../source/overview/core-concepts/motion_generators.rst:26
msgid ""
"**hybrid force/motion control:** active control method which controls motion"
" and force along unconstrained and constrained task directions respectively."
" Among the various schemes for hybrid motion control, the provided "
"implementation is based on inverse dynamics control in the operational space"
" :cite:p:`khatib1987osc`."
msgstr ""
"**混合力/运动控制:** "
"一种主动控制方法，分别沿着不受约束和受约束的任务方向控制运动和力。在各种混合运动控制方案中，提供的实现基于操作空间中的逆向动力学控制 "
":cite:p:`khatib1987osc` 。"

#: ../../source/overview/core-concepts/motion_generators.rst:33
msgid ""
"To provide an even broader set of motion generators, we welcome "
"contributions from the community. If you are interested, please open an "
"issue to start a discussion!"
msgstr "为了提供更广泛的运动生成器，我们欢迎社区的贡献。如果您感兴趣，请打开一个问题来开始讨论！"

#: ../../source/overview/core-concepts/motion_generators.rst:38
msgid "Joint-space controllers"
msgstr "关节空间控制器"

#: ../../source/overview/core-concepts/motion_generators.rst:41
msgid "Torque control"
msgstr "扭矩矩控制控制"

#: ../../source/overview/core-concepts/motion_generators.rst:43
#: ../../source/overview/core-concepts/motion_generators.rst:59
#: ../../source/overview/core-concepts/motion_generators.rst:82
msgid "Action dimensions: ``\"n\"`` (number of joints)"
msgstr "动作维度: ``\"n\"`` （关节数量）"

#: ../../source/overview/core-concepts/motion_generators.rst:45
msgid ""
"In torque control mode, the input actions are directly set as feed-forward "
"joint torque commands, i.e. at every time-step,"
msgstr "在扭矩控制模式下，输入动作被直接设置为前馈关节扭矩命令，即在每个时间步，"

#: ../../source/overview/core-concepts/motion_generators.rst:48
msgid "\\tau = \\tau_{des}"
msgstr "\\tau = \\tau_{des}"

#: ../../source/overview/core-concepts/motion_generators.rst:52
msgid ""
"Thus, this control mode is achievable by setting the command type for the "
"actuator group, via the :class:`ActuatorControlCfg` class, to ``\"t_abs\"``."
msgstr ""
"因此，您可以通过通过 :class:`ActuatorControlCfg` 类将执行器组的命令类型设置为 ``\"t_abs\"`` "
"来实现这种控制模式。"

#: ../../source/overview/core-concepts/motion_generators.rst:57
msgid "Velocity control"
msgstr "速度控制"

#: ../../source/overview/core-concepts/motion_generators.rst:61
msgid ""
"In velocity control mode, a proportional control law is required to reduce "
"the error between the current and desired joint velocities. Based on input "
"actions, the joint torques commands are computed as:"
msgstr "在速度控制模式下，需要一个比例控制律来减少当前与期望关节速度之间的误差。基于输入动作，关节扭矩命令计算如下:"

#: ../../source/overview/core-concepts/motion_generators.rst:64
msgid "\\tau = k_d (\\dot{q}_{des} - \\dot{q})"
msgstr "\\tau = k_d (\\dot{q}_{des} - \\dot{q})"

#: ../../source/overview/core-concepts/motion_generators.rst:68
msgid "where :math:`k_d` are the gains parsed from configuration."
msgstr "在这里 :math:`k_d` 是从配置中解析得到的增益。"

#: ../../source/overview/core-concepts/motion_generators.rst:70
msgid ""
"This control mode is achievable by setting the command type for the actuator"
" group, via the :class:`ActuatorControlCfg` class, to ``\"v_abs\"`` or "
"``\"v_rel\"``."
msgstr ""
"该控制模式可以通过通过 :class:`ActuatorControlCfg` 类设置执行器组的命令类型为 ``\"v_abs\"`` 或 "
"``\"v_rel\"`` 来实现。"

#: ../../source/overview/core-concepts/motion_generators.rst:75
msgid ""
"While performing velocity control, in many cases, gravity compensation is "
"required to ensure better tracking of the command. In this case, we suggest "
"disabling gravity for the links in the articulation in simulation."
msgstr "在执行速度控制时，在许多情况下，需要进行重力补偿以确保更好地跟踪命令。在这种情况下，我们建议在仿真中禁用关节中链节的重力。"

#: ../../source/overview/core-concepts/motion_generators.rst:80
msgid "Position control with fixed impedance"
msgstr "位置控制与固定阻抗"

#: ../../source/overview/core-concepts/motion_generators.rst:84
msgid ""
"In position control mode, a proportional-damping (PD) control law is "
"employed to track the desired joint positions and ensuring the articulation "
"remains still at the desired location (i.e., desired joint velocities are "
"zero). Based on the input actions, the joint torque commands are computed "
"as:"
msgstr ""
"在位置控制模式下，采用比例-阻尼 (PD) "
"控制律来跟踪期望的关节位置，并确保关节保持在期望位置（即期望的关节速度为零）。根据输入动作，关节扭矩命令计算如下:"

#: ../../source/overview/core-concepts/motion_generators.rst:88
msgid "\\tau = k_p (q_{des} - q)  - k_d \\dot{q}"
msgstr "\\tau = k_p (q_{des} - q)  - k_d \\dot{q}"

#: ../../source/overview/core-concepts/motion_generators.rst:92
msgid ""
"where :math:`k_p` and :math:`k_d` are the gains parsed from configuration."
msgstr "其中 :math:`k_p` 和 :math:`k_d` 是从配置中解析出的增益。"

#: ../../source/overview/core-concepts/motion_generators.rst:94
msgid ""
"In its simplest above form,  the control mode is achievable by setting the "
"command type for the actuator group, via the :class:`ActuatorControlCfg` "
"class, to ``\"p_abs\"`` or ``\"p_rel\"``."
msgstr ""
"在其最简单的上述形式中，控制模式可以通过通过 :class:`ActuatorControlCfg` 类设置执行器组的命令类型为 "
"``\"p_abs\"`` 或 ``\"p_rel\"`` 来实现。"

#: ../../source/overview/core-concepts/motion_generators.rst:97
msgid ""
"However, a more complete formulation which considers the dynamics of the "
"articulation would be:"
msgstr "然而，一个更完整的公式，考虑到发音的动态，应该是:"

#: ../../source/overview/core-concepts/motion_generators.rst:99
msgid "\\tau = M \\left( k_p (q_{des} - q)  - k_d \\dot{q} \\right) + g"
msgstr "\\tau = M \\left( k_p (q_{des} - q)  - k_d \\dot{q} \\right) + g"

#: ../../source/overview/core-concepts/motion_generators.rst:103
msgid ""
"where :math:`M` is the joint-space inertia matrix of size :math:`n \\times "
"n`, and :math:`g` is the joint-space gravity vector. This implementation is "
"available through the :class:`JointImpedanceController` class by setting the"
" impedance mode to ``\"fixed\"``. The gains :math:`k_p` are parsed from the "
"input configuration and :math:`k_d` are computed while considering the "
"system as a decoupled point-mass oscillator, i.e.,"
msgstr ""
"其中 :math:`M` 是大小为 :math:`n \\times n` 的关节空间惯性矩阵， :math:`g` "
"是关节空间重力向量。通过将阻抗模式设置为 ``\"fixed\"`` ，可以通过 :class:`JointImpedanceController` "
"类来实现此功能。增益 :math:`k_p` 从输入配置中解析， :math:`k_d` 则在将系统视为解耦的点质量振荡器时计算得出，即，"

#: ../../source/overview/core-concepts/motion_generators.rst:108
msgid "k_d = 2 \\sqrt{k_p} \\times D"
msgstr "k_d = 2 \\sqrt{k_p} \\times D"

#: ../../source/overview/core-concepts/motion_generators.rst:112
msgid ""
"where :math:`D` is the damping ratio of the system. Critical damping is "
"achieved for :math:`D = 1`, overcritical damping for :math:`D > 1` and "
"undercritical damping for :math:`D < 1`."
msgstr ""
"其中 :math:`D` 是系统的阻尼比。当 :math:`D = 1` 时，系统达到临界阻尼；当 :math:`D > 1` 时，系统为过阻尼；当 "
":math:`D < 1` 时，系统为欠阻尼。"

#: ../../source/overview/core-concepts/motion_generators.rst:115
msgid ""
"Additionally, it is possible to disable the inertial or gravity compensation"
" in the controller by setting the flags :attr:`inertial_compensation` and  "
":attr:`gravity_compensation` in the configuration to :obj:`False`, "
"respectively."
msgstr ""
"此外，可以通过将配置中的标志 :attr:`inertial_compensation` 和 :attr:`gravity_compensation` "
"分别设置为 :obj:`False` 来禁用控制器中的惯性补偿或重力补偿。"

#: ../../source/overview/core-concepts/motion_generators.rst:120
msgid "Position control with variable stiffness"
msgstr "变位控制与可变刚度"

#: ../../source/overview/core-concepts/motion_generators.rst:122
msgid "Action dimensions: ``\"2n\"`` (number of joints)"
msgstr "动作维度: ``\"2n\"`` （关节数）"

#: ../../source/overview/core-concepts/motion_generators.rst:124
msgid ""
"In stiffness control, the same formulation as above is employed, however, "
"the gains :math:`k_p` are part of the input commands. This implementation is"
" available through the :class:`JointImpedanceController` class by setting "
"the impedance mode to ``\"variable_kp\"``."
msgstr ""
"在刚度控制中，采用与上述相同的公式，然而，增益 :math:`k_p` 是输入命令的一部分。此实现可以通过 "
":class:`JointImpedanceController` 类实现，方法是将阻抗模式设置为 ``\"variable_kp\"`` 。"

#: ../../source/overview/core-concepts/motion_generators.rst:129
msgid "Position control with variable impedance"
msgstr "位置控制与可变阻抗"

#: ../../source/overview/core-concepts/motion_generators.rst:131
msgid "Action dimensions: ``\"3n\"`` (number of joints)"
msgstr "动作维度: ``\"3n\"`` （关节数）"

#: ../../source/overview/core-concepts/motion_generators.rst:133
msgid ""
"In impedance control, the same formulation as above is employed, however, "
"both :math:`k_p` and :math:`k_d` are part of the input commands. This "
"implementation is available through the :class:`JointImpedanceController` "
"class by setting the impedance mode to ``\"variable\"``."
msgstr ""
"在阻抗控制中，采用与上述相同的公式，然而， :math:`k_p` 和 :math:`k_d` 都是输入命令的一部分。通过将阻抗模式设置为 "
"``\"variable\"`` ，可以通过 :class:`JointImpedanceController` 类来实现此功能。"

#: ../../source/overview/core-concepts/motion_generators.rst:138
msgid "Task-space controllers"
msgstr "任务空间控制器"

#: ../../source/overview/core-concepts/motion_generators.rst:141
msgid "Differential inverse kinematics (IK)"
msgstr "差分逆向运动学 (IK)"

#: ../../source/overview/core-concepts/motion_generators.rst:143
msgid ""
"Action dimensions:  ``\"3\"`` (relative/absolute position), ``\"6\"`` "
"(relative pose), or ``\"7\"`` (absolute pose)"
msgstr "动作维度: ``\"3\"`` （相对/绝对位置）， ``\"6\"`` （相对姿态），或 ``\"7\"`` （绝对姿态）"

#: ../../source/overview/core-concepts/motion_generators.rst:145
msgid ""
"Inverse kinematics converts the task-space tracking error to joint-space "
"error. In its most typical implementation, the pose error in the task-sace, "
":math:`\\Delta \\chi_e = (\\Delta p_e, \\Delta \\phi_e)`, is computed as the"
" cartesian distance between the desired and current task-space positions, "
"and the shortest distance in :math:`\\mathbb{SO}(3)` between the desired and"
" current task-space orientations."
msgstr ""
"逆向运动学将任务空间的跟踪误差转换为关节空间的误差。在其最典型的实现中，任务空间中的位姿误差， :math:`\\Delta \\chi_e = "
"(\\Delta p_e, \\Delta \\phi_e)` "
"，被计算为期望任务空间位置与当前任务空间位置之间的笛卡尔距离，以及期望任务空间方向与当前任务空间方向之间在 "
":math:`\\mathbb{SO}(3)` 中的最短距离。"

#: ../../source/overview/core-concepts/motion_generators.rst:150
msgid ""
"Using the geometric Jacobian :math:`J_{eO} \\in \\mathbb{R}^{6 \\times n}`, "
"that relates task-space velocity to joint-space velocities, we design the "
"control law to obtain the desired joint positions as:"
msgstr ""
"使用几何雅可比矩阵 :math:`J_{eO} \\in \\mathbb{R}^{6 \\times n}` "
"，它将任务空间的速度与关节空间的速度关联起来，我们设计控制律以获得期望的关节位置，如下所示:"

#: ../../source/overview/core-concepts/motion_generators.rst:153
msgid "q_{des} = q + \\eta J_{eO}^{-} \\Delta \\chi_e"
msgstr "q_{des} = q + \\eta J_{eO}^{-} \\Delta \\chi_e"

#: ../../source/overview/core-concepts/motion_generators.rst:157
msgid ""
"where :math:`\\eta` is a scaling parameter and :math:`J_{eO}^{-}` is the "
"pseudo-inverse of the Jacobian."
msgstr "其中 :math:`\\eta` 是一个缩放参数，而 :math:`J_{eO}^{-}` 是雅可比矩阵的伪逆。"

#: ../../source/overview/core-concepts/motion_generators.rst:159
msgid ""
"It is possible to compute the pseudo-inverse of the Jacobian using different"
" formulations:"
msgstr "可以使用不同的公式计算雅可比矩阵的伪逆:"

#: ../../source/overview/core-concepts/motion_generators.rst:161
msgid "Moore-Penrose pseduo-inverse: :math:`A^{-} = A^T(AA^T)^{-1}`."
msgstr "摩尔-彭罗斯伪逆: :math:`A^{-} = A^T(AA^T)^{-1}` 。"

#: ../../source/overview/core-concepts/motion_generators.rst:162
msgid ""
"Levenberg-Marquardt pseduo-inverse (damped least-squares): :math:`A^{-} = "
"A^T (AA^T + \\lambda \\mathbb{I})^{-1}`."
msgstr ""
"Levenberg-Marquardt 伪逆 (阻尼最小二乘法): :math:`A^{-} = A^T (AA^T + \\lambda "
"\\mathbb{I})^{-1}`."

#: ../../source/overview/core-concepts/motion_generators.rst:163
msgid "Tanspose pseudo-inverse: :math:`A^{-} = A^T`."
msgstr "转置伪逆: :math:`A^{-} = A^T` 。"

#: ../../source/overview/core-concepts/motion_generators.rst:164
msgid ""
"Adaptive singular-vale decomposition (SVD) pseduo-inverse from "
":cite:t:`buss2004ik`."
msgstr "自适应奇异值分解（SVD）伪逆来自 :cite:t:`buss2004ik` 。"

#: ../../source/overview/core-concepts/motion_generators.rst:166
msgid ""
"These implementations are available through the "
":class:`DifferentialInverseKinematics` class."
msgstr "这些实现可以通过 :class:`DifferentialInverseKinematics` 类访问。"

#: ../../source/overview/core-concepts/motion_generators.rst:169
msgid "Impedance controller"
msgstr "阻抗控制器"

#: ../../source/overview/core-concepts/motion_generators.rst:172
msgid ""
"It uses task-space pose error and Jacobian to compute join torques through "
"mass-spring-damper system with a) fixed stiffness, b) variable stiffness "
"(stiffness control), and c) variable stiffness and damping (impedance "
"control)."
msgstr ""
"它使用任务空间位姿误差和雅可比矩阵，通过质量-弹簧-阻尼系统计算关节扭矩，其中包括 a) 固定刚度，b) 变量刚度（刚度控制），以及 c) "
"变量刚度和阻尼（阻抗控制）。"

#: ../../source/overview/core-concepts/motion_generators.rst:177
msgid "Operational-space controller"
msgstr "操作空间控制器"

#: ../../source/overview/core-concepts/motion_generators.rst:179
msgid ""
"Similar to task-space impedance control but uses the Equation of Motion "
"(EoM) for computing the task-space force"
msgstr "类似于任务空间阻抗控制，但使用运动方程（EoM）来计算任务空间力"

#: ../../source/overview/core-concepts/motion_generators.rst:184
msgid "Closed-loop proportional force controller"
msgstr "闭环比例力控制器"

#: ../../source/overview/core-concepts/motion_generators.rst:186
msgid ""
"It uses a proportional term to track the desired wrench command with respect"
" to current wrench at the end-effector."
msgstr "它使用比例项来跟踪相对于末端执行器当前扭矩的期望扭矩命令。"

#: ../../source/overview/core-concepts/motion_generators.rst:191
msgid "Hybrid force-motion controller"
msgstr "混合力-运动控制器"

#: ../../source/overview/core-concepts/motion_generators.rst:193
msgid ""
"It combines closed-loop force control and operational-space motion control "
"to compute the desired wrench at the end-effector. It uses selection "
"matrices that define the unconstrainted and constrained task directions."
msgstr "它结合了闭环力控制和操作空间运动控制，以计算末端执行器所需的扭矩。它使用选择矩阵来定义无约束和受约束的任务方向。"

#: ../../source/overview/core-concepts/motion_generators.rst:200
msgid "Reactive planners"
msgstr "反应式规划器"

#: ../../source/overview/core-concepts/motion_generators.rst:202
msgid ""
"Typical task-space controllers do not account for motion constraints such as"
" joint limits, self-collision and environment collision. Instead they rely "
"on high-level planners (such as RRT) to handle these non-Euclidean "
"constraints and give joint/task-space way-points to the controller. However,"
" these methods are often conservative and have undesirable deceleration when"
" close to an object. More recently, different approaches combine the "
"constraints directly into an optimization problem, thereby providing a "
"holistic solution for motion generation and control."
msgstr ""
"典型的任务空间控制器并没有考虑诸如关节限制、自碰撞和环境碰撞等运动约束。相反，它们依赖于高级规划器（例如 RRT "
"）来处理这些非欧几里得约束，并将关节/任务空间的路径点传递给控制器。然而，这些方法通常比较保守，并且在靠近物体时会出现不理想的减速。最近，不同的方法将约束直接整合到优化问题中，从而为运动生成和控制提供了一个整体解决方案。"

#: ../../source/overview/core-concepts/motion_generators.rst:212
msgid "We currently support the following planners:"
msgstr "我们当前支持以下规划器:"

#: ../../source/overview/core-concepts/motion_generators.rst:214
msgid ""
"**RMPFlow (lula):** An acceleration-based policy that composes various "
"Reimannian Motion Policies (RMPs) to solve a hierarchy of tasks "
":cite:p:`cheng2021rmpflow`. It is capable of performing dynamic collision "
"avoidance while navigating the end-effector to a target."
msgstr ""
"**RMPFlow (lula):** 一种基于加速度的策略，通过组合各种黎曼运动策略（RMPs）来解决任务层次结构 "
":cite:p:`cheng2021rmpflow` 。它能够在将末端执行器导航到目标的同时执行动态避碰。"

#: ../../source/overview/core-concepts/motion_generators.rst:218
msgid ""
"**MPC (OCS2):** A receding horizon control policy based on sequential "
"linear-quadratic (SLQ) programming. It formulates various constraints into a"
" single optimization problem via soft-penalties and uses automatic "
"differentiation to compute derivatives of the system dynamics, constraints "
"and costs. Currently, we support the MPC formulation for end-effector "
"trajectory tracking in fixed-arm and mobile manipulators. The formulation "
"considers a kinematic system model with joint limits and self-collision "
"avoidance :cite:p:`mittal2021articulated`."
msgstr ""
"**MPC (OCS2):** 一种基于顺序线性二次 (SLQ) "
"编程的后退式控制策略。它通过软惩罚将各种约束条件公式化为一个单一的优化问题，并使用自动微分计算系统动态、约束和成本的导数。目前，我们支持固定臂和移动机械臂中末端执行器轨迹跟踪的MPC公式。该公式考虑了具有关节限制和自碰撞避免的运动学系统模型"
" :cite:p:`mittal2021articulated` 。"

#: ../../source/overview/core-concepts/motion_generators.rst:227
msgid ""
"We wrap around the python bindings for these reactive planners to perform a "
"batched computing of robot actions. However, their current implementations "
"are CPU-based which may cause certain slowdown for learning."
msgstr ""
"我们围绕这些反应式规划器的 Python 绑定进行包装，以执行机器人动作的批处理计算。然而，它们当前的实现是基于 CPU "
"的，这可能会导致学习过程中的某些性能下降。"
