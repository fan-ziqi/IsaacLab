# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 2.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 11:21+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/overview/core-concepts/sensors/index.rst:4
msgid "Sensors"
msgstr "传感器"

#: ../../source/overview/core-concepts/sensors/index.rst:6
msgid ""
"In this section, we will overview the various sensor APIs provided by Isaac "
"Lab."
msgstr "本节将概述 Isaac Lab 提供的各种传感器 API。"

#: ../../source/overview/core-concepts/sensors/index.rst:8
msgid ""
"Every sensor in Isaac Lab inherits from the ``SensorBase`` abstract class "
"that provides the core functionality inherent to all sensors, which is to "
"provide access to \"measurements\" of the scene. These measurements can take"
" many forms such as ray-casting results, camera rendered images, or even "
"simply ground truth data queried directly from the simulation (such as "
"poses). Whatever the data may be, we can think of the sensor as having a "
"buffer that is periodically updated with measurements by querying the scene."
" This ``update_period`` is defined in \"simulated\" seconds, meaning that "
"even if the flow of time in the simulation is dilated relative to the real "
"world, the sensor will update at the appropriate rate. The ``SensorBase`` is"
" also designed with vectorizability in mind, holding the buffers for all "
"copies of the sensor across cloned environments."
msgstr ""
"Isaac Lab 中的所有传感器都继承自 ``SensorBase`` 抽象类，该类提供了所有传感器的核心功能，即访问场景的 \"测量值\" "
"。这些测量值可以采取多种形式，例如光线投射结果、摄像机渲染图像，甚至直接从仿真中查询的真实数据（如位姿）。无论数据类型如何，我们都可以将传感器视为一个缓冲区，它通过定期查询场景来更新测量值。"
" ``update_period`` 以 \"仿真\" 秒为单位定义，这意味着即使仿真中的时间流逝相对于现实世界有所变化，传感器仍会以适当的速率更新。 "
"``SensorBase`` 还支持向量化设计，能够管理所有克隆环境中的传感器副本缓冲区。"

#: ../../source/overview/core-concepts/sensors/index.rst:10
msgid ""
"Updating the buffers is done by overriding the ``_update_buffers_impl`` "
"abstract method of the ``SensorBase`` class. On every time-step of the "
"simulation, ``dt``, all sensors are queried for an update. During this "
"query, the total time since the last update is incremented by ``dt`` for "
"every buffer managed by that particular sensor. If the total time is greater"
" than or equal to the ``update_period`` for a buffer, then that buffer is "
"flagged to be updated on the next query."
msgstr ""
"要更新缓冲区，需要重写 ``SensorBase`` 类的 ``_update_buffers_impl`` 抽象方法。在仿真的每个时间步 ``dt``"
" ，所有传感器都会被查询以进行更新。在此查询过程中，每个缓冲区自上次更新以来的累计时间都会增加 ``dt`` 。如果累计时间大于或等于缓冲区的 "
"``update_period`` ，则该缓冲区将在下一次查询时被标记为需更新。"

#: ../../source/overview/core-concepts/sensors/index.rst:12
msgid "The following pages describe the available sensors in more detail:"
msgstr "以下页面将更详细地介绍可用的传感器: "
