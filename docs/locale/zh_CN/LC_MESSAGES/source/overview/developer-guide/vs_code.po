# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 11:21+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/overview/developer-guide/vs_code.rst:4
msgid "Setting up Visual Studio Code"
msgstr "在使用Visual Studio Code前的设置"

#: ../../source/overview/developer-guide/vs_code.rst:6
msgid "**This is optional.  You do not need to use VScode to use Isaac Lab**"
msgstr "这是可选的。您不需要使用 VScode 来使用 Isaac Lab。"

#: ../../source/overview/developer-guide/vs_code.rst:8
msgid ""
"`Visual Studio Code <https://code.visualstudio.com/>`_ has proven an "
"invaluable tool for the development of Isaac Lab. The Isaac Lab repository "
"includes the VSCode files for setting up your development environment. These"
" are included in the ``.vscode`` directory and include the following files:"
msgstr ""
"`Visual Studio Code <https://code.visualstudio.com/>`_ 已证明是开发 Isaac Lab "
"的一个宝贵工具。Isaac Lab 仓库包含了用于设置开发环境的 VSCode 文件。这些文件包含在 ``.vscode`` 目录中，并包括以下文件:"

#: ../../source/overview/developer-guide/vs_code.rst:25
msgid ""
"The following instructions on setting up Visual Studio Code only work with "
":ref:`Isaac Sim Binaries Installation <isaaclab-binaries-installation>` and "
"not with :ref:`Pip Installation <isaaclab-pip-installation>`."
msgstr ""
"以下关于设置 Visual Studio Code 的说明仅适用于 :ref:`Isaac Sim 二进制安装 <isaaclab-binaries-"
"installation>` ，而不适用于 :ref:`Pip 安装 <isaaclab-pip-installation>` 。"

#: ../../source/overview/developer-guide/vs_code.rst:30
msgid "To setup the IDE, please follow these instructions:"
msgstr "要设置 IDE，请按照以下说明操作: "

#: ../../source/overview/developer-guide/vs_code.rst:32
msgid "Open the ``IsaacLab`` directory on Visual Studio Code IDE"
msgstr "打开 ``IsaacLab`` 目录在Visual Studio Code IDE。"

#: ../../source/overview/developer-guide/vs_code.rst:33
msgid ""
"Run VSCode `Tasks <https://code.visualstudio.com/docs/editor/tasks>`__, by "
"pressing ``Ctrl+Shift+P``, selecting ``Tasks: Run Task`` and running the "
"``setup_python_env`` in the drop down menu."
msgstr ""
"运行 VSCode `Tasks <https://code.visualstudio.com/docs/editor/tasks>`__ ，通过按下 "
"``Ctrl+Shift+P`` ，选择 ``Tasks: Run Task`` 并在下拉菜单中运行 ``setup_python_env`` 。"

#: ../../source/overview/developer-guide/vs_code.rst
msgid "VSCode Tasks"
msgstr "VSCode 任务"

#: ../../source/overview/developer-guide/vs_code.rst:44
msgid ""
"If this is your first time running tasks in VS Code, you may be prompted to "
"select how to handle warnings. Simply follow the prompts until the task "
"window closes."
msgstr "如果这是您第一次在 VS Code 中运行任务，系统可能会提示您选择如何处理警告。只需按照提示操作，直到任务窗口关闭。"

#: ../../source/overview/developer-guide/vs_code.rst:47
msgid ""
"If everything executes correctly, it should create the following files:"
msgstr "如果一切执行正确，它应该创建以下文件: "

#: ../../source/overview/developer-guide/vs_code.rst:49
msgid ""
"``.vscode/launch.json``: Contains the launch configurations for debugging "
"python code."
msgstr "``.vscode/launch.json``: 包含用于调试 python 代码的启动配置。"

#: ../../source/overview/developer-guide/vs_code.rst:50
msgid ""
"``.vscode/settings.json``: Contains the settings for the python interpreter "
"and the python environment."
msgstr "``.vscode/settings.json``: 包含 python 解释器和 python 环境的设置。"

#: ../../source/overview/developer-guide/vs_code.rst:52
msgid ""
"For more information on VSCode support for Omniverse, please refer to the "
"following links:"
msgstr "有关 VSCode 对 Omniverse 的支持的更多信息，请参考以下链接: "

#: ../../source/overview/developer-guide/vs_code.rst:55
msgid ""
"`Isaac Sim VSCode support "
"<https://docs.omniverse.nvidia.com/app_isaacsim/app_isaacsim/manual_standalone_python.html#isaac-"
"sim-python-vscode>`__"
msgstr ""
"`Isaac Sim VSCode 支持 "
"<https://docs.omniverse.nvidia.com/app_isaacsim/app_isaacsim/manual_standalone_python.html#isaac-"
"sim-python-vscode>`__"

#: ../../source/overview/developer-guide/vs_code.rst:56
msgid ""
"`Debugging with VSCode "
"<https://docs.isaacsim.omniverse.nvidia.com/latest/development_tools/vscode.html#visual-"
"studio-code-vs-code>`__"
msgstr ""
"`使用 VSCode 进行调试 "
"<https://docs.isaacsim.omniverse.nvidia.com/latest/development_tools/vscode.html#visual-"
"studio-code-vs-code>`__"

#: ../../source/overview/developer-guide/vs_code.rst:60
msgid "Configuring the python interpreter"
msgstr "配置 Python 解释器"

#: ../../source/overview/developer-guide/vs_code.rst:62
msgid ""
"In the provided configuration, we set the default python interpreter to use "
"the python executable provided by Omniverse. This is specified in the "
"``.vscode/settings.json`` file:"
msgstr ""
"在提供的配置中，我们将默认的 python 解释器设置为使用 Omniverse 提供的 python 可执行文件。这在 "
"``.vscode/settings.json`` 文件中指定: "

#: ../../source/overview/developer-guide/vs_code.rst:72
msgid ""
"If you want to use a different python interpreter (for instance, from your "
"conda environment), you need to change the python interpreter used by "
"selecting and activating the python interpreter of your choice in the bottom"
" left corner of VSCode, or opening the command palette (``Ctrl+Shift+P``) "
"and selecting ``Python: Select Interpreter``."
msgstr ""
"如果你想使用不同的 python 解释器（例如，从你的 conda 环境），你需要通过选择并激活你在 VSCode 左下角选择的 python "
"解释器来更改使用的 python 解释器，或者打开命令面板（``Ctrl+Shift+P`` ）并选择 ``Python: Select "
"Interpreter`` 。"

#: ../../source/overview/developer-guide/vs_code.rst:77
msgid ""
"For more information on how to set python interpreter for VSCode, please "
"refer to the `VSCode documentation "
"<https://code.visualstudio.com/docs/python/environments#_working-with-"
"python-interpreters>`_."
msgstr ""
"有关如何为 VSCode 设置 Python 解释器的更多信息，请参考 `VSCode documentation "
"<https://code.visualstudio.com/docs/python/environments#_working-with-"
"python-interpreters>`_ 。"
