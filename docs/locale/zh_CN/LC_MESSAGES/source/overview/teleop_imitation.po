# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-31 19:21+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/overview/teleop_imitation.rst:2
msgid "Teleoperation and Imitation Learning"
msgstr "遥操作和模仿学习"

#: ../../source/overview/teleop_imitation.rst:6
msgid "Teleoperation"
msgstr "遥操作"

#: ../../source/overview/teleop_imitation.rst:8
msgid ""
"We provide interfaces for providing commands in SE(2) and SE(3) space for"
" robot control. In case of SE(2) teleoperation, the returned command is "
"the linear x-y velocity and yaw rate, while in SE(3), the returned "
"command is a 6-D vector representing the change in pose."
msgstr ""
"我们提供接口以便在 SE(2) 和 SE(3) 空间中提供机器人控制命令。在 SE(2) 遥操作的情况下，返回的命令是x-"
"y线速度和yaw角度率，而在 SE(3) 中，返回的命令是一个表示姿态变化的 6-D 向量。"

#: ../../source/overview/teleop_imitation.rst:13
msgid "To play inverse kinematics (IK) control with a keyboard device:"
msgstr "要使用键盘设备进行反向运动学（IK）控制: "

#: ../../source/overview/teleop_imitation.rst:19
msgid ""
"For smoother operation and off-axis operation, we recommend using a "
"SpaceMouse as the input device. Providing smoother demonstrations will "
"make it easier for the policy to clone the behavior. To use a SpaceMouse,"
" simply change the teleop device accordingly:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:27
msgid ""
"If the SpaceMouse is not detected, you may need to grant additional user "
"permissions by running ``sudo chmod 666 /dev/hidraw<#>`` where ``<#>`` "
"corresponds to the device index of the connected SpaceMouse."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:30
msgid ""
"To determine the device index, list all ``hidraw`` devices by running "
"``ls -l /dev/hidraw*``. Identify the device corresponding to the "
"SpaceMouse by running ``cat /sys/class/hidraw/hidraw<#>/device/uevent`` "
"on each of the devices listed from the prior step."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:34
msgid ""
"Only compatible with the SpaceMouse Wireless and SpaceMouse Compact "
"models from 3Dconnexion."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:36
msgid ""
"The script prints the teleoperation events configured. For keyboard, "
"these are as follows:"
msgstr "脚本打印配置的遥操作事件。对于键盘，它们如下: "

#: ../../source/overview/teleop_imitation.rst:51
msgid "For SpaceMouse, these are as follows:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:62
msgid ""
"The next section describes how teleoperation devices can be used for data"
" collection for imitation learning."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:66
msgid "Imitation Learning"
msgstr "模仿学习"

#: ../../source/overview/teleop_imitation.rst:68
msgid ""
"Using the teleoperation devices, it is also possible to collect data for "
"learning from demonstrations (LfD). For this, we provide scripts to "
"collect data into the open HDF5 format."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:72
msgid "Collecting demonstrations"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:74
msgid ""
"To collect demonstrations with teleoperation for the environment ``Isaac-"
"Stack-Cube-Franka-IK-Rel-v0``, use the following commands:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:89
msgid ""
"The order of the stacked cubes should be blue (bottom), red (middle), "
"green (top)."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:91
msgid ""
"About 10 successful demonstrations are required in order for the "
"following steps to succeed."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:93
msgid ""
"Here are some tips to perform demonstrations that lead to successful "
"policy training:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:95
msgid ""
"Keep demonstrations short. Shorter demonstrations mean fewer decisions "
"for the policy, making training easier."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:96
msgid ""
"Take a direct path. Do not follow along arbitrary axis, but move straight"
" toward the goal."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:97
msgid ""
"Do not pause. Perform smooth, continuous motions instead. It is not "
"obvious for a policy why and when to pause, hence continuous motions are "
"easier to learn."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:99
msgid ""
"If, while performing a demonstration, a mistake is made, or the current "
"demonstration should not be recorded for some other reason, press the "
"``R`` key to discard the current demonstration, and reset to a new "
"starting position."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:102
msgid ""
"Non-determinism may be observed during replay as physics in IsaacLab are "
"not determimnistically reproducible when using ``env.reset``."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:105
msgid "Pre-recorded demonstrations"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:107
msgid ""
"We provide a pre-recorded ``dataset.hdf5`` containing 10 human "
"demonstrations for ``Isaac-Stack-Cube-Franka-IK-Rel-v0`` `here <https"
"://omniverse-content-production.s3-us-"
"west-2.amazonaws.com/Assets/Isaac/4.5/Isaac/IsaacLab/Mimic/dataset.hdf5>`_."
" This dataset may be downloaded and used in the remaining tutorial steps "
"if you do not wish to collect your own demonstrations."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:111
msgid "Use of the pre-recorded dataset is optional."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:114
msgid "Generating additional demonstrations"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:116
msgid "Additional demonstrations can be generated using Isaac Lab Mimic."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:118
msgid ""
"Isaac Lab Mimic is a feature in Isaac Lab that allows generation of "
"additional demonstrations automatically, allowing a policy to learn "
"successfully even from just a handful of manual demonstrations."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:120
msgid ""
"In order to use Isaac Lab Mimic with the recorded dataset, first annotate"
" the subtasks in the recording:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:126
msgid "Then, use Isaac Lab Mimic to generate some additional demonstrations:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:134
msgid ""
"The output_file of the ``annotate_demos.py`` script is the input_file to "
"the ``generate_dataset.py`` script"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:138
msgid ""
"Isaac Lab is designed to work with manipulators with grippers. The "
"gripper commands in the demonstrations are extracted separately and "
"temporally replayed during the generation of additional demonstrations."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:140
msgid ""
"Inspect the output of generated data (filename: "
"``generated_dataset_small.hdf5``), and if satisfactory, generate the full"
" dataset:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:146
msgid ""
"The number of demonstrations can be increased or decreased, 1000 "
"demonstrations have been shown to provide good training results for this "
"task."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:148
msgid ""
"Additionally, the number of environments in the ``--num_envs`` parameter "
"can be adjusted to speed up data generation. The suggested number of 10 "
"can be executed even on a laptop GPU. On a more powerful desktop machine,"
" set it to 100 or higher for significant speedup of this step."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:151
msgid "Robomimic setup"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:153
msgid ""
"As an example, we will train a BC agent implemented in `Robomimic "
"<https://robomimic.github.io/>`__ to train a policy. Any other framework "
"or training method could be used."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:155
msgid "To install the robomimic framework, use the following commands:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:165
msgid "Training an agent"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:167
msgid ""
"We can now train a BC agent for ``Isaac-Stack-Cube-Franka-IK-Rel-v0`` "
"using the Mimic generated data:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:173
msgid ""
"By default, the training script will save a model checkpoint every 100 "
"epochs. The trained models and logs will be saved to logs/robomimic"
"/Isaac-Stack-Cube-Franka-IK-Rel-v0/bc"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:176
msgid "Visualizing results"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:178
msgid ""
"By inferencing using the generated model, we can visualize the results of"
" the policy in the same environment:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:186
msgid "Common Pitfalls when Generating Data"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:188
msgid "**Demonstrations are too long:**"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:190
msgid "Longer time horizon is harder to learn for a policy"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:191
msgid "Start close to the first object and minimize motions"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:193
msgid "**Demonstrations are not smooth:**"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:195
msgid "Irregular motion is hard for policy to decipher"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:196
msgid ""
"Better teleop devices result in better data (i.e. SpaceMouse is better "
"than Keyboard)"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:198
msgid "**Pauses in demonstrations:**"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:200
msgid "Pauses are difficult to learn"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:201
msgid "Keep the human motions smooth and fluid"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:203
msgid "**Excessive number of subtasks:**"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:205
msgid "Minimize the number of defined subtasks for completing a given task"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:206
msgid ""
"Less subtacks results in less stitching of trajectories, yielding higher "
"data generation success rate"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:208
msgid "**Lack of action noise:**"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:210
msgid "Action noise makes policies more robust"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:212
msgid "**Recording cropped too tight:**"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:214
msgid ""
"If recording stops on the frame the success term triggers, it may not re-"
"trigger during replay"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:215
msgid "Allow for some buffer at the end of recording"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:217
msgid "**Non-deterministic replay:**"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:219
msgid ""
"Physics in IsaacLab are not deterministically reproducible when using "
"``env.reset`` so demonstrations may fail on replay"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:220
msgid ""
"Collect more human demos than needed, use the ones that succeed during "
"annotation"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:221
msgid ""
"All data in Isaac Lab Mimic generated HDF5 file represent a successful "
"demo and can be used for training (even if non-determinism causes failure"
" when replayed)"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:225
msgid "Creating Your Own Isaac Lab Mimic Compatible Environments"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:228
msgid "How it works"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:230
msgid ""
"Isaac Lab Mimic works by splitting the input demonstrations into "
"subtasks. Subtasks are user-defined segments in the demonstrations that "
"are common to all demonstrations. Examples for subtasks are \"grasp an "
"object\", \"move end effector to some pre-defined position\", \"release "
"object\" etc.. Note that most subtasks are defined with respect to some "
"object that the robot interacts with."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:232
msgid ""
"Subtasks need to be defined, and then annotated for each input "
"demonstration. Annotation can either happen algorithmically by defining "
"heuristics for subtask detection, as was done in the example above, or it"
" can be done manually."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:234
msgid ""
"With subtasks defined and annotated, Isaac Lab Mimic utilizes a small "
"number of helper methods to then transform the subtask segments, and "
"generate new demonstrations by stitching them together to match the new "
"task at hand."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:236
#, python-format
msgid ""
"For each thusly generated candidate demonstration, Isaac Lab Mimic uses a"
" boolean success criteria to determine whether the demonstration "
"succeeded in performing the task, and if so, add it to the output "
"dataset. Success rate of candidate demonstrations can be as high as 70% "
"in simple cases, and as low as <1%, depending on the difficulty of the "
"task, and the complexity of the robot itself."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:239
msgid "Configuration and subtask definition"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:241
msgid ""
"Subtasks, among other configuration settings for Isaac Lab Mimic, are "
"defined in a Mimic compatible environment configuration class that is "
"created by extending the existing environment config with additional "
"Mimic required parameters."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:243
msgid ""
"All Mimic required config parameters are specified in the "
":class:`~isaaclab.envs.MimicEnvCfg` class."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:245
msgid ""
"The config class "
":class:`~isaaclab_mimic.envs.FrankaCubeStackIKRelMimicEnvCfg` serves as "
"an example of creating a Mimic compatible environment config class for "
"the Franka stacking task that was used in the examples above."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:247
msgid ""
"The ``DataGenConfig`` member contains various parameters that influence "
"how data is generated. It is initially sufficient to just set the "
"``name`` parameter, and revise the rest later."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:249
msgid ""
"Subtasks are a list of ``SubTaskConfig`` objects, of which the most "
"important members are:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:251
msgid ""
"``object_ref`` is the object that is being interacted with. This will be "
"used to adjust motions relative to this object during data generation. "
"Can be ``None`` if the current subtask does not involve any object."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:252
msgid ""
"``subtask_term_signal`` is the ID of the signal indicating whether the "
"subtask is active or not."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:255
msgid "Subtask annotation"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:257
msgid ""
"Once the subtasks are defined, they need to be annotated in the source "
"data. There are two methods to annotate source demonstrations for subtask"
" boundaries: Manual annotation or using heuristics."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:259
msgid ""
"It is often easiest to perform manual annotations, since the number of "
"input demonstrations is usually very small. To perform manual "
"annotations, use the ``annotate_demos.py`` script without the ``--auto`` "
"flag. Then press ``B`` to pause, ``N`` to continue, and ``S`` to annotate"
" a subtask boundary."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:261
msgid ""
"For more accurate boundaries, or to speed up repeated processing of a "
"given task for experiments, heuristics can be implemented to perform the "
"same task. Heuristics are observations in the environment. An example how"
" to add subtask terms can be found in "
"``source/isaaclab_tasks/isaaclab_tasks/manager_based/manipulation/stack/stack_env_cfg.py``,"
" where they are added as an observation group called ``SubtaskCfg``. This"
" example is using prebuilt heuristics, but custom heuristics are easily "
"implemented."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:265
msgid "Helpers for demonstration generation"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:267
msgid ""
"Helpers needed for Isaac Lab Mimic are defined in the environment. All "
"tasks that are to be used with Isaac Lab Mimic are derived from the "
":class:`~isaaclab.envs.ManagerBasedRLMimicEnv` base class, and must "
"implement the following functions:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:269
msgid ""
"``get_robot_eef_pose``: Returns the current robot end effector pose in "
"the same frame as used by the robot end effector controller."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:271
msgid ""
"``target_eef_pose_to_action``: Takes a target pose and a gripper action "
"for the end effector controller and returns an action which achieves the "
"target pose."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:273
msgid ""
"``action_to_target_eef_pose``: Takes an action and returns a target pose "
"for the end effector controller."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:275
msgid ""
"``actions_to_gripper_actions``: Takes a sequence of actions and returns "
"the gripper actuation part of the actions."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:277
msgid ""
"``get_object_poses``: Returns the pose of each object in the scene that "
"is used for data generation."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:279
msgid ""
"``get_subtask_term_signals``: Returns a dictionary of binary flags for "
"each subtask in a task. The flag of true is set when the subtask has been"
" completed and false otherwise."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:281
msgid ""
"The class :class:`~isaaclab_mimic.envs.FrankaCubeStackIKRelMimicEnv` "
"shows an example of creating a Mimic compatible environment from an "
"existing Isaac Lab environment."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:284
msgid "Registering the environment"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:286
msgid ""
"Once both Mimic compatible environment and environment config classes "
"have been created, a new Mimic compatible environment can be registered "
"using ``gym.register``. For the Franka stacking task in the examples "
"above, the Mimic environment is registered as ``Isaac-Stack-Cube-Franka-"
"IK-Rel-Mimic-v0``."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:288
msgid "The registered environment is now ready to be used with Isaac Lab Mimic."
msgstr ""
