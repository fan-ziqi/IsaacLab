# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-26 11:51+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/overview/teleop_imitation.rst:4
msgid "Teleoperation and Imitation Learning"
msgstr "遥操作和模仿学习"

#: ../../source/overview/teleop_imitation.rst:8
msgid "Teleoperation"
msgstr "遥操作"

#: ../../source/overview/teleop_imitation.rst:10
msgid ""
"We provide interfaces for providing commands in SE(2) and SE(3) space for"
" robot control. In case of SE(2) teleoperation, the returned command is "
"the linear x-y velocity and yaw rate, while in SE(3), the returned "
"command is a 6-D vector representing the change in pose."
msgstr ""
"我们提供接口以便在 SE(2) 和 SE(3) 空间中提供机器人控制命令。在 SE(2) 遥操作的情况下，返回的命令是x-"
"y线速度和yaw角度率，而在 SE(3) 中，返回的命令是一个表示姿态变化的 6-D 向量。"

#: ../../source/overview/teleop_imitation.rst:15
msgid "To play inverse kinematics (IK) control with a keyboard device:"
msgstr "要使用键盘设备进行反向运动学（IK）控制: "

#: ../../source/overview/teleop_imitation.rst:21
msgid ""
"For smoother operation and off-axis operation, we recommend using a "
"SpaceMouse as the input device. Providing smoother demonstrations will "
"make it easier for the policy to clone the behavior. To use a SpaceMouse,"
" simply change the teleop device accordingly:"
msgstr ""
"为了更流畅的操作和离轴操作，我们推荐使用 SpaceMouse 作为输入设备。提供更流畅的演示将使得策略更容易克隆行为。要使用 "
"SpaceMouse，只需相应地更改远程操作设备:"

#: ../../source/overview/teleop_imitation.rst:29
msgid ""
"If the SpaceMouse is not detected, you may need to grant additional user "
"permissions by running ``sudo chmod 666 /dev/hidraw<#>`` where ``<#>`` "
"corresponds to the device index of the connected SpaceMouse."
msgstr ""
"如果未检测到 SpaceMouse，您可能需要通过运行 ``sudo chmod 666 /dev/hidraw<#>`` "
"来授予额外的用户权限，其中 ``<#>`` 对应于连接的 SpaceMouse 的设备索引。"

#: ../../source/overview/teleop_imitation.rst:32
msgid ""
"To determine the device index, list all ``hidraw`` devices by running "
"``ls -l /dev/hidraw*``. Identify the device corresponding to the "
"SpaceMouse by running ``cat /sys/class/hidraw/hidraw<#>/device/uevent`` "
"on each of the devices listed from the prior step."
msgstr ""
"为了确定设备索引，运行 ``ls -l /dev/hidraw*`` 列出所有 ``hidraw`` 设备。通过运行 ``cat "
"/sys/class/hidraw/hidraw<#>/device/uevent`` 在每个先前步骤列出的设备上，识别与 SpaceMouse "
"对应的设备。"

#: ../../source/overview/teleop_imitation.rst:36
msgid ""
"We recommend using local deployment of Isaac Lab to use the SpaceMouse. "
"If using container deployment (:ref:`deployment-docker`), you must "
"manually mount the SpaceMouse to the ``isaac-lab-base`` container by "
"adding a ``devices`` attribute with the path to the device in your "
"``docker-compose.yaml`` file:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:44
msgid "where ``<#>`` is the device index of the connected SpaceMouse."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:46
msgid ""
"If you are using the IsaacLab + CloudXR container deployment (:ref"
":`cloudxr-teleoperation`), you can add the ``devices`` attribute under "
"the ``services -> isaac-lab-base`` section of the ``docker/docker-compose"
".cloudxr-runtime.patch.yaml`` file."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:49
msgid ""
"Isaac Lab is only compatible with the SpaceMouse Wireless and SpaceMouse "
"Compact models from 3Dconnexion."
msgstr "Isaac Lab 仅兼容 3Dconnexion 的 SpaceMouse Wireless 和 SpaceMouse Compact 型号。"

#: ../../source/overview/teleop_imitation.rst:52
msgid ""
"For tasks that benefit from the use of an extended reality (XR) device "
"with hand tracking, Isaac Lab supports using NVIDIA CloudXR to "
"immersively stream the scene to compatible XR devices for teleoperation. "
"Note that when using hand tracking we recommend using the absolute "
"variant of the task (``Isaac-Stack-Cube-Franka-IK-Abs-v0``), which "
"requires the ``handtracking_abs`` device:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:60
msgid ""
"See :ref:`cloudxr-teleoperation` to learn more about using CloudXR with "
"Isaac Lab."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:63
msgid ""
"The script prints the teleoperation events configured. For keyboard, "
"these are as follows:"
msgstr "脚本打印配置的遥操作事件。对于键盘，它们如下: "

#: ../../source/overview/teleop_imitation.rst:78
msgid "For SpaceMouse, these are as follows:"
msgstr "对于 SpaceMouse，具体如下:"

#: ../../source/overview/teleop_imitation.rst:89
msgid ""
"The next section describes how teleoperation devices can be used for data"
" collection for imitation learning."
msgstr "下一节描述了如何使用遥操作设备进行模仿学习的数据收集。"

#: ../../source/overview/teleop_imitation.rst:93
msgid "Imitation Learning"
msgstr "模仿学习"

#: ../../source/overview/teleop_imitation.rst:95
msgid ""
"Using the teleoperation devices, it is also possible to collect data for "
"learning from demonstrations (LfD). For this, we provide scripts to "
"collect data into the open HDF5 format."
msgstr "使用遥操作设备，还可以收集用于示范学习（LfD）的数据。为此，我们提供脚本将数据收集到开放的 HDF5 格式中。"

#: ../../source/overview/teleop_imitation.rst:99
msgid "Collecting demonstrations"
msgstr "收集演示 `Collecting demonstrations`"

#: ../../source/overview/teleop_imitation.rst:101
msgid ""
"To collect demonstrations with teleoperation for the environment ``Isaac-"
"Stack-Cube-Franka-IK-Rel-v0``, use the following commands:"
msgstr "要收集环境 ``Isaac-Stack-Cube-Franka-IK-Rel-v0`` 的遥操作示范，请使用以下命令:"

#: ../../source/overview/teleop_imitation.rst:116
msgid ""
"The order of the stacked cubes should be blue (bottom), red (middle), "
"green (top)."
msgstr "堆叠立方体的顺序应为蓝色（底部）、红色（中间）、绿色（顶部）。"

#: ../../source/overview/teleop_imitation.rst:120
msgid ""
"When using an XR device, we suggest collecting demonstrations with the "
"``Isaac-Stack-Cube-Frank-IK-Abs-v0`` version of the task and "
"``--teleop_device handtracking_abs``, which controls the end effector "
"using the absolute position of the hand."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:122
msgid ""
"About 10 successful demonstrations are required in order for the "
"following steps to succeed."
msgstr "为了后续步骤成功，通常需要大约 10 次成功演示。"

#: ../../source/overview/teleop_imitation.rst:124
msgid ""
"Here are some tips to perform demonstrations that lead to successful "
"policy training:"
msgstr "以下是一些执行演示并成功进行政策训练的技巧:"

#: ../../source/overview/teleop_imitation.rst:126
msgid ""
"Keep demonstrations short. Shorter demonstrations mean fewer decisions "
"for the policy, making training easier."
msgstr "保持演示简短。简短的演示意味着政策需要做出的决策更少，从而使训练变得更容易。"

#: ../../source/overview/teleop_imitation.rst:127
msgid ""
"Take a direct path. Do not follow along arbitrary axis, but move straight"
" toward the goal."
msgstr "走一条直接的路径。不要沿着任意轴线移动，而是直线朝着目标前进。"

#: ../../source/overview/teleop_imitation.rst:128
msgid ""
"Do not pause. Perform smooth, continuous motions instead. It is not "
"obvious for a policy why and when to pause, hence continuous motions are "
"easier to learn."
msgstr "不要暂停。请执行平滑、连续的动作。由于政策并不明显地解释何时以及为何要暂停，因此连续的动作更容易学习。"

#: ../../source/overview/teleop_imitation.rst:130
msgid ""
"If, while performing a demonstration, a mistake is made, or the current "
"demonstration should not be recorded for some other reason, press the "
"``R`` key to discard the current demonstration, and reset to a new "
"starting position."
msgstr "如果在进行演示时出现错误，或者当前的演示由于其他原因不应被记录，请按 ``R`` 键丢弃当前演示，并重置到新的起始位置。"

#: ../../source/overview/teleop_imitation.rst:133
#: ../../source/overview/teleop_imitation.rst:395
msgid ""
"Non-determinism may be observed during replay as physics in IsaacLab are "
"not determimnistically reproducible when using ``env.reset``."
msgstr "非确定性可能会在回放过程中观察到，因为在使用 ``env.reset`` 时，IsaacLab 中的物理现象无法确定性地重现。"

#: ../../source/overview/teleop_imitation.rst:136
msgid "Pre-recorded demonstrations"
msgstr "预先录制的演示"

#: ../../source/overview/teleop_imitation.rst:138
msgid ""
"We provide a pre-recorded ``dataset.hdf5`` containing 10 human "
"demonstrations for ``Isaac-Stack-Cube-Franka-IK-Rel-v0`` `here <https"
"://omniverse-content-production.s3-us-"
"west-2.amazonaws.com/Assets/Isaac/4.5/Isaac/IsaacLab/Mimic/dataset.hdf5>`_."
" This dataset may be downloaded and used in the remaining tutorial steps "
"if you do not wish to collect your own demonstrations."
msgstr ""
"我们提供了一个预先录制的 ``dataset.hdf5`` ，包含 10 个关于 ``Isaac-Stack-Cube-Franka-IK-"
"Rel-v0`` 的人类示范，您可以在 `这里 <https://omniverse-content-production.s3-us-"
"west-2.amazonaws.com/Assets/Isaac/4.5/Isaac/IsaacLab/Mimic/dataset.hdf5>`_"
" 下载该数据集。如果您不希望收集自己的示范，可以在接下来的教程步骤中使用此数据集。"

#: ../../source/overview/teleop_imitation.rst:143
msgid "Use of the pre-recorded dataset is optional."
msgstr "使用预录制的数据集是可选的。"

#: ../../source/overview/teleop_imitation.rst:146
msgid "Generating additional demonstrations"
msgstr "生成额外的演示 `Generating additional demonstrations`"

#: ../../source/overview/teleop_imitation.rst:148
msgid "Additional demonstrations can be generated using Isaac Lab Mimic."
msgstr "额外的演示可以使用 Isaac Lab Mimic 生成。"

#: ../../source/overview/teleop_imitation.rst:150
msgid ""
"Isaac Lab Mimic is a feature in Isaac Lab that allows generation of "
"additional demonstrations automatically, allowing a policy to learn "
"successfully even from just a handful of manual demonstrations."
msgstr ""
"Isaac Lab Mimic 是 Isaac Lab "
"中的一个功能，允许自动生成额外的示范，从而使得一个策略即使仅通过少量的手动示范也能够成功学习。"

#: ../../source/overview/teleop_imitation.rst:152
msgid ""
"In the following example, we will show how to use Isaac Lab Mimic to "
"generate additional demonstrations that can be used to train either a "
"state-based policy (using the ``Isaac-Stack-Cube-Franka-IK-Rel-Mimic-v0``"
" environment) or visuomotor policy (using the ``Isaac-Stack-Cube-Franka-"
"IK-Rel-Visuomotor-Mimic-v0`` environment)."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:157
msgid ""
"All commands in the following sections must keep a consistent policy "
"type. For example, if choosing to use a state-based policy, then all "
"commands used should be from the \"State-based policy\" tab."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:159
msgid ""
"In order to use Isaac Lab Mimic with the recorded dataset, first annotate"
" the subtasks in the recording:"
msgstr "为了使用 Isaac Lab Mimic 和录制的数据集，首先在录制中注释子任务:"

#: ../../source/overview/teleop_imitation.rst
msgid "State-based policy"
msgstr ""

#: ../../source/overview/teleop_imitation.rst
msgid "Visuomotor policy"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:183
msgid "Then, use Isaac Lab Mimic to generate some additional demonstrations:"
msgstr "然后，使用 Isaac Lab Mimic 生成一些额外的示范:"

#: ../../source/overview/teleop_imitation.rst:208
msgid ""
"The output_file of the ``annotate_demos.py`` script is the input_file to "
"the ``generate_dataset.py`` script"
msgstr ""
"``annotate_demos.py`` 脚本的 output_file 是 ``generate_dataset.py`` 脚本的 "
"input_file。"

#: ../../source/overview/teleop_imitation.rst:210
msgid ""
"Inspect the output of generated data (filename: "
"``generated_dataset_small.hdf5``), and if satisfactory, generate the full"
" dataset:"
msgstr "检查生成的数据输出（文件名: ``generated_dataset_small.hdf5`` ），如果满意，生成完整数据集:"

#: ../../source/overview/teleop_imitation.rst:234
msgid ""
"The number of demonstrations can be increased or decreased, 1000 "
"demonstrations have been shown to provide good training results for this "
"task."
msgstr "展示的数量可以增加或减少，1000 个展示已被证明能够为此任务提供良好的训练结果。"

#: ../../source/overview/teleop_imitation.rst:236
msgid ""
"Additionally, the number of environments in the ``--num_envs`` parameter "
"can be adjusted to speed up data generation. The suggested number of 10 "
"can be executed on a moderate laptop GPU. On a more powerful desktop "
"machine, use a larger number of environments for a significant speedup of"
" this step."
msgstr ""
"此外，可以调整 ``--num_envs`` 参数中的环境数量，以加快数据生成。建议的数量为10，可以在中等规模的笔记本 GPU "
"上执行。在更强大的台式机上，使用更多的环境可以显著加快这一步的速度。"

#: ../../source/overview/teleop_imitation.rst:241
msgid "Robomimic setup"
msgstr "Robomimic 设置"

#: ../../source/overview/teleop_imitation.rst:243
msgid ""
"As an example, we will train a BC agent implemented in `Robomimic "
"<https://robomimic.github.io/>`__ to train a policy. Any other framework "
"or training method could be used."
msgstr ""
"作为一个例子，我们将训练一个在 `Robomimic <https://robomimic.github.io/>`__ 中实现的 BC "
"代理来训练一个策略。可以使用任何其他框架或训练方法。"

#: ../../source/overview/teleop_imitation.rst:245
msgid "To install the robomimic framework, use the following commands:"
msgstr "要安装 robomimic 框架，请使用以下命令:"

#: ../../source/overview/teleop_imitation.rst:255
msgid "Training an agent"
msgstr "训练一个智能体"

#: ../../source/overview/teleop_imitation.rst:257
msgid ""
"Using the Mimic generated data we can now train a state-based BC agent "
"for ``Isaac-Stack-Cube-Franka-IK-Rel-v0``, or a visuomotor BC agent for "
"``Isaac-Stack-Cube-Franka-IK-Rel-Visuomotor-v0``:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:281
#: ../../source/overview/teleop_imitation.rst:469
msgid ""
"By default the trained models and logs will be saved to "
"``IssacLab/logs/robomimic``."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:284
msgid "Visualizing results"
msgstr "可视化结果"

#: ../../source/overview/teleop_imitation.rst:286
msgid ""
"By inferencing using the generated model, we can visualize the results of"
" the policy:"
msgstr "通过使用生成的模型进行推理，我们可以可视化策略的结果:"

#: ../../source/overview/teleop_imitation.rst:311
msgid "Demo: Data Generation and Policy Training for a Humanoid Robot"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:314
msgid ""
"Isaac Lab Mimic supports data generation for robots with multiple end "
"effectors. In the following demonstration, we will show how to generate "
"data to train a Fourier GR-1 humanoid robot to perform a pick and place "
"task."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:318
msgid "Optional: Collect and annotate demonstrations"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:321
msgid "Collect human demonstrations"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:324
msgid ""
"Data collection for the GR-1 humanoid robot environment requires use of "
"an Apple Vision Pro headset. If you do not have access to an Apple Vision"
" Pro, you may skip this step and continue on to the next step: `Generate "
"the dataset`_. A pre-recorded annotated dataset is provided in the next "
"step ."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:329
msgid ""
"The GR1 scene utilizes the wrist poses from the Apple Vision Pro (AVP) as"
" setpoints for a differential IK controller (Pink-IK). The differential "
"IK controller requires the user's wrist pose to be close to the robot's "
"initial or current pose for optimal performance. Rapid movements of the "
"user's wrist may cause it to deviate significantly from the goal state, "
"which could prevent the IK controller from finding the optimal solution. "
"This may result in a mismatch between the user's wrist and the robot's "
"wrist. You can increase the gain of the all `Pink-IK controller's "
"FrameTasks <https://github.com/isaac-sim/IsaacLab-"
"Internal/blob/devel/source/isaaclab_tasks/isaaclab_tasks/manager_based/manipulation/pick_place/pickplace_gr1t2_env_cfg.py>`__"
" to track the AVP wrist poses with lower latency. However, this may lead "
"to more jerky motion. Separately, the finger joints of the robot are "
"retargeted to the user's finger joints using the `dex-retargeting "
"<https://github.com/dexsuite/dex-retargeting>`_ library."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:337
msgid ""
"Set up the CloudXR Runtime and Apple Vision Pro for teleoperation by "
"following the steps in :ref:`cloudxr-teleoperation`. CPU simulation is "
"used in the following steps for better XR performance when running a "
"single environment."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:340
msgid ""
"Collect a set of human demonstrations using the command below. A success "
"demo requires the object to be placed in the bin and for the robot's "
"right arm to be retracted to the starting position. The Isaac Lab Mimic "
"Env GR-1 humanoid robot is set up such that the left hand has a single "
"subtask, while the right hand has two subtasks. The first subtask "
"involves the right hand remaining idle while the left hand picks up and "
"moves the object to the position where the right hand will grasp it. This"
" setup allows Isaac Lab Mimic to interpolate the right hand's trajectory "
"accurately by using the object's pose, especially when poses are "
"randomized during data generation. Therefore, avoid moving the right hand"
" while the left hand picks up the object and brings it to a stable "
"position. We recommend 10 successful demonstrations for good data "
"generation results. An example of a successful demonstration is shown "
"below:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:-1
msgid "GR-1 humanoid robot performing a pick and place task"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:353
msgid "Collect demonstrations by running the following command:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:365
msgid ""
"If a demo fails during data collection, the environment can be reset "
"using the teleoperation controls panel in the XR teleop client on the "
"Apple Vision Pro or via voice control by saying \"reset\". See :ref"
":`teleoperate-apple-vision-pro` for more details."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:368
msgid ""
"The robot uses simplified collision meshes for physics calculations that "
"differ from the detailed visual meshes displayed in the simulation. Due "
"to this difference, you may occasionally observe visual artifacts where "
"parts of the robot appear to penetrate other objects or itself, even "
"though proper collision handling is occurring in the physics simulation."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:371
msgid ""
"When first starting the simulation window, you may encounter the "
"following ``DeprecationWarning`` and ``UserWarning`` error:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:382
msgid ""
"This error can be ignored and will not affect the data collection "
"process. The error will be patched in a future release of Isaac Sim."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:385
msgid ""
"You can replay the collected demonstrations by running the following "
"command:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:399
msgid "Annotate the demonstrations"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:401
msgid ""
"Unlike the prior Franka stacking task, the GR-1 pick and place task uses "
"manual annotation to define subtasks. Each demo requires a single "
"annotation between the first and second subtask of the right arm. This "
"annotation (\"S\" button press) should be done when the right robot arm "
"finishes the \"idle\" subtask and begins to move towards the target "
"object. An example of a correct annotation is shown below:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:409
msgid "Annotate the demonstrations by running the following command:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:421
msgid ""
"The script prints the keyboard commands for manual annotation and the "
"current subtask being annotated:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:437
msgid ""
"If the object does not get placed in the bin during annotation, you can "
"press \"N\" to replay the episode and annotate again. Or you can press "
"\"Q\" to skip the episode and annotate the next one."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:440
msgid "Generate the dataset"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:442
msgid ""
"If you skipped the prior collection and annotation step, download the "
"pre-recorded annotated dataset ``dataset_annotated_gr1.hdf5`` from `here "
"<https://omniverse-content-production.s3-us-"
"west-2.amazonaws.com/Assets/Isaac/4.5/Isaac/IsaacLab/Mimic/dataset_annotated_gr1.hdf5>`_."
" Place the file under ``IsaacLab/datasets`` and run the following command"
" to generate a new dataset with 1000 demonstrations."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:453
msgid "Train a policy"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:455
msgid "Use Robomimic to train a policy for the generated dataset."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:464
msgid ""
"The training script will normalize the actions in the dataset to the "
"range [-1, 1]. The normalization parameters are saved in the model "
"directory under "
"``PATH_TO_MODEL_DIRECTORY/logs/normalization_params.txt``. Record the "
"normalization parameters for later use in the visualization step."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:472
msgid "Visualize the results"
msgstr "可视化结果"

#: ../../source/overview/teleop_imitation.rst:474
msgid ""
"Visualize the results of the trained policy by running the following "
"command, using the normalization parameters recorded in the prior "
"training step:"
msgstr ""

#: ../../source/overview/teleop_imitation.rst:488
msgid ""
"Change the ``NORM_FACTOR`` in the above command with the values generated"
" in the training step."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:491
msgid "Common Pitfalls when Generating Data"
msgstr "生成数据时常见的陷阱"

#: ../../source/overview/teleop_imitation.rst:493
msgid "**Demonstrations are too long:**"
msgstr "演示时间太长:"

#: ../../source/overview/teleop_imitation.rst:495
msgid "Longer time horizon is harder to learn for a policy"
msgstr "更长的时间范围对于策略来说更难学习"

#: ../../source/overview/teleop_imitation.rst:496
msgid "Start close to the first object and minimize motions"
msgstr "从第一个物体开始，尽量减少运动"

#: ../../source/overview/teleop_imitation.rst:498
msgid "**Demonstrations are not smooth:**"
msgstr "演示不流畅:"

#: ../../source/overview/teleop_imitation.rst:500
msgid "Irregular motion is hard for policy to decipher"
msgstr "不规则运动很难被政策解读"

#: ../../source/overview/teleop_imitation.rst:501
msgid ""
"Better teleop devices result in better data (i.e. SpaceMouse is better "
"than Keyboard)"
msgstr "更好的遥控设备带来更好的数据（即 SpaceMouse 比 Keyboard 更好）"

#: ../../source/overview/teleop_imitation.rst:503
msgid "**Pauses in demonstrations:**"
msgstr "**演示中的暂停:**"

#: ../../source/overview/teleop_imitation.rst:505
msgid "Pauses are difficult to learn"
msgstr "暂停是难以学习的"

#: ../../source/overview/teleop_imitation.rst:506
msgid "Keep the human motions smooth and fluid"
msgstr "保持人类动作平滑流畅"

#: ../../source/overview/teleop_imitation.rst:508
msgid "**Excessive number of subtasks:**"
msgstr "**过多的子任务:**"

#: ../../source/overview/teleop_imitation.rst:510
msgid "Minimize the number of defined subtasks for completing a given task"
msgstr "最小化完成给定任务所需定义的子任务数量"

#: ../../source/overview/teleop_imitation.rst:511
msgid ""
"Less subtacks results in less stitching of trajectories, yielding higher "
"data generation success rate"
msgstr "较少的子任务导致较少的轨迹拼接，从而提高了数据生成成功率"

#: ../../source/overview/teleop_imitation.rst:513
msgid "**Lack of action noise:**"
msgstr "**缺乏动作噪音:**"

#: ../../source/overview/teleop_imitation.rst:515
msgid "Action noise makes policies more robust"
msgstr "行动噪声使策略更加稳健"

#: ../../source/overview/teleop_imitation.rst:517
msgid "**Recording cropped too tight:**"
msgstr "**录制裁剪过于紧密:**"

#: ../../source/overview/teleop_imitation.rst:519
msgid ""
"If recording stops on the frame the success term triggers, it may not re-"
"trigger during replay"
msgstr "如果录制在成功项触发的帧上停止，则在回放期间可能不会重新触发"

#: ../../source/overview/teleop_imitation.rst:520
msgid "Allow for some buffer at the end of recording"
msgstr "允许在录音结束时留出一些缓冲区"

#: ../../source/overview/teleop_imitation.rst:522
msgid "**Non-deterministic replay:**"
msgstr "**非确定性重放:**"

#: ../../source/overview/teleop_imitation.rst:524
msgid ""
"Physics in IsaacLab are not deterministically reproducible when using "
"``env.reset`` so demonstrations may fail on replay"
msgstr "在 IsaacLab 中，使用 ``env.reset`` 时，物理模拟无法确定性地复现，因此在回放时，演示可能会失败。"

#: ../../source/overview/teleop_imitation.rst:525
msgid ""
"Collect more human demos than needed, use the ones that succeed during "
"annotation"
msgstr "收集比需要更多的人类示例，使用在标注过程中成功的示例"

#: ../../source/overview/teleop_imitation.rst:526
msgid ""
"All data in Isaac Lab Mimic generated HDF5 file represent a successful "
"demo and can be used for training (even if non-determinism causes failure"
" when replayed)"
msgstr "所有在 Isaac Lab Mimic 生成的 HDF5 文件中的数据都代表一个成功的演示，并且可以用于训练（即使非确定性在重放时导致失败）。"

#: ../../source/overview/teleop_imitation.rst:530
msgid "Creating Your Own Isaac Lab Mimic Compatible Environments"
msgstr "创建您自己的 Isaac Lab Mimic 兼容环境"

#: ../../source/overview/teleop_imitation.rst:533
msgid "How it works"
msgstr "它是如何工作的"

#: ../../source/overview/teleop_imitation.rst:535
msgid ""
"Isaac Lab Mimic works by splitting the input demonstrations into "
"subtasks. Subtasks are user-defined segments in the demonstrations that "
"are common to all demonstrations. Examples for subtasks are \"grasp an "
"object\", \"move end effector to some pre-defined position\", \"release "
"object\" etc.. Note that most subtasks are defined with respect to some "
"object that the robot interacts with."
msgstr ""
"Isaac Lab Mimic 通过将输入的示范分割成子任务来工作。子任务是示范中用户定义的、在所有示范中共有的片段。子任务的例子包括 "
"\"抓取物体\" 、 \"将末端执行器移动到某个预定义位置\" 、 \"释放物体\" "
"等等。请注意，大多数子任务是相对于机器人与之交互的某个物体来定义的。"

#: ../../source/overview/teleop_imitation.rst:537
msgid ""
"Subtasks need to be defined, and then annotated for each input "
"demonstration. Annotation can either happen algorithmically by defining "
"heuristics for subtask detection, as was done in the example above, or it"
" can be done manually."
msgstr "子任务需要被定义，然后为每个输入示例添加注释。注释可以通过定义用于子任务检测的启发式算法来实现，如上面示例中所做的那样，或者也可以手动完成。"

#: ../../source/overview/teleop_imitation.rst:539
msgid ""
"With subtasks defined and annotated, Isaac Lab Mimic utilizes a small "
"number of helper methods to then transform the subtask segments, and "
"generate new demonstrations by stitching them together to match the new "
"task at hand."
msgstr "定义并注释了子任务后，Isaac Lab Mimic 利用少量辅助方法来转换子任务片段，并通过将它们拼接在一起生成新的演示，以匹配当前的任务。"

#: ../../source/overview/teleop_imitation.rst:541
#, python-format
msgid ""
"For each thusly generated candidate demonstration, Isaac Lab Mimic uses a"
" boolean success criteria to determine whether the demonstration "
"succeeded in performing the task, and if so, add it to the output "
"dataset. Success rate of candidate demonstrations can be as high as 70% "
"in simple cases, and as low as <1%, depending on the difficulty of the "
"task, and the complexity of the robot itself."
msgstr ""
"对于每个这样生成的候选演示，Isaac Lab Mimic "
"使用布尔成功标准来判断演示是否成功执行任务，如果成功，则将其添加到输出数据集。候选演示的成功率在简单情况下可以高达 "
"70%，而在复杂任务和机器人本身的复杂性影响下，成功率可能低于 1%。"

#: ../../source/overview/teleop_imitation.rst:544
msgid "Configuration and subtask definition"
msgstr "配置和子任务定义"

#: ../../source/overview/teleop_imitation.rst:546
msgid ""
"Subtasks, among other configuration settings for Isaac Lab Mimic, are "
"defined in a Mimic compatible environment configuration class that is "
"created by extending the existing environment config with additional "
"Mimic required parameters."
msgstr ""
"子任务，除了 Isaac Lab Mimic 的其他配置设置外，还在 Mimic 兼容的环境配置类中定义，该类通过扩展现有的环境配置并加入额外的 "
"Mimic 所需参数来创建。"

#: ../../source/overview/teleop_imitation.rst:548
msgid ""
"All Mimic required config parameters are specified in the "
":class:`~isaaclab.envs.MimicEnvCfg` class."
msgstr "所有 Mimic 所需的配置参数都在 :class:`~isaaclab.envs.MimicEnvCfg` 类中指定。"

#: ../../source/overview/teleop_imitation.rst:550
msgid ""
"The config class "
":class:`~isaaclab_mimic.envs.FrankaCubeStackIKRelMimicEnvCfg` serves as "
"an example of creating a Mimic compatible environment config class for "
"the Franka stacking task that was used in the examples above."
msgstr ""
"配置类 :class:`~isaaclab_mimic.envs.FrankaCubeStackIKRelMimicEnvCfg` "
"作为一个示例，用于创建一个与 Mimic 兼容的环境配置类，适用于上面示例中使用的 Franka 堆叠任务。"

#: ../../source/overview/teleop_imitation.rst:552
msgid ""
"The ``DataGenConfig`` member contains various parameters that influence "
"how data is generated. It is initially sufficient to just set the "
"``name`` parameter, and revise the rest later."
msgstr "``DataGenConfig`` 成员包含各种影响数据生成的参数。最初只需要设置 ``name`` 参数，其他的可以稍后修改。"

#: ../../source/overview/teleop_imitation.rst:554
msgid ""
"Subtasks are a list of :class:`~isaaclab.envs.SubTaskConfig` objects, of "
"which the most important members are:"
msgstr "子任务是一个 :class:`~isaaclab.envs.SubTaskConfig` 对象的列表，其中最重要的成员是:"

#: ../../source/overview/teleop_imitation.rst:556
msgid ""
"``object_ref`` is the object that is being interacted with. This will be "
"used to adjust motions relative to this object during data generation. "
"Can be ``None`` if the current subtask does not involve any object."
msgstr ""
"``object_ref`` 是正在交互的对象。它将用于在数据生成过程中相对于该对象调整动作。如果当前子任务不涉及任何对象，则可以是 "
"``None`` 。"

#: ../../source/overview/teleop_imitation.rst:557
msgid ""
"``subtask_term_signal`` is the ID of the signal indicating whether the "
"subtask is active or not."
msgstr "``subtask_term_signal`` 是指示子任务是否处于活动状态的信号的 ID。"

#: ../../source/overview/teleop_imitation.rst:559
msgid ""
"For multi end-effector environments, subtask ordering between end-"
"effectors can be enforced by specifying subtask constraints. These "
"constraints are defined in the "
":class:`~isaaclab.envs.SubTaskConstraintConfig` class."
msgstr ""

#: ../../source/overview/teleop_imitation.rst:562
msgid "Subtask annotation"
msgstr "子任务注解"

#: ../../source/overview/teleop_imitation.rst:564
msgid ""
"Once the subtasks are defined, they need to be annotated in the source "
"data. There are two methods to annotate source demonstrations for subtask"
" boundaries: Manual annotation or using heuristics."
msgstr "一旦子任务被定义，它们需要在源数据中进行标注。有两种方法可以标注源示范的子任务边界: 手动标注或使用启发式方法。"

#: ../../source/overview/teleop_imitation.rst:566
msgid ""
"It is often easiest to perform manual annotations, since the number of "
"input demonstrations is usually very small. To perform manual "
"annotations, use the ``annotate_demos.py`` script without the ``--auto`` "
"flag. Then press ``B`` to pause, ``N`` to continue, and ``S`` to annotate"
" a subtask boundary."
msgstr ""
"通常手动注释是最简单的，因为输入示例的数量通常非常少。要执行手动注释，请使用 ``annotate_demos.py`` 脚本，且不带 "
"``--auto`` 标志。然后按 ``B`` 暂停，按 ``N`` 继续，按 ``S`` 注释子任务边界。"

#: ../../source/overview/teleop_imitation.rst:568
msgid ""
"For more accurate boundaries, or to speed up repeated processing of a "
"given task for experiments, heuristics can be implemented to perform the "
"same task. Heuristics are observations in the environment. An example how"
" to add subtask terms can be found in "
"``source/isaaclab_tasks/isaaclab_tasks/manager_based/manipulation/stack/stack_env_cfg.py``,"
" where they are added as an observation group called ``SubtaskCfg``. This"
" example is using prebuilt heuristics, but custom heuristics are easily "
"implemented."
msgstr ""
"为了更精确的边界，或为了加速对给定任务的重复处理以进行实验，可以实现启发式方法来执行相同的任务。启发式方法是对环境中的观察。如何添加子任务术语的示例可以在"
" "
"``source/isaaclab_tasks/isaaclab_tasks/manager_based/manipulation/stack/stack_env_cfg.py``"
" 中找到，其中它们作为一个观察组被添加，名为 ``SubtaskCfg`` 。这个示例使用了预构建的启发式方法，但自定义启发式方法也很容易实现。"

#: ../../source/overview/teleop_imitation.rst:572
msgid "Helpers for demonstration generation"
msgstr "生成演示的助手"

#: ../../source/overview/teleop_imitation.rst:574
msgid ""
"Helpers needed for Isaac Lab Mimic are defined in the environment. All "
"tasks that are to be used with Isaac Lab Mimic are derived from the "
":class:`~isaaclab.envs.ManagerBasedRLMimicEnv` base class, and must "
"implement the following functions:"
msgstr ""
"在 Isaac Lab Mimic 中需要的帮助程序是在环境中定义的。所有要与 Isaac Lab Mimic 一起使用的任务都源自 "
":class:`~isaaclab.envs.ManagerBasedRLMimicEnv` 基类，并且必须实现以下功能:"

#: ../../source/overview/teleop_imitation.rst:576
msgid ""
"``get_robot_eef_pose``: Returns the current robot end effector pose in "
"the same frame as used by the robot end effector controller."
msgstr "``get_robot_eef_pose``: 返回当前机器人末端执行器姿态，该姿态与机器人末端执行器控制器使用的坐标系相同。"

#: ../../source/overview/teleop_imitation.rst:578
msgid ""
"``target_eef_pose_to_action``: Takes a target pose and a gripper action "
"for the end effector controller and returns an action which achieves the "
"target pose."
msgstr "``target_eef_pose_to_action``: 获取目标姿态和夹持器动作，供末端执行器控制器使用，并返回一个能够实现目标姿态的动作。"

#: ../../source/overview/teleop_imitation.rst:580
msgid ""
"``action_to_target_eef_pose``: Takes an action and returns a target pose "
"for the end effector controller."
msgstr "``action_to_target_eef_pose``: 采取一个动作并返回末端执行器控制器的目标姿态。"

#: ../../source/overview/teleop_imitation.rst:582
msgid ""
"``actions_to_gripper_actions``: Takes a sequence of actions and returns "
"the gripper actuation part of the actions."
msgstr "``actions_to_gripper_actions ``:接收一系列动作，并返回动作中的夹爪驱动部分。"

#: ../../source/overview/teleop_imitation.rst:584
msgid ""
"``get_object_poses``: Returns the pose of each object in the scene that "
"is used for data generation."
msgstr "``get_object_poses``: 返回场景中用于数据生成的每个对象的姿势。"

#: ../../source/overview/teleop_imitation.rst:586
msgid ""
"``get_subtask_term_signals``: Returns a dictionary of binary flags for "
"each subtask in a task. The flag of true is set when the subtask has been"
" completed and false otherwise."
msgstr ""
"``get_subtask_term_signals``: 返回一个字典，包含任务中每个子任务的二进制标志。当子任务已完成时，标志为 "
"true，否则为 false。"

#: ../../source/overview/teleop_imitation.rst:588
msgid ""
"The class :class:`~isaaclab_mimic.envs.FrankaCubeStackIKRelMimicEnv` "
"shows an example of creating a Mimic compatible environment from an "
"existing Isaac Lab environment."
msgstr ""
"该类 :class:`~isaaclab_mimic.envs.FrankaCubeStackIKRelMimicEnv` 展示了如何从现有的 "
"Isaac Lab 环境创建一个 Mimic 兼容的环境。"

#: ../../source/overview/teleop_imitation.rst:591
msgid "Registering the environment"
msgstr "注册环境"

#: ../../source/overview/teleop_imitation.rst:593
msgid ""
"Once both Mimic compatible environment and environment config classes "
"have been created, a new Mimic compatible environment can be registered "
"using ``gym.register``. For the Franka stacking task in the examples "
"above, the Mimic environment is registered as ``Isaac-Stack-Cube-Franka-"
"IK-Rel-Mimic-v0``."
msgstr ""
"一旦创建了兼容 Mimic 的环境和环境配置类，就可以使用 ``gym.register`` 注册一个新的 Mimic 兼容环境。对于上面示例中的"
" Franka 堆叠任务，Mimic 环境被注册为 ``Isaac-Stack-Cube-Franka-IK-Rel-Mimic-v0`` 。"

#: ../../source/overview/teleop_imitation.rst:595
msgid "The registered environment is now ready to be used with Isaac Lab Mimic."
msgstr "注册的环境现在已准备好与 Isaac Lab Mimic 一起使用。"

#~ msgid ""
#~ "Isaac Lab is designed to work with"
#~ " manipulators with grippers. The gripper"
#~ " commands in the demonstrations are "
#~ "extracted separately and temporally replayed"
#~ " during the generation of additional "
#~ "demonstrations."
#~ msgstr "Isaac Lab 旨在与带有抓取器的操作臂配合使用。演示中的抓取器命令被单独提取，并在生成额外演示时按时间顺序重放。"

#~ msgid ""
#~ "We can now train a BC agent "
#~ "for ``Isaac-Stack-Cube-Franka-IK-"
#~ "Rel-v0`` using the Mimic generated data:"
#~ msgstr "我们现在可以使用 Mimic 生成的数据来训练 ``Isaac-Stack-Cube-Franka-IK-Rel-v0`` 的 BC 代理:"

#~ msgid ""
#~ "By default, the training script will "
#~ "save a model checkpoint every 100 "
#~ "epochs. The trained models and logs "
#~ "will be saved to logs/robomimic/Isaac-"
#~ "Stack-Cube-Franka-IK-Rel-v0/bc"
#~ msgstr ""
#~ "默认情况下，训练脚本将在每 100 个 epoch "
#~ "保存一次模型检查点。训练好的模型和日志将被保存到 logs/robomimic/Isaac-Stack-"
#~ "Cube-Franka-IK-Rel-v0/bc"

