# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-31 20:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/tutorials/05_controllers/run_osc.rst:2
msgid "Using an operational space controller"
msgstr "使用运动空间控制器"

#: ../../source/tutorials/05_controllers/run_osc.rst:6
msgid ""
"Sometimes, controlling the end-effector pose of the robot using a "
"differential IK controller is not sufficient. For example, we might want to "
"enforce a very specific pose tracking error dynamics in the task space, "
"actuate the robot with joint effort/torque commands, or apply a contact "
"force at a specific direction while controlling the motion of the other "
"directions (e.g., washing the surface of the table with a cloth). In such "
"tasks, we can use an operational space controller (OSC)."
msgstr ""
"有时，使用差分IK控制器控制机器人的末端执行器姿势是不够的。例如，我们可能想要在任务空间中强制执行非常特定的姿势跟踪误差动态，用关节力/扭矩命令驱动机器人，或者在控制其他方向的运动时在特定方向施加接触力（例如，用布擦洗桌子表面）。在这种任务中，我们可以使用操作空间控制器（OSC）。"

#: ../../source/tutorials/05_controllers/run_osc.rst:13
msgid "References for the operational space control:"
msgstr "操作空间控制的参考资料:"

#: ../../source/tutorials/05_controllers/run_osc.rst:14
msgid ""
"O Khatib. A unified approach for motion and force control of robot "
"manipulators: The operational space formulation. IEEE Journal of Robotics "
"and Automation, 3(1):43–53, 1987. URL "
"http://dx.doi.org/10.1109/JRA.1987.1087068."
msgstr ""
"O Khatib. A unified approach for motion and force control of robot "
"manipulators: The operational space formulation. IEEE Journal of Robotics "
"and Automation, 3(1):43–53, 1987. URL "
"http://dx.doi.org/10.1109/JRA.1987.1087068."

#: ../../source/tutorials/05_controllers/run_osc.rst:17
msgid ""
"Robot Dynamics Lecture Notes by Marco Hutter (ETH Zurich). URL "
"https://ethz.ch/content/dam/ethz/special-interest/mavt/robotics-n-"
"intelligent-systems/rsl-dam/documents/RobotDynamics2017/RD_HS2017script.pdf"
msgstr ""
"Robot Dynamics Lecture Notes by Marco Hutter (ETH Zurich). URL "
"https://ethz.ch/content/dam/ethz/special-interest/mavt/robotics-n-"
"intelligent-systems/rsl-dam/documents/RobotDynamics2017/RD_HS2017script.pdf"

#: ../../source/tutorials/05_controllers/run_osc.rst:19
msgid ""
"In this tutorial, we will learn how to use an OSC to control the robot. We "
"will use the :class:`controllers.OperationalSpaceController` class to apply "
"a constant force perpendicular to a tilted wall surface while tracking a "
"desired end-effector pose in all the other directions."
msgstr ""
"在本教程中，我们将学习如何使用OSC来控制机器人。我们将使用 "
":class:`controllers.OperationalSpaceController` "
"类，在其他所有方向上跟踪所需的末端执行器姿态的同时，施加一个垂直于倾斜墙面的恒定力。"

#: ../../source/tutorials/05_controllers/run_osc.rst:24
msgid "The Code"
msgstr "代码"

#: ../../source/tutorials/05_controllers/run_osc.rst:26
msgid ""
"The tutorial corresponds to the ``run_osc.py`` script in the "
"``scripts/tutorials/05_controllers`` directory."
msgstr "教程对应于 ``scripts/tutorials/05_controllers`` 目录中的 ``run_osc.py`` 脚本。"

#: ../../source/tutorials/05_controllers/run_osc.rst
msgid "Code for run_osc.py"
msgstr "run_osc.py的代码"

#: ../../source/tutorials/05_controllers/run_osc.rst:39
msgid "Creating an Operational Space Controller"
msgstr "创建一个操作空间控制器"

#: ../../source/tutorials/05_controllers/run_osc.rst:41
msgid ""
"The :class:`~controllers.OperationalSpaceController` class computes the "
"joint efforts/torques for a robot to do simultaneous motion and force "
"control in task space."
msgstr ""
":class:`~controllers.OperationalSpaceController` "
"类计算机器人在任务空间中同时进行运动和力控制时的关节力/扭矩。"

#: ../../source/tutorials/05_controllers/run_osc.rst:44
msgid ""
"The reference frame of this task space could be an arbitrary coordinate "
"frame in Euclidean space. By default, it is the robot's base frame. However,"
" in certain cases, it could be easier to define target coordinates w.r.t. a "
"different frame. In such cases, the pose of this task reference frame, "
"w.r.t. to the robot's base frame, should be provided in the ``set_command`` "
"method's ``current_task_frame_pose_b`` argument. For example, in this "
"tutorial, it makes sense to define the target commands w.r.t. a frame that "
"is parallel to the wall surface, as the force control direction would be "
"then only nonzero in the z-axis of this frame. The target pose, which is set"
" to have the same orientation as the wall surface, is such a candidate and "
"is used as the task frame in this tutorial. Therefore, all the arguments to "
"the :class:`~controllers.OperationalSpaceControllerCfg` should be set with "
"this task reference frame in mind."
msgstr ""
"这个任务空间的参考坐标系可以是欧几里德空间中的任意坐标系。默认情况下，它是机器人的基坐标系。然而，在某些情况下，相对于其他坐标系定义目标坐标会更容易。在这种情况下，应该在"
" ``set_command`` 方法的 ``current_task_frame_pose_b`` "
"参数中提供该任务参考坐标系相对于机器人基坐标系的姿态。例如，在这个教程中，将目标命令相对于与墙面平行的坐标系定义是有意义的，因为这样力控制方向将仅在该坐标系的z轴上非零。设置为具有与墙面相同方向的目标姿态就是这样一个候选项，并在本教程中作为任务坐标系使用。因此，应该以这个任务参考坐标系为考虑来设置所有到"
" :class:`~controllers.OperationalSpaceControllerCfg` 的参数。"

#: ../../source/tutorials/05_controllers/run_osc.rst:54
msgid ""
"For the motion control, the task space targets could be given as absolute "
"(i.e., defined w.r.t. the robot base, ``target_types: \"pose_abs\"``) or "
"relative the the end-effector's current pose (i.e., ``target_types: "
"\"pose_rel\"``). For the force control, the task space targets could be "
"given as absolute (i.e., defined w.r.t. the robot base, ``target_types: "
"\"force_abs\"``). If it is desired to apply pose and force control "
"simultaneously, the ``target_types`` should be a list such as "
"``[\"pose_abs\", \"wrench_abs\"]`` or ``[\"pose_rel\", \"wrench_abs\"]``."
msgstr ""
"对于运动控制，任务空间目标可以被设定为绝对(即，相对于机器人基坐标系定义， ``target_types: \"pose_abs\"``) "
"或相对于末端执行器当前姿态(即，``target_types: \"pose_rel\"``) "
"。对于力控制，任务空间目标可以被设定为绝对(即，相对于机器人基坐标系定义，``target_types: \"force_abs\"``) "
"。如果希望同时应用姿态和力控制，``target_types`` 应该是一个列表，如 ``[\"pose_abs\", "
"\"wrench_abs\"]`` 或 ``[\"pose_rel\", \"wrench_abs\"]`` 。"

#: ../../source/tutorials/05_controllers/run_osc.rst:60
msgid ""
"The axes that the motion and force control will be applied can be specified "
"using the ``motion_control_axes_task`` and ``force_control_axes_task`` "
"arguments, respectively. These lists should consist of 0/1 for all six axes "
"(position and rotation) and be complementary to each other (e.g., for the "
"x-axis, if the ``motion_control_axes_task`` is ``0``, the "
"``force_control_axes_task`` should be ``1``)."
msgstr ""
"运动和力控制将应用的轴可以使用 ``motion_control_axes_task`` 和 ``force_control_axes_task`` "
"参数进行指定。这些列表应包含所有六个轴（位置和旋转）的0/1，并且彼此互补（例如，对于x轴，如果 "
"``motion_control_axes_task`` 为 ``0`` ，则 ``force_control_axes_task`` 应为 ``1``"
" ）。"

#: ../../source/tutorials/05_controllers/run_osc.rst:65
msgid ""
"For the motion control axes, desired stiffness, and damping ratio values can"
" be specified using the ``motion_control_stiffness`` and "
"``motion_damping_ratio_task`` arguments, which can be a scalar (same value "
"for all axes) or a list of six scalars, one value corresponding to each "
"axis. If desired, the stiffness and damping ratio values could be a command "
"parameter (e.g., to learn the values using RL or change them on the go). For"
" this, ``impedance_mode`` should be either ``\"variable_kp\"`` to include "
"the stiffness values within the command or ``\"variable\"`` to include both "
"the stiffness and damping ratio values. In these cases, "
"``motion_stiffness_limits_task`` and ``motion_damping_limits_task`` should "
"be set as well, which puts bounds on the stiffness and damping ratio values."
msgstr ""
"对于运动控制轴，可以使用 ``motion_control_stiffness`` 和 ``motion_damping_ratio_task`` "
"参数指定所需的刚度和阻尼比值，这可以是一个标量（所有轴的相同值）或一个包含六个标量的列表，每个值对应一个轴。如果需要，刚度和阻尼比值可以作为命令参数（例如，使用RL学习这些值或在运行时更改这些值）。为此，"
" ``impedance_mode`` 应为 ``\"variable_kp\"`` 以在命令中包含刚度值，或者为 ``\"variable\"`` "
"以在命令中同时包含刚度和阻尼比值。在这些情况下，还应设置 ``motion_stiffness_limits_task`` 和 "
"``motion_damping_limits_task`` ，这会限制刚度和阻尼比值的范围。"

#: ../../source/tutorials/05_controllers/run_osc.rst:73
msgid ""
"For contact force control, it is possible to apply an open-loop force "
"control by not setting the ``contact_wrench_stiffness_task``, or apply a "
"closed-loop force control (with the feed-forward term) by setting the "
"desired stiffness values using the ``contact_wrench_stiffness_task`` "
"argument, which can be a scalar or a list of six scalars. Please note that, "
"currently, only the linear part of the contact wrench (hence the first three"
" elements of the ``contact_wrench_stiffness_task``) is considered in the "
"closed-loop control, as the rotational part cannot be measured with the "
"contact sensors."
msgstr ""
"对于接触力控制，可以通过不设置 ``contact_wrench_stiffness_task`` "
"来应用开环力控制，或者通过设置所需刚度值来应用带有前馈项的闭环力控制，其使用 ``contact_wrench_stiffness_task`` "
"参数，该参数可以是一个标量或六个标量的列表。请注意，目前只有接触力矩的线性部分（因此是 "
"``contact_wrench_stiffness_task`` 的前三个元素）在闭环控制中被考虑，因为接触传感器无法测量旋转部分。"

#: ../../source/tutorials/05_controllers/run_osc.rst:80
msgid ""
"For the motion control, ``inertial_dynamics_decoupling`` should be set to "
"``True`` to use the robot's inertia matrix to decouple the desired "
"accelerations in the task space. This is important for the motion control to"
" be accurate, especially for rapid movements. This inertial decoupling "
"accounts for the coupling between all the six motion axes. If desired, the "
"inertial coupling between the translational and rotational axes could be "
"ignored by setting the ``partial_inertial_dynamics_decoupling`` to ``True``."
msgstr ""
"对于运动控制，应将 ``inertial_dynamics_decoupling`` 设置为 ``True`` "
"，以使用机器人的惯性矩阵来解耦任务空间中的期望加速度。这对于运动控制的精确性非常重要，特别是对于快速运动。这种惯性解耦考虑了所有六个运动轴之间的耦合。如果需要，可以通过将"
" ``partial_inertial_dynamics_decoupling`` 设置为 ``True`` 来忽略平移和旋转轴之间的惯性耦合。"

#: ../../source/tutorials/05_controllers/run_osc.rst:86
msgid ""
"If it is desired to include the gravity compensation in the operational "
"space command, the ``gravity_compensation`` should be set to ``True``."
msgstr "如果希望在操作空间指令中包含重力补偿，则应将 ``gravity_compensation`` 设置为 ``True`` 。"

#: ../../source/tutorials/05_controllers/run_osc.rst:89
msgid ""
"A final consideration regarding the operational space control is what to do "
"with the null-space of redundant robots. The null-space is the subspace of "
"the joint space that does not affect the task space coordinates. If nothing "
"is done to control the null-space, the robot joints will float without "
"moving the end-effector. This might be undesired (e.g., the robot joints "
"might get close to their limits), and one might want to control the robot "
"behaviour within its null-space. One way to do is to set "
"``nullspace_control`` to ``\"position\"`` (by default it is ``\"none\"``) "
"which integrates a null-space PD controller to attract the robot joints to "
"desired targets without affecting the task space. The behaviour of this "
"null-space controller can be defined using the ``nullspace_stiffness`` and "
"``nullspace_damping_ratio`` arguments. Please note that theoretical "
"decoupling of the null-space and task space accelerations is only possible "
"when ``inertial_dynamics_decoupling`` is set to ``True`` and "
"``partial_inertial_dynamics_decoupling`` is set to ``False``."
msgstr ""
"关于操作空间控制的一个最终考虑是如何处理冗余机器人运动学中的零空间。零空间是关节空间的子空间，它不会影响任务空间坐标。如果没有采取措施来控制零空间，机器人关节将会浮动而不移动末端执行器。这可能是不可取的（例如，机器人关节可能会接近它们的极限），因此可能希望在零空间内控制机器人的行为。一个方法是将"
" ``nullspace_control`` 设置为 ``\"position\"`` （默认值为 ``\"none\"`` ），这将集成一个零空间 PD"
" 控制器，将机器人关节吸引到期望目标，而不影响任务空间。此零空间控制器的行为可以通过 ``nullspace_stiffness`` 和 "
"``nullspace_damping_ratio`` 参数来定义。请注意，零空间和任务空间加速度的理论解耦只有在 "
"``inertial_dynamics_decoupling`` 设置为 ``True`` 且 "
"``partial_inertial_dynamics_decoupling`` 设置为 ``False`` 时才可能。"

#: ../../source/tutorials/05_controllers/run_osc.rst:100
msgid ""
"The included OSC implementation performs the computation in a batched format"
" and uses PyTorch operations."
msgstr "包含的 OSC 实现以批处理格式进行计算，并使用 PyTorch 操作。"

#: ../../source/tutorials/05_controllers/run_osc.rst:102
msgid ""
"In this tutorial, we will use ``\"pose_abs\"`` for controlling the motion in"
" all axes except the z-axis and ``\"wrench_abs\"`` for controlling the force"
" in the z-axis. Moreover, we will include the full inertia decoupling in the"
" motion control and not include the gravity compensation, as the gravity is "
"disabled from the robot configuration. We set the impedance mode to "
"``\"variable_kp\"`` to dynamically change the stiffness values "
"(``motion_damping_ratio_task`` is set to ``1``: the kd values adapt "
"according to kp values to maintain a critically damped response). Finally, "
"``nullspace_control`` is set to use ``\"position\"`` where the joint set "
"points are provided to be the center of the joint position limits."
msgstr ""
"在本教程中，我们将使用 ``\"pose_abs\"`` 控制除 z 轴以外的所有轴的运动，使用 ``\"wrench_abs\"`` 控制 z "
"轴上的力。此外，我们将在运动控制中包括完整的惯性解耦，并且不包括重力补偿，因为机器人配置中禁用了重力。我们将将阻抗模式设置为 "
"``\"variable_kp\"`` ，以动态更改刚度值（ ``motion_damping_ratio_task`` 设置为 ``1``:kd "
"值会根据 kp 值自适应以保持过阻尼响应）。最后，将 ``nullspace_control`` 设置为使用 ``\"position\"`` "
"，其中关节设定点被设置为关节位置限制的中心。"

#: ../../source/tutorials/05_controllers/run_osc.rst:116
msgid "Updating the states of the robot"
msgstr "更新机器人的状态"

#: ../../source/tutorials/05_controllers/run_osc.rst:118
msgid ""
"The OSC implementation is a computation-only class. Thus, it expects the "
"user to provide the necessary information about the robot. This includes the"
" robot's Jacobian matrix, mass/inertia matrix, end-effector pose, velocity, "
"contact force (all in the root frame), and finally, the joint positions and "
"velocities. Moreover, the user should provide gravity compensation vector "
"and null-space joint position targets if required."
msgstr ""
"OSC "
"实现是一个纯计算类。因此，它期望用户提供有关机器人的必要信息。这包括机器人的雅可比矩阵、质量/惯性矩阵、末端执行器姿态、速度和接触力，均在根坐标系中，最后是关节位置和速度。此外，如果需要，用户应提供重力补偿矢量和零空间关节位置目标。"

#: ../../source/tutorials/05_controllers/run_osc.rst:130
msgid "Computing robot command"
msgstr "计算机器人命令"

#: ../../source/tutorials/05_controllers/run_osc.rst:132
msgid ""
"The OSC separates the operation of setting the desired command and computing"
" the desired joint positions. To set the desired command, the user should "
"provide command vector, which  includes the target commands (i.e., in the "
"order they appear in the ``target_types`` argument of the OSC "
"configuration), and the desired stiffness and damping ratio values if the "
"impedance_mode is set to ``\"variable_kp\"`` or ``\"variable\"``. They "
"should be all in the same coordinate frame as the task frame (e.g., "
"indicated with ``_task`` subscript) and concatanated together."
msgstr ""
"OSC 分离了设定期望命令和计算期望关节位置的操作。要设定期望命令，用户应提供命令向量，其中包括目标命令（即在 OSC 配置的 "
"``target_types`` 参数中出现的顺序）以及如果 impedance_mode 设置为 ``\"variable_kp\"`` 或 "
"``\"variable\"`` 时的期望刚度和阻尼比值。它们应该都在与任务框架相同的坐标系中（例如，用 ``_task`` 下标表示）并连接在一起。"

#: ../../source/tutorials/05_controllers/run_osc.rst:139
msgid ""
"In this tutorial, the desired wrench is already defined w.r.t. the task "
"frame, and the desired pose is transformed to the task frame as the "
"following:"
msgstr "在本教程中，期望的力矩已经相对于任务框架进行了定义，并且期望的姿势被转换到任务框架中，如下所示:"

#: ../../source/tutorials/05_controllers/run_osc.rst:147
msgid ""
"The OSC command is set with the command vector in the task frame, the end-"
"effector pose in the base frame, and the task (reference) frame pose in the "
"base frame as the following. This information is needed, as the internal "
"computations are done in the base frame."
msgstr ""
"OSC "
"命令是使用任务坐标系中的命令向量设置的，基坐标系中的末端执行器姿势和基坐标系中的任务（参考）坐标系姿势如下。这些信息是必要的，因为内部计算是在基坐标系中完成的。"

#: ../../source/tutorials/05_controllers/run_osc.rst:156
msgid ""
"The joint effort/torque values are computed using the provided robot states "
"and the desired command as the following:"
msgstr "使用提供的机器人状态和所需命令计算关节力/扭矩值，如下所示:"

#: ../../source/tutorials/05_controllers/run_osc.rst:164
msgid ""
"The computed joint effort/torque targets can then be applied on the robot."
msgstr "计算得出的关节努力/力矩目标随后可以应用于机器人中。"

#: ../../source/tutorials/05_controllers/run_osc.rst:173
msgid "The Code Execution"
msgstr "代码执行"

#: ../../source/tutorials/05_controllers/run_osc.rst:175
msgid "You can now run the script and see the result:"
msgstr "你现在可以运行脚本并查看结果:"

#: ../../source/tutorials/05_controllers/run_osc.rst:181
msgid ""
"The script will start a simulation with 128 robots. The robots will be "
"controlled using the OSC. The current and desired end-effector poses should "
"be displayed using frame markers in addition to the red tilted wall. You "
"should see that the robot reaches the desired pose while applying a constant"
" force perpendicular to the wall surface."
msgstr ""
"该脚本将启动一个包含128个机器人的仿真。将使用OSC进行机器人的控制。当前和期望的末端执行器姿势应该使用框架标记显示，除了红色倾斜墙之外。您应该看到机器人在施加垂直于墙面的恒定力的同时到达期望姿势。"

#: ../../source/tutorials/05_controllers/run_osc.rst:-1
msgid "result of run_osc.py"
msgstr "run_osc.py 的结果"

#: ../../source/tutorials/05_controllers/run_osc.rst:191
msgid ""
"To stop the simulation, you can either close the window or press ``Ctrl+C`` "
"in the terminal."
msgstr "要停止模拟，您可以关闭窗口或在终端中按 ``Ctrl+C`` 。"
