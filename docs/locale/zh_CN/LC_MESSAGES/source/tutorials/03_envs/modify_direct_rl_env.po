# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-21 01:38+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:5
msgid "Modifying an existing Direct RL Environment"
msgstr "修改现有的 Direct RL 环境"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:9
msgid ""
"Having learnt how to create a task in :ref:`tutorial-create-direct-rl-env`, "
"register it in :ref:`tutorial-register-rl-env-gym`, and train it in "
":ref:`tutorial-run-rl-training`, we will now look at how to make minor "
"modifications to an existing task."
msgstr ""
"学习如何在 :ref:`tutorial-create-direct-rl-env` 中创建任务，在 :ref:`tutorial-register-"
"rl-env-gym` 中注册任务，以及在 :ref:`tutorial-run-rl-training` "
"中训练任务后，我们现在将探讨如何对现有任务进行小的修改。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:12
msgid ""
"Sometimes it is necessary to create, due to complexity or variations from "
"existing examples, tasks from scratch. However, in certain situations, it is"
" possible to start from the existing code and introduce minor changes, one "
"by one, to transform them according to our needs."
msgstr ""
"有时由于复杂性或与现有示例的变化，有必要从头开始创建任务。然而，在某些情况下，可以从现有代码开始，逐一进行小的修改，以根据我们的需求进行转换。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:15
msgid ""
"In this tutorial, we will make minor modifications to the direct workflow "
"Humanoid task to change the simple humanoid model to the Unitree H1 humanoid"
" robot without affecting the original code."
msgstr "在本教程中，我们将对直接工作流程中的人形任务进行轻微修改，将简单的人形模型更改为 Unitree H1 人形机器人，而不影响原始代码。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:20
msgid "The Base Code"
msgstr "基础代码"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:22
msgid ""
"For this tutorial, we start from the direct workflow Humanoid environment "
"defined in ``omni.isaac.lab_tasks.direct.humanoid`` module."
msgstr ""
"对于本教程，我们从 ``omni.isaac.lab_tasks.direct.humanoid`` 模块定义的直接工作流 Humanoid 环境开始。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst
msgid "Code for humanoid_env.py"
msgstr "人形环境的代码 `humanoid_env.py`"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:33
msgid "The Changes Explained"
msgstr "变更说明"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:36
msgid "Duplicating the file and registering a new task"
msgstr "复制文件并注册新任务"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:38
msgid ""
"To avoid modifying the code of the existing task, we will make a copy of the"
" file containing the Python code and perform the modification on this copy. "
"Then, in the Isaac Lab project "
"``source/extensions/omni.isaac.lab_tasks/omni/isaac/lab_tasks/direct/humanoid``"
" folder we make a copy of the ``humanoid_env.py`` file and rename it to "
"``h1_env.py``."
msgstr ""
"为了避免修改现有任务的代码，我们将复制包含Python代码的文件，并对该副本进行修改。然后，在Isaac Lab项目 "
"``source/extensions/omni.isaac.lab_tasks/omni/isaac/lab_tasks/direct/humanoid``"
" 文件夹中，我们将复制 ``humanoid_env.py`` 文件并将其重命名为 ``h1_env.py`` 。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:43
msgid ""
"Open the ``h1_env.py`` file in a code editor and replace all the humanoid "
"task name (``HumanoidEnv``) and its configuration (``HumanoidEnvCfg``) "
"instances to ``H1Env`` and ``H1EnvCfg`` respectively. This is necessary to "
"avoid name conflicts during import when registering the environment."
msgstr ""
"在代码编辑器中打开 ``h1_env.py`` 文件，并将所有人形任务名称（ ``HumanoidEnv`` ）及其配置（ "
"``HumanoidEnvCfg`` ）实例分别替换为 ``H1Env`` 和 ``H1EnvCfg`` 。这是为了在注册环境时避免名称冲突而必要的。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:47
msgid ""
"Once the name change has been made, we proceed to add a new entry to "
"register the task under the name ``Isaac-H1-Direct-v0``. To do this, we "
"modify the ``__init__.py`` file in the same working folder and add the "
"following entry. Refer to the :ref:`tutorial-register-rl-env-gym` tutorial "
"for more details about environment registrations."
msgstr ""
"一旦更改名称完成，我们就开始在名称为 ``Isaac-H1-Direct-v0`` 的任务下添加新条目。为此，我们修改同一工作文件夹中的 "
"``__init__.py`` 文件，并添加以下条目。有关环境注册的更多详细信息，请参考 :ref:`tutorial-register-rl-env-"
"gym` 教程。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:53
msgid ""
"If the changes in the task are minimal, it is very likely that the same RL "
"library agent configurations can be used to train it successfully. "
"Otherwise, it is advisable to create new configuration files (adjusting "
"their name during registration under the ``kwargs`` parameter) to avoid "
"altering the original configurations."
msgstr ""
"如果任务中的变化很小，则很可能可以使用相同的 RL 库代理配置成功训练它。否则，建议创建新的配置文件（在 ``kwargs`` "
"参数下注册时调整其名称），以避免更改原始配置。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:69
msgid "Changing the robot"
msgstr "改变机器人"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:71
msgid ""
"The ``H1EnvCfg`` class (in the new created ``h1_env.py`` file) encapsulates "
"the configuration values of the environment, including the assets to be "
"instantiated. Particularly in this example, the ``robot`` property holds the"
" target articulation configuration."
msgstr ""
"``H1EnvCfg`` 类（在新创建的 ``h1_env.py`` "
"文件中）封装了环境的配置值，包括要实例化的资产。特别是在这个例子中，``robot`` 属性保存着目标关节配置。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:74
msgid ""
"Since the Unitree H1 robot is included in the Isaac Lab assets extension "
"(``omni.isaac.lab_assets``) we can just import it and do the replacement "
"directly (under the ``H1EnvCfg.robot`` property), as shown below. Note that "
"we also need to modify the ``joint_gears`` property as it holds robot-"
"specific configuration values."
msgstr ""
"由于 Unitree H1 机器人包含在 Isaac Lab 资产扩展 (``omni.isaac.lab_assets``) "
"中，我们可以直接导入并进行替换 (在 ``H1EnvCfg.robot`` 属性下)，如下所示。请注意，我们还需要修改 ``joint_gears`` "
"属性，因为它包含特定于机器人的配置值。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:82
msgid ""
"If the target robot is not included in the Isaac Lab assets extension, it is"
" possible to load and configure it, from a USD file, by using the "
":class:`~omni.isaac.lab.assets.ArticulationCfg` class."
msgstr ""
"如果目标机器人不包含在Isaac Lab资产扩展中，可以通过使用 "
":class:`~omni.isaac.lab.assets.ArticulationCfg` 类从USD文件加载和配置它。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:85
msgid ""
"See the |franka-direct-link| source code for an example of loading and "
"configuring a robot from a USD file."
msgstr "查看 |franka-direct-link| 源代码以获取从 USD 文件加载和配置机器人的示例。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:86
msgid ""
"Refer to the `Importing a New Asset <../../how-to/import_new_asset.html>`_ "
"tutorial for details on how to import an asset from URDF or MJCF file, and "
"other formats."
msgstr ""
"请参考 `Importing a New Asset <../../how-to/import_new_asset.html>`_ 教程，了解如何从 "
"URDF 或 MJCF 文件以及其他格式导入资产的详细信息。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:98
msgid ""
"The robot changed, and with it the number of joints to control or the number"
" of rigid bodies that compose the articulation, for example. Therefore, it "
"is also necessary to adjust other values in the environment configuration "
"that depend on the characteristics of the robot, such as the number of "
"elements in the observation and action space."
msgstr ""
"机器人发生了变化，因此控制的关节数量或构成关节的刚体数量也发生了变化，例如。因此，还需要调整环境配置中的其他值，这些值依赖于机器人的特性，例如观察和动作空间中的元素数量。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:108
msgid "The Code Execution"
msgstr "代码执行 `The Code Execution`"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:110
msgid ""
"After the minor modification has been done, and similar to the previous "
"tutorial, we can train on the task using one of the available RL workflows "
"for such task."
msgstr "完成了轻微修改之后，类似于之前的教程，我们可以使用其中一个可用的强化学习工作流来对该任务进行训练。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:116
msgid ""
"When the training is finished, we can visualize the result with the "
"following command. To stop the simulation, you can either close the window, "
"or press ``Ctrl+C`` in the terminal where you started the simulation."
msgstr "当训练完成时，我们可以使用以下命令可视化结果。要停止仿真，您可以关闭窗口，或者在启动仿真的终端中按下 ``Ctrl+C`` 。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:-1
msgid "result of training Isaac-H1-Direct-v0 task"
msgstr "训练结果 Isaac-H1-Direct-v0 任务"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:129
msgid ""
"In this tutorial, we learnt how to make minor modifications to an existing "
"environment without affecting the original code."
msgstr "在本教程中，我们学习了如何对现有环境进行轻微修改，而不影响原始代码。"

#: ../../source/tutorials/03_envs/modify_direct_rl_env.rst:131
msgid ""
"It is important to note, however, that while the changes to be made may be "
"small, they may not always work on the first try, as there may be deeper "
"dependencies on the original assets in the environment being modified. In "
"these cases, it is advisable to analyze the code of the available examples "
"in detail in order to make an appropriate adjustment."
msgstr ""
"重要的是要注意，虽然需要进行的更改可能很小，但它们不一定能在第一次尝试时成功，因为在被修改的环境中可能存在对原始资产的更深层依赖关系。在这些情况下，建议详细分析可用示例的代码，以便进行适当的调整。"
