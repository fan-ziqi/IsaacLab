# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-26 11:51+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/how-to/configure_rendering.rst:2
msgid "Configuring Rendering Settings"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:4
msgid ""
"Isaac Lab offers 3 preset rendering modes: performance, balanced, and "
"quality. You can select a mode via a command line argument or from within"
" a script, and customize settings as needed. Adjust and fine-tune "
"rendering to achieve the ideal balance for your workflow."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:9
msgid "Selecting a Rendering Mode"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:11
msgid "Rendering modes can be selected in 2 ways."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:13
msgid ""
"using the ``rendering_mode`` input class argument in "
":class:`~sim.RenderCfg`"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:21
msgid ""
"using the ``--rendering_mode`` CLI argument and not passing "
"``rendering_mode`` to :class:`~sim.RenderCfg`, since "
":class:`~sim.RenderCfg` takes precedence."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:32
msgid ""
"Note, the ``rendering_mode`` defaults to ``balanced``. However, in the "
"case where the launcher argument ``--enable_cameras`` is not set, then "
"the default ``rendering_mode`` is not applied and, instead, the default "
"kit rendering settings are used."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:37
msgid ""
"Example renders from the ``set_rendering_mode.py`` script. To help assess"
" rendering, the example scene includes some reflections, translucency, "
"direct and ambient lighting, and several material types."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:40
msgid "Quality Mode"
msgstr ""

#: ../../source/how-to/configure_rendering.rst
msgid "Quality Rendering Mode Example"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:46
msgid "Balanced Mode"
msgstr ""

#: ../../source/how-to/configure_rendering.rst
msgid "Balanced Rendering Mode Example"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:52
msgid "Performance Mode"
msgstr ""

#: ../../source/how-to/configure_rendering.rst
msgid "Performance Rendering Mode Example"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:59
msgid "Overwriting Specific Rendering Settings"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:61
msgid ""
"Preset rendering settings can be overwritten via the "
":class:`~sim.RenderCfg` class."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:63
msgid "There are 2 ways to provide settings that overwrite presets."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:65
msgid ""
":class:`~sim.RenderCfg` supports overwriting specific settings via user-"
"friendly setting names that map to underlying RTX settings. For example:"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:78
msgid "List of user-friendly settings."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:84
msgid "enable_translucency"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:84
msgid ""
"Bool. Enables translucency for specular transmissive surfaces such as "
"glass at the cost of some performance."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:87
msgid "enable_reflections"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:87
msgid "Bool. Enables reflections at the cost of some performance."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:89
msgid "enable_global_illumination"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:89
msgid ""
"Bool. Enables Diffused Global Illumination at the cost of some "
"performance."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:92
msgid "antialiasing_mode"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:92
msgid "Literal[\"Off\", \"FXAA\", \"DLSS\", \"TAA\", \"DLAA\"]."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:94
msgid ""
"DLSS: Boosts performance by using AI to output higher resolution frames "
"from a lower resolution input. DLSS samples multiple lower resolution "
"images and uses motion data and feedback from prior frames to reconstruct"
" native quality images. DLAA: Provides higher image quality with an AI-"
"based anti-aliasing technique. DLAA uses the same Super Resolution "
"technology developed for DLSS, reconstructing a native resolution image "
"to maximize image quality."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:102
msgid "enable_dlssg"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:102
msgid ""
"Bool. Enables the use of DLSS-G. DLSS Frame Generation boosts performance"
" by using AI to generate more frames. This feature requires an Ada "
"Lovelace architecture GPU and can hurt performance due to additional "
"thread-related activities."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:107
msgid "enable_dl_denoiser"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:107
msgid ""
"Bool. Enables the use of a DL denoiser, which improves the quality of "
"renders at the cost of performance."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:110
msgid "dlss_mode"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:110
msgid ""
"Literal[0, 1, 2, 3]. For DLSS anti-aliasing, selects the performance/ "
"quality tradeoff mode. Valid values are 0 (Performance), 1 (Balanced), 2 "
"(Quality), or 3 (Auto)."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:114
msgid "enable_direct_lighting"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:114
msgid "Bool. Enable direct light contributions from lights."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:116
msgid "samples_per_pixel"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:116
msgid ""
"Int. Defines the Direct Lighting samples per pixel. Higher values "
"increase the direct lighting quality at the cost of performance."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:119
msgid "enable_shadows"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:119
msgid ""
"Bool. Enables shadows at the cost of performance. When disabled, lights "
"will not cast shadows."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:122
msgid "enable_ambient_occlusion"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:122
msgid "Bool. Enables ambient occlusion at the cost of some performance."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:126
msgid ""
"For more control, :class:`~sim.RenderCfg` allows you to overwrite any RTX"
" setting by using the ``carb_settings`` argument."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:128
msgid ""
"Examples of RTX settings can be found from within the repo, in the render"
" mode preset files located in ``apps/rendering_modes``."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:130
msgid ""
"In addition, the RTX documentation can be found here - "
"https://docs.omniverse.nvidia.com/materials-and-rendering/latest/rtx-"
"renderer.html."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:132
msgid "An example usage of ``carb_settings``."
msgstr ""

#: ../../source/how-to/configure_rendering.rst:148
msgid "Current Limitations"
msgstr ""

#: ../../source/how-to/configure_rendering.rst:150
msgid ""
"For performance reasons, we default to using DLSS for denoising, which "
"generally provides better performance. This may result in renders of "
"lower quality, which may be especially evident at lower resolutions. Due "
"to this, we recommend using per-tile or per-camera resolution of at least"
" 100 x 100. For renders at lower resolutions, we advice setting the "
"``antialiasing_mode`` attribute in :class:`~sim.RenderCfg` to ``DLAA``, "
"and also potentially enabling ``enable_dl_denoiser``. Both of these "
"settings should help improve render quality, but also comes at a cost of "
"performance. Additional rendering parameters can also be specified in "
":class:`~sim.RenderCfg`."
msgstr ""

