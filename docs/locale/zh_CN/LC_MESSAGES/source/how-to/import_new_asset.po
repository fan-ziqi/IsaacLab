# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-27 10:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/how-to/import_new_asset.rst:2
msgid "Importing a New Asset"
msgstr "导入新资产"

#: ../../source/how-to/import_new_asset.rst:6
msgid ""
"NVIDIA Omniverse relies on the Universal Scene Description (USD) file format"
" to import and export assets. USD is an open source file format developed by"
" Pixar Animation Studios. It is a scene description format optimized for "
"large-scale, complex data sets. While this format is widely used in the film"
" and animation industry, it is less common in the robotics community."
msgstr ""
"NVIDIA Omniverse 依赖于通用场景描述（USD）文件格式来导入和导出资产。USD "
"是由皮克斯动画工作室开发的开源文件格式。这是一种针对大规模、复杂数据集进行优化的场景描述格式。虽然这种格式在电影和动画行业广泛使用，但在机器人社区中并不常见。"

#: ../../source/how-to/import_new_asset.rst:12
msgid ""
"To this end, NVIDIA has developed various importers that allow you to import"
" assets from other file formats into USD. These importers are available as "
"extensions to Omniverse Kit:"
msgstr ""
"为此，NVIDIA 开发了各种导入器，允许您将其他文件格式的资产导入到 USD 中。这些导入器作为 Omniverse Kit 的扩展可用: "

#: ../../source/how-to/import_new_asset.rst:16
msgid "**URDF Importer** - Import assets from URDF files."
msgstr "**URDF 导入器** - 从 URDF 文件导入资产。"

#: ../../source/how-to/import_new_asset.rst:17
msgid "**MJCF Importer** - Import assets from MJCF files."
msgstr "**MJCF 导入器** - 从 MJCF 文件导入资产。"

#: ../../source/how-to/import_new_asset.rst:18
msgid ""
"**Mesh Importer** - Import assets from various file formats, including OBJ, "
"FBX, STL, and glTF."
msgstr "**网格导入器** - 从各种文件格式（包括 OBJ、FBX、STL 和 glTF）导入资产。"

#: ../../source/how-to/import_new_asset.rst:21
msgid ""
"The recommended workflow from NVIDIA is to use the above importers to "
"convert the asset into its USD representation. Once the asset is in USD "
"format, you can use the Omniverse Kit to edit the asset and export it to "
"other file formats. Isaac Sim includes these importers by default. They can "
"also be enabled manually in Omniverse Kit."
msgstr ""
"NVIDIA 建议的工作流程是使用上述导入器将资产转换为其 USD 表示形式。一旦资产以 USD 格式存在，您可以使用 Omniverse Kit "
"对资产进行编辑，并将其导出到其他文件格式。Isaac Sim 默认包含这些导入程序。它们也可以在 Omniverse Kit 中手动启用。"

#: ../../source/how-to/import_new_asset.rst:27
msgid ""
"An important note to use assets for large-scale simulation is to ensure that"
" they are in `instanceable`_ format. This allows the asset to be efficiently"
" loaded into memory and used multiple times in a scene. Otherwise, the asset"
" will be loaded into memory multiple times, which can cause performance "
"issues. For more details on instanceable assets, please check the Isaac Sim "
"`documentation`_."
msgstr ""
"用于大规模仿真中使用资产的重要注意事项是确保它们是 `实例化`_ "
"格式。这允许资产有效地加载到内存中，并在场景中多次使用。否则，资产将多次加载到内存中，可能导致性能问题。有关实例化资产的更多详细信息，请查看 Isaac"
" Sim `文档`_ 。"

#: ../../source/how-to/import_new_asset.rst:35
msgid "Using URDF Importer"
msgstr "使用 URDF 导入器"

#: ../../source/how-to/import_new_asset.rst:37
msgid ""
"For using the URDF importer in the GUI, please check the documentation at "
"`URDF importer`_. For using the URDF importer from Python scripts, we "
"include a utility tool called ``convert_urdf.py``. This script creates an "
"instance of :class:`~sim.converters.UrdfConverterCfg` which is then passed "
"to the :class:`~sim.converters.UrdfConverter` class."
msgstr ""
"要在GUI中使用URDF导入器，请查阅 `URDF 导入器`_ 的文档。要在Python脚本中使用URDF导入器，我们提供了一个名为 "
"``convert_urdf.py`` 的实用工具。这个脚本创建了 :class:`~sim.converters.UrdfConverterCfg` "
"的一个实例，然后将其传递给 :class:`~sim.converters.UrdfConverter` 类。"

#: ../../source/how-to/import_new_asset.rst:40
msgid ""
"The URDF importer has various configuration parameters that can be set to "
"control the behavior of the importer. The default values for the importer's "
"configuration parameters are specified are in the "
":class:`~sim.converters.UrdfConverterCfg` class, and they are listed below. "
"We made a few commonly modified settings to be available as command-line "
"arguments when calling the ``convert_urdf.py``, and they are marked with "
"``*`` in the list. For a comprehensive list of the configuration parameters,"
" please check the the documentation at `URDF importer`_."
msgstr ""
"URDF 导入器具有各种配置参数，可以设置来控制导入器的行为。导入器的配置参数的默认值在 "
":class:`~sim.converters.UrdfConverterCfg` 类中指定，并列在下方。我们将一些常修改的设置作为命令行参数在调用 "
"``convert_urdf.py`` 时可用，并在列表中用 ``*`` 标记。要获取配置参数的详细列表，请查看 `URDF 导入器`_ 的文档。"

#: ../../source/how-to/import_new_asset.rst:43
msgid ""
":attr:`~sim.converters.UrdfConverterCfg.fix_base` * - Whether to fix the "
"base of the robot. This depends on whether you have a floating-base or "
"fixed-base robot. The command-line flag is ``--fix-base`` where when set, "
"the importer will fix the base of the robot, otherwise it will default to "
"floating-base."
msgstr ""
":attr:`~sim.converters.UrdfConverterCfg.fix_base` * - "
"是否固定机器人的基座。这取决于你是否有浮动基座或固定基座的机器人。命令行标志是 ``--fix-base`` "
"，设置时，导入器将固定机器人的基座，否则它将默认为浮动基座。"

#: ../../source/how-to/import_new_asset.rst:46
msgid ""
":attr:`~sim.converters.UrdfConverterCfg.root_link_name` - The link on which "
"the PhysX articulation root is placed."
msgstr ""
":attr:`~sim.converters.UrdfConverterCfg.root_link_name` - 放置 PhysX 关节根部的链接。"

#: ../../source/how-to/import_new_asset.rst:47
msgid ""
":attr:`~sim.converters.UrdfConverterCfg.merge_fixed_joints` * - Whether to "
"merge the fixed joints. Usually, this should be set to ``True`` to reduce "
"the asset complexity. The command-line flag is ``--merge-joints`` where when"
" set, the importer will merge the fixed joints, otherwise it will default to"
" not merging the fixed joints."
msgstr ""
":attr:`~sim.converters.UrdfConverterCfg.merge_fixed_joints` * - "
"是否合并固定关节。通常应将此设置为 ``True`` 以减少实体的复杂性。命令行标志是 ``--merge-joints`` "
"，设置时，导入器将合并固定关节，否则将默认不合并固定关节。"

#: ../../source/how-to/import_new_asset.rst:50
msgid ""
":attr:`~sim.converters.UrdfConverterCfg.joint_drive` - The configuration for"
" the joint drives on the robot."
msgstr ":attr:`~sim.converters.UrdfConverterCfg.joint_drive` - 机器人关节驱动的配置。"

#: ../../source/how-to/import_new_asset.rst:52
msgid ""
":attr:`~sim.converters.UrdfConverterCfg.JointDriveCfg.drive_type` - The "
"drive type for the joints. This can be either ``\"acceleration\"`` or "
"``\"force\"``. We recommend using ``\"force\"`` for most cases."
msgstr ""
":attr:`~sim.converters.UrdfConverterCfg.JointDriveCfg.drive_type` - "
"关节的驱动类型。这个值可以是 ``\"acceleration\"`` 或 ``\"force\"`` 。我们推荐在大多数情况下使用 "
"``\"force\"`` 。"

#: ../../source/how-to/import_new_asset.rst:54
msgid ""
":attr:`~sim.converters.UrdfConverterCfg.JointDriveCfg.target_type` - The "
"target type for the joints. This can be either ``\"none\"``, "
"``\"position\"``, or ``\"velocity\"``. We recommend using ``\"position\"`` "
"for most cases. Setting this to ``\"none\"`` will disable the drive and set "
"the joint gains to 0.0."
msgstr ""
":attr:`~sim.converters.UrdfConverterCfg.JointDriveCfg.target_type` - "
"关节的目标类型。可以是 ``\"none\"`` 、 ``\"position\"`` 或 ``\"velocity\"`` "
"。我们建议在大多数情况下使用 ``\"position\"`` 。将其设置为 ``\"none\"`` 将禁用驱动并将关节增益设置为 0.0。"

#: ../../source/how-to/import_new_asset.rst:57
msgid ""
":attr:`~sim.converters.UrdfConverterCfg.JointDriveCfg.gains` - The drive "
"stiffness and damping gains for the joint. We support two ways to set the "
"gains:"
msgstr ""
":attr:`~sim.converters.UrdfConverterCfg.JointDriveCfg.gains` - "
"关节的驱动刚度和阻尼增益。我们支持两种设置增益的方式:"

#: ../../source/how-to/import_new_asset.rst:60
msgid ""
":attr:`~sim.converters.UrdfConverterCfg.JointDriveCfg.PDGainsCfg` - To "
"directly set the stiffness and damping."
msgstr ""
":attr:`~sim.converters.UrdfConverterCfg.JointDriveCfg.PDGainsCfg` - "
"直接设置刚度和阻尼。"

#: ../../source/how-to/import_new_asset.rst:61
msgid ""
":attr:`~sim.converters.UrdfConverterCfg.JointDriveCfg.NaturalFrequencyGainsCfg`"
" - To set the gains using the desired natural frequency response of the "
"system."
msgstr ""
":attr:`~sim.converters.UrdfConverterCfg.JointDriveCfg.NaturalFrequencyGainsCfg`"
" - 使用系统所需的自然频率响应来设置增益。"

#: ../../source/how-to/import_new_asset.rst:64
msgid ""
"For more detailed information on the configuration parameters, please check "
"the documentation for :class:`~sim.converters.UrdfConverterCfg`."
msgstr "有关配置参数的详细信息，请查阅 :class:`~sim.converters.UrdfConverterCfg` 文档。"

#: ../../source/how-to/import_new_asset.rst:67
#: ../../source/how-to/import_new_asset.rst:147
#: ../../source/how-to/import_new_asset.rst:200
msgid "Example Usage"
msgstr "示例用法"

#: ../../source/how-to/import_new_asset.rst:69
msgid ""
"In this example, we use the pre-processed URDF file of the ANYmal-D robot. "
"To check the pre-process URDF, please check the file the `anymal.urdf`_. The"
" main difference between the pre-processed URDF and the original URDF are:"
msgstr ""
"在此示例中，我们使用了 ANYmal-D 机器人的经过处理的 URDF 文件。要检查经过处理的 URDF，请查看文件 `anymal.urdf`_ "
"。经过处理的 URDF 与原始 URDF 之间的主要区别在于: "

#: ../../source/how-to/import_new_asset.rst:73
msgid ""
"We removed the ``<gazebo>`` tag from the URDF. This tag is not supported by "
"the URDF importer."
msgstr "我们从 URDF 中移除了 ``<gazebo>`` 标记。此标记不受 URDF 导入器支持。"

#: ../../source/how-to/import_new_asset.rst:74
msgid ""
"We removed the ``<transmission>`` tag from the URDF. This tag is not "
"supported by the URDF importer."
msgstr "我们从 URDF 中移除了 ``<transmission>`` 标记。此标记不受 URDF 导入器支持。"

#: ../../source/how-to/import_new_asset.rst:75
msgid ""
"We removed various collision bodies from the URDF to reduce the complexity "
"of the asset."
msgstr "我们从 URDF 中移除了各种碰撞体，以减少资产的复杂性。"

#: ../../source/how-to/import_new_asset.rst:76
msgid ""
"We changed all the joint's damping and friction parameters to ``0.0``. This "
"ensures that we can perform effort-control on the joints without PhysX "
"adding additional damping."
msgstr "我们将所有关节的阻尼和摩擦参数改为 ``0.0`` 。这确保在没有 PhysX 添加额外阻尼的情况下，我们可以对关节进行努力控制。"

#: ../../source/how-to/import_new_asset.rst:78
msgid ""
"We added the ``<dont_collapse>`` tag to fixed joints. This ensures that the "
"importer does not merge these fixed joints."
msgstr "我们向固定关节添加了 ``<dont_collapse>`` 标记。这确保导入器不会合并这些固定关节。"

#: ../../source/how-to/import_new_asset.rst:81
#: ../../source/how-to/import_new_asset.rst:151
msgid ""
"The following shows the steps to clone the repository and run the converter:"
msgstr "以下显示了克隆存储库并运行转换器的步骤: "

#: ../../source/how-to/import_new_asset.rst:102
msgid ""
"Executing the above script will create a USD file inside the "
"``source/isaaclab_assets/data/Robots/ANYbotics/`` directory:"
msgstr ""
"执行上述脚本将在 ``source/isaaclab_assets/data/Robots/ANYbotics/`` 目录内创建一个 USD 文件: "

#: ../../source/how-to/import_new_asset.rst:105
msgid "``anymal_d.usd`` - This is the main asset file."
msgstr "``anymal_d.usd`` - 这是主资产文件。"

#: ../../source/how-to/import_new_asset.rst:108
msgid ""
"To run the script headless, you can add the ``--headless`` flag. This will "
"not open the GUI and exit the script after the conversion is complete."
msgstr "要以无头模式运行脚本，可以添加 ``--headless`` 标志。这将不会打开 GUI，并在完成转换后退出脚本。"

#: ../../source/how-to/import_new_asset.rst:111
msgid ""
"You can press play on the opened window to see the asset in the scene. The "
"asset should fall under gravity. If it blows up, then it might be that you "
"have self-collisions present in the URDF."
msgstr "您可以在打开的窗口上按播放按钮来查看场景中的资产。资产应该受重力影响下落。如果它爆炸了，那可能是因为URDF中存在自碰撞。"

#: ../../source/how-to/import_new_asset.rst:-1
msgid "result of convert_urdf.py"
msgstr "convert_urdf.py 的结果"

#: ../../source/how-to/import_new_asset.rst:122
msgid "Using MJCF Importer"
msgstr "使用 MJCF 导入器"

#: ../../source/how-to/import_new_asset.rst:124
msgid ""
"Similar to the URDF Importer, the MJCF Importer also has a GUI interface. "
"Please check the documentation at `MJCF importer`_ for more details. For "
"using the MJCF importer from Python scripts, we include a utility tool "
"called ``convert_mjcf.py``. This script creates an instance of "
":class:`~sim.converters.MjcfConverterCfg` which is then passed to the "
":class:`~sim.converters.MjcfConverter` class."
msgstr ""
"与URDF导入器类似，MJCF导入器也有一个GUI界面。请查看 `MJCF导入器`_ "
"中的文档获取更多详细信息。要在Python脚本中使用MJCF导入器，我们提供了一个名为 ``convert_mjcf.py`` "
"的实用工具。该脚本创建了一个 :class:`~sim.converters.MjcfConverterCfg` 的实例，然后将其传递给 "
":class:`~sim.converters.MjcfConverter` 类。"

#: ../../source/how-to/import_new_asset.rst:129
msgid ""
"The default values for the importer's configuration parameters are specified"
" in the :class:`~sim.converters.MjcfConverterCfg` class. The configuration "
"parameters are listed below. We made a few commonly modified settings to be "
"available as command-line arguments when calling the ``convert_mjcf.py``, "
"and they are marked with ``*`` in the list. For a comprehensive list of the "
"configuration parameters, please check the the documentation at `MJCF "
"importer`_."
msgstr ""
"导入器配置参数的默认值在 :class:`~sim.converters.MjcfConverterCfg` "
"类中指定。配置参数如下所示。我们对一些常见修改的设置进行了调整，使其在调用 `convert_mjcf.py` 时可以作为命令行参数使用，并在列表中用 "
"``*`` 标记。有关配置参数的全面列表，请查看 `MJCF importer`_ 处的文档。"

#: ../../source/how-to/import_new_asset.rst:136
msgid ""
":attr:`~sim.converters.MjcfConverterCfg.fix_base*` - Whether to fix the base"
" of the robot. This depends on whether you have a floating-base or fixed-"
"base robot. The command-line flag is ``--fix-base`` where when set, the "
"importer will fix the base of the robot, otherwise it will default to "
"floating-base."
msgstr ""
":attr:`~sim.converters.MjcfConverterCfg.fix_base*` - "
"是否固定机器人的基座。这取决于您的机器人是浮动基座还是固定基座。命令行标志是 ``--fix-base`` "
"，设置时，导入器将固定机器人的基座，否则将默认为浮动基座。"

#: ../../source/how-to/import_new_asset.rst:139
msgid ""
":attr:`~sim.converters.MjcfConverterCfg.make_instanceable*` - Whether to "
"create instanceable assets. Usually, this should be set to ``True``. The "
"command-line flag is ``--make-instanceable`` where when set, the importer "
"will create instanceable assets, otherwise it will default to non-"
"instanceable."
msgstr ""
":attr:`~sim.converters.MjcfConverterCfg.make_instanceable*` - "
"是否创建可实例化资产。通常，应该设置为 ``True`` 。命令行标志是 ``--make-instanceable`` "
"，设置为此值时，导入器将创建可实例化资产，否则将默认为不可实例化。"

#: ../../source/how-to/import_new_asset.rst:142
msgid ""
":attr:`~sim.converters.MjcfConverterCfg.import_sites*` - Whether to parse "
"the <site> tag in the MJCF. Usually, this should be set to ``True``. The "
"command-line flag is ``--import-sites`` where when set, the importer will "
"parse the <site> tag, otherwise it will default to not parsing the <site> "
"tag."
msgstr ""
":attr:`~sim.converters.MjcfConverterCfg.import_sites*` - "
"是否解析MJCF中的<site>标签。通常应设置为 ``True`` 。命令行标志是 ``--import-sites`` ，当设置时，导入器将解析 "
"<site> 标签，否则将默认不解析 <site> 标签。"

#: ../../source/how-to/import_new_asset.rst:149
msgid ""
"In this example, we use the MuJoCo model of the Unitree's H1 humanoid robot "
"in the `mujoco_menagerie`_."
msgstr "在这个例子中，我们使用Unitree的H1人形机器人在 `mujoco_menagerie`_ 中的MuJoCo模型。"

#: ../../source/how-to/import_new_asset.rst:169
msgid ""
"Executing the above script will create USD files inside the "
"``source/isaaclab_assets/data/Robots/Unitree/`` directory:"
msgstr ""
"执行上述脚本将在 ``source/isaaclab_assets/data/Robots/Unitree/`` 目录中创建 USD 文件:"

#: ../../source/how-to/import_new_asset.rst:172
msgid ""
"``h1.usd`` - This is the main asset file. It contains all the non-mesh data."
msgstr "``h1.usd`` - 这是主要的资产文件。它包含所有非网格数据。"

#: ../../source/how-to/import_new_asset.rst:173
msgid "``Props/instanceable_assets.usd`` - This is the mesh data file."
msgstr "``Props/instanceable_assets.usd`` - 这是网格数据文件。"

#: ../../source/how-to/import_new_asset.rst:-1
msgid "result of convert_mjcf.py"
msgstr "convert_mjcf.py 的结果"

#: ../../source/how-to/import_new_asset.rst:182
msgid "Using Mesh Importer"
msgstr "使用网格导入器"

#: ../../source/how-to/import_new_asset.rst:184
msgid ""
"Omniverse Kit includes the mesh converter tool that uses the ASSIMP library "
"to import assets from various mesh formats (e.g. OBJ, FBX, STL, glTF, etc.)."
" The asset converter tool is available as an extension to Omniverse Kit. "
"Please check the `asset converter`_ documentation for more details. However,"
" unlike Isaac Sim's URDF and MJCF importers, the asset converter tool does "
"not support creating instanceable assets. This means that the asset will be "
"loaded into memory multiple times if it is used multiple times in a scene."
msgstr ""
"Omniverse Kit 包括使用 ASSIMP 库导入各种网格格式的资产的网格转换器工具（例如 OBJ、FBX、STL、glTF "
"等）。资产转换器工具作为 Omniverse Kit 的扩展提供。请查看 `资产转换器`_ 文档了解更多详细信息。然而，与 Isaac Sim 的 "
"URDF 和 MJCF 导入器不同，资产转换器工具不支持创建实例化资产。这意味着如果在场景中多次使用资产，则资产将多次加载到内存中。"

#: ../../source/how-to/import_new_asset.rst:191
msgid ""
"Thus, we include a utility tool called ``convert_mesh.py`` that uses the "
"asset converter tool to import the asset and then converts it into an "
"instanceable asset. Internally, this script creates an instance of "
":class:`~sim.converters.MeshConverterCfg` which is then passed to the "
":class:`~sim.converters.MeshConverter` class. Since the mesh file does not "
"contain any physics information, the configuration class accepts different "
"physics properties (such as mass, collision shape, etc.) as input. Please "
"check the documentation for :class:`~sim.converters.MeshConverterCfg` for "
"more details."
msgstr ""
"因此，我们包含一个名为 ``convert_mesh.py`` "
"的实用工具，它使用资产转换器工具导入资产，然后将其转换为实例化资产。在内部，此脚本创建了一个 "
":class:`~sim.converters.MeshConverterCfg` 的实例，然后将其传递给 "
":class:`~sim.converters.MeshConverter` "
"类。由于网格文件不包含任何物理信息，配置类接受不同的物理属性（如质量、碰撞形状等）作为输入。请查看 "
":class:`~sim.converters.MeshConverterCfg` 的文档了解更多详细信息。"

#: ../../source/how-to/import_new_asset.rst:202
msgid ""
"We use an OBJ file of a cube to demonstrate the usage of the mesh converter."
" The following shows the steps to clone the repository and run the "
"converter:"
msgstr "我们使用一个立方体的 OBJ 文件来演示网格转换器的用法。以下显示了克隆存储库并运行转换器的步骤: "

#: ../../source/how-to/import_new_asset.rst:222
msgid "You may need to press 'F' to zoom in on the asset after import."
msgstr "你可能需要在导入后按下 'F' 键来放大资产。"

#: ../../source/how-to/import_new_asset.rst:224
msgid ""
"Similar to the URDF and MJCF converter, executing the above script will "
"create two USD files inside the "
"``source/isaaclab_assets/data/Props/CubeMultiColor/`` directory. "
"Additionally, if you press play on the opened window, you should see the "
"asset fall down under the influence of gravity."
msgstr ""
"类似于URDF和MJCF转换器，执行上述脚本将在 "
"``source/isaaclab_assets/data/Props/CubeMultiColor/`` "
"目录下创建两个USD文件。此外，如果您在打开的窗口上点击播放按钮，您应该看到资产在重力的作用下下落。"

#: ../../source/how-to/import_new_asset.rst:229
msgid ""
"If you do not set the ``--mass`` flag, then no rigid body properties will be"
" added to the asset. It will be imported as a static asset."
msgstr "如果您不设置 ``--mass`` 标志，则不会向资产添加刚体属性。它将作为静态资产导入。"

#: ../../source/how-to/import_new_asset.rst:231
msgid ""
"If you also do not set the ``--collision-approximation`` flag, then the "
"asset will not have any collider properties as well and will be imported as "
"a visual asset."
msgstr "如果您还未设置 ``--collision-approximation`` 标志，则资产也不会有任何碰撞器属性，并且将作为视觉资产导入。"

#: ../../source/how-to/import_new_asset.rst:-1
msgid "result of convert_mesh.py"
msgstr "转换 `convert_mesh.py` 的结果"
