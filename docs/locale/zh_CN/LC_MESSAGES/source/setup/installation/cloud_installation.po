# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-04 11:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/setup/installation/cloud_installation.rst:2
msgid "Running Isaac Lab in the Cloud"
msgstr "在云中运行Isaac Lab"

#: ../../source/setup/installation/cloud_installation.rst:4
msgid ""
"Isaac Lab can be run in various cloud infrastructures with the use of `Isaac"
" Automator <https://github.com/isaac-sim/IsaacAutomator>`__. Isaac Automator"
" allows for quick deployment of Isaac Sim and Isaac Lab onto the public "
"clouds (AWS, GCP, Azure, and Alibaba Cloud are currently supported)."
msgstr ""
"Isaac Lab可以在各种云基础架构中运行，使用 `Isaac Automator <https://github.com/isaac-"
"sim/IsaacAutomator>`__。 Isaac Automator可以快速部署Isaac Sim和Isaac "
"Lab到公共云（目前支持AWS，GCP，Azure和阿里云）。"

#: ../../source/setup/installation/cloud_installation.rst:7
msgid ""
"The result is a fully configured remote desktop cloud workstation, which can"
" be used for development and testing of Isaac Lab within minutes and on a "
"budget. Isaac Automator supports variety of GPU instances and stop-start "
"functionality to save on cloud costs and a variety of tools to aid the "
"workflow (like uploading and downloading data, autorun, deployment "
"management, etc)."
msgstr ""
"结果是一个完全配置的远程桌面云工作站，可用于Isaac Lab的开发和测试，只需几分钟和有限预算。 Isaac "
"Automator支持各种GPU实例，还支持停止和启动功能以节省云成本以及各种工具（如上传和下载数据，自动运行，部署管理等）来辅助工作流程。"

#: ../../source/setup/installation/cloud_installation.rst:11
msgid "Installing Isaac Automator"
msgstr "安装Isaac Automator"

#: ../../source/setup/installation/cloud_installation.rst:13
msgid ""
"For the most update-to-date and complete installation instructions, please "
"refer to `Isaac Automator <https://github.com/isaac-"
"sim/IsaacAutomator?tab=readme-ov-file#installation>`__."
msgstr ""
"有关最新和完整的安装说明，请参阅 `Isaac Automator <https://github.com/isaac-"
"sim/IsaacAutomator?tab=readme-ov-file#installation>`__。"

#: ../../source/setup/installation/cloud_installation.rst:15
msgid "To use Isaac Automator, first clone the repo:"
msgstr "要使用Isaac Automator，首先克隆库："

#: ../../source/setup/installation/cloud_installation.rst:21
msgid ""
"Isaac Automator requires having ``docker`` pre-installed on the system."
msgstr "Isaac Automator需要预先在系统上安装 ``docker`` 。"

#: ../../source/setup/installation/cloud_installation.rst:23
msgid ""
"To install Docker, please follow the instructions for your operating system "
"on the `Docker website`_."
msgstr "要安装Docker，请按照 `Docker网站`_ 上的操作系统说明进行操作。"

#: ../../source/setup/installation/cloud_installation.rst:24
msgid ""
"Follow the post-installation steps for Docker on the `post-installation "
"steps`_ page. These steps allow you to run Docker without using ``sudo``."
msgstr ""
"按照 `post-installation steps`_ 页面上的后续安装步骤。 这些步骤允许您在不使用 ``sudo`` 的情况下运行Docker。"

#: ../../source/setup/installation/cloud_installation.rst:27
msgid "Isaac Automator also requires obtaining a NGC API key."
msgstr "Isaac Automator还需要获取NGC API密钥。"

#: ../../source/setup/installation/cloud_installation.rst:29
msgid ""
"Get access to the `Isaac Sim container`_ by joining the NVIDIA Developer "
"Program credentials."
msgstr "通过加入NVIDIA Developer Program认证来访问 `Isaac Sim container`_ 。"

#: ../../source/setup/installation/cloud_installation.rst:30
msgid ""
"Generate your `NGC API key`_ to access locked container images from NVIDIA "
"GPU Cloud (NGC)."
msgstr "生成您的 `NGC API密钥`_ 以访问NVIDIA GPU云（NGC）中的锁定容器图像。"

#: ../../source/setup/installation/cloud_installation.rst:32
msgid ""
"This step requires you to create an NGC account if you do not already have "
"one."
msgstr "此步骤要求您如有需要创建一个NGC帐户。"

#: ../../source/setup/installation/cloud_installation.rst:33
msgid ""
"Once you have your generated API key, you need to log in to NGC from the "
"terminal."
msgstr "生成API密钥后，您需要从终端登录到NGC。"

#: ../../source/setup/installation/cloud_installation.rst:40
msgid ""
"For the username, enter ``$oauthtoken`` exactly as shown. It is a special "
"username that is used to authenticate with NGC."
msgstr "对于用户名，输入 ``$oauthtoken`` ，如图所示。 这是一个特殊用户名，用于与NGC进行身份验证。"

#: ../../source/setup/installation/cloud_installation.rst:50
msgid "Running Isaac Automator"
msgstr "运行Isaac Automator"

#: ../../source/setup/installation/cloud_installation.rst:52
msgid "To run Isaac Automator, first build the Isaac Automator container:"
msgstr "要运行Isaac Automator，首先构建Isaac Automator容器："

#: ../../source/setup/installation/cloud_installation.rst
msgid ":icon:`fa-brands fa-linux` Linux"
msgstr ":icon:`fa-brands fa-linux` Linux"

#: ../../source/setup/installation/cloud_installation.rst
msgid ":icon:`fa-brands fa-windows` Windows"
msgstr ":icon:`fa-brands fa-windows` Windows"

#: ../../source/setup/installation/cloud_installation.rst:71
msgid "Next, enter the automator container:"
msgstr "接下来，输入自动化容器："

#: ../../source/setup/installation/cloud_installation.rst:90
msgid "Next, run the deployed script for your preferred cloud:"
msgstr "接下来，运行您首选云的部署脚本："

#: ../../source/setup/installation/cloud_installation.rst:103
msgid ""
"Follow the prompts for entering information regarding the environment setup "
"and credentials. Once successful, instructions for connecting to the cloud "
"instance will be available in the terminal. Connections can be made using "
"SSH, noVCN, or NoMachine."
msgstr ""
"按照有关环境设置和凭据的信息输入提示。 成功后，连接到云实例的说明将在终端中提供。 可以使用SSH，noVCN或NoMachine进行连接。"

#: ../../source/setup/installation/cloud_installation.rst:107
msgid ""
"For details on the credentials and setup required for each cloud, please "
"visit the `Isaac Automator <https://github.com/isaac-"
"sim/IsaacAutomator?tab=readme-ov-file#deploying-isaac-sim>`__ page for more "
"instructions."
msgstr ""
"有关每个云所需的凭据和设置的详细信息，请访问 `Isaac Automator <https://github.com/isaac-"
"sim/IsaacAutomator?tab=readme-ov-file#deploying-isaac-sim>`__ 页面以获取更多说明。"

#: ../../source/setup/installation/cloud_installation.rst:113
msgid "Running Isaac Lab on the Cloud"
msgstr "在云中运行Isaac Lab"

#: ../../source/setup/installation/cloud_installation.rst:115
msgid ""
"Once connected to the cloud instance, the desktop will have an icon showing "
"``isaaclab.sh``. Launch the ``isaaclab.sh`` executable, which will open a "
"new Terminal. Within the terminal, Isaac Lab commands can be executed in the"
" same way as running locally."
msgstr ""
"连接到云实例后，桌面将显示一个显示 ``isaaclab.sh`` 的图标。  运行 ``isaaclab.sh`` 可执行文件，这将打开一个新的终端。"
" 在终端中，Isaac Lab命令可以与本地执行相同的方式执行。"

#: ../../source/setup/installation/cloud_installation.rst:119
msgid "For example:"
msgstr "例如："

#: ../../source/setup/installation/cloud_installation.rst:140
msgid "Destroying a Development"
msgstr "销毁开发"

#: ../../source/setup/installation/cloud_installation.rst:142
msgid ""
"To save costs, deployments can be destroyed when not being used. This can be"
" done from within the Automator container, which can be entered with command"
" ``./run``."
msgstr "为了节省成本，可以在不使用时销毁部署。 这可以通过进入“运行”命令的自动化容器来完成。"

#: ../../source/setup/installation/cloud_installation.rst:145
msgid "To destroy a deployment, run:"
msgstr "销毁部署，运行："
