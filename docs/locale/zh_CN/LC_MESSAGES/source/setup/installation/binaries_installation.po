# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-27 20:01+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/setup/installation/binaries_installation.rst:5
msgid "Installation using Isaac Sim Binaries"
msgstr "使用Isaac Sim二进制安装"

#: ../../source/setup/installation/binaries_installation.rst:9
msgid ""
"If you use Conda, we recommend using `Miniconda "
"<https://docs.anaconda.com/miniconda/miniconda-other-installer-links/>`_."
msgstr ""
"如果使用 Conda，我们建议使用 `Miniconda <https://docs.anaconda.com/miniconda/miniconda-"
"other-installer-links/>`_ 。"

#: ../../source/setup/installation/binaries_installation.rst:12
msgid "Installing Isaac Sim"
msgstr "安装Isaac Sim"

#: ../../source/setup/installation/binaries_installation.rst:15
msgid "Downloading pre-built binaries"
msgstr "下载预构建的二进制文件"

#: ../../source/setup/installation/binaries_installation.rst:17
msgid ""
"Please follow the Isaac Sim `documentation "
"<https://docs.omniverse.nvidia.com/isaacsim/latest/installation/install_workstation.html>`__"
" to install the latest Isaac Sim release."
msgstr ""
"请按照Isaac Sim `documentation "
"<https://docs.omniverse.nvidia.com/isaacsim/latest/installation/install_workstation.html>`__"
" 的说明安装最新的Isaac Sim版本。"

#: ../../source/setup/installation/binaries_installation.rst:21
msgid ""
"To check the minimum system requirements,refer to the documentation `here "
"<https://docs.omniverse.nvidia.com/isaacsim/latest/installation/requirements.html>`__."
msgstr ""
"要检查最低系统要求，请参考 `这个文档 "
"<https://docs.omniverse.nvidia.com/isaacsim/latest/installation/requirements.html>`__"
" 。"

#: ../../source/setup/installation/binaries_installation.rst:25
msgid ""
"We have tested Isaac Lab with Isaac Sim 4.1 release on Ubuntu 20.04LTS with "
"NVIDIA driver 525.147."
msgstr "我们已经在Ubuntu 20.04LTS上测试了Isaac Sim 4.1版本与NVIDIA驱动525.147的兼容性。"

#: ../../source/setup/installation/binaries_installation.rst
msgid ":icon:`fa-brands fa-linux` Linux"
msgstr ":icon:`fa-brands fa-linux` Linux"

#: ../../source/setup/installation/binaries_installation.rst:34
msgid ""
"On Linux systems, by default, Isaac Sim is installed in the directory "
"``${HOME}/.local/share/ov/pkg/isaac_sim-*``, with ``*`` corresponding to the"
" Isaac Sim version."
msgstr ""
"在Linux系统上，默认情况下，Isaac Sim安装在目录 ``${HOME}/.local/share/ov/pkg/isaac_sim-*`` "
"中， ``*`` 对应于Isaac Sim的版本。"

#: ../../source/setup/installation/binaries_installation.rst
msgid ":icon:`fa-brands fa-windows` Windows"
msgstr ":icon:`fa-brands fa-windows` Windows"

#: ../../source/setup/installation/binaries_installation.rst:40
msgid ""
"On Windows systems, by default,Isaac Sim is installed in the directory "
"``C:\\Users\\%USERPROFILE%\\AppData\\Local\\ov\\pkg\\isaac_sim-*``, with "
"``*`` corresponding to the Isaac Sim version."
msgstr ""
"在Windows系统上，默认情况下，Isaac Sim安装在目录 "
"```C:\\Users\\%USERPROFILE%\\AppData\\Local\\ov\\pkg\\isaac_sim-*`` 中， ``*``"
" 对应于Isaac Sim的版本。"

#: ../../source/setup/installation/binaries_installation.rst:44
msgid "Verifying the Isaac Sim installation"
msgstr "验证 Isaac Sim 安装"

#: ../../source/setup/installation/binaries_installation.rst:46
msgid ""
"To avoid the overhead of finding and locating the Isaac Sim installation "
"directory every time, we recommend exporting the following environment "
"variables to your terminal for the remaining of the installation "
"instructions:"
msgstr "为避免每次都要找到并定位 Isaac Sim 安装目录的开销，我们建议为剩下的安装指南将以下环境变量导出到您的终端: "

#: ../../source/setup/installation/binaries_installation.rst:74
msgid ""
"For more information on common paths, please check the Isaac Sim "
"`documentation "
"<https://docs.omniverse.nvidia.com/isaacsim/latest/installation/install_faq.html#common-"
"path-locations>`__."
msgstr ""
"请按照Isaac Sim `文档 "
"<https://docs.omniverse.nvidia.com/isaacsim/latest/installation/install_workstation.html>`__"
" 的说明安装最新的Isaac Sim版本。"

#: ../../source/setup/installation/binaries_installation.rst:78
msgid "Check that the simulator runs as expected:"
msgstr "检查模拟器是否正常运行: "

#: ../../source/setup/installation/binaries_installation.rst:100
msgid "Check that the simulator runs from a standalone python script:"
msgstr "检查模拟器是否可以从独立的 python 脚本中运行: "

#: ../../source/setup/installation/binaries_installation.rst:128
msgid ""
"If you have been using a previous version of Isaac Sim, you need to run the "
"following command for the *first* time after installation to remove all the "
"old user data and cached variables:"
msgstr "如果您之前使用过 Isaac Sim 的旧版本，您需要在安装后 *第一次* 运行以下命令，以删除所有旧用户数据和缓存变量: "

#: ../../source/setup/installation/binaries_installation.rst:146
msgid ""
"If the simulator does not run or crashes while following the above "
"instructions, it means that something is incorrectly configured. To debug "
"and troubleshoot, please check Isaac Sim `documentation "
"<https://docs.omniverse.nvidia.com/dev-guide/latest/linux-"
"troubleshooting.html>`__ and the `forums "
"<https://docs.omniverse.nvidia.com/isaacsim/latest/isaac_sim_forums.html>`__."
msgstr ""
"如果按照上述说明模拟器无法运行或崩溃，意味着某些配置不正确。要调试和故障排除，请查看 Isaac Sim `文档 "
"<https://docs.omniverse.nvidia.com/dev-guide/latest/linux-"
"troubleshooting.html>`__ 和 `论坛 "
"<https://docs.omniverse.nvidia.com/isaacsim/latest/isaac_sim_forums.html>`__"
" 。"

#: ../../source/setup/installation/binaries_installation.rst:155
msgid "Installing Isaac Lab"
msgstr "安装Isaac Lab"

#: ../../source/setup/installation/binaries_installation.rst:158
msgid "Cloning Isaac Lab"
msgstr "克隆Isaac Lab"

#: ../../source/setup/installation/binaries_installation.rst:162
msgid ""
"We recommend making a `fork <https://github.com/isaac-sim/IsaacLab/fork>`_ "
"of the Isaac Lab repository to contribute to the project but this is not "
"mandatory to use the framework. If you make a fork, please replace ``isaac-"
"sim`` with your username in the following instructions."
msgstr ""
"我们建议制作 `fork <https://github.com/isaac-sim/IsaacLab/fork>`_ "
"以便贡献到该项目，但这并不是使用该框架的必要条件。如果您制作了一个fork，请用你的用户名替换以下的 ``isaac-sim`` 。"

#: ../../source/setup/installation/binaries_installation.rst:167
msgid "Clone the Isaac Lab repository into your workspace:"
msgstr "将Isaac Lab库克隆到你的工作空间: "

#: ../../source/setup/installation/binaries_installation.rst
msgid "SSH"
msgstr "SSH"

#: ../../source/setup/installation/binaries_installation.rst
msgid "HTTPS"
msgstr "HTTPS"

#: ../../source/setup/installation/binaries_installation.rst:185
msgid ""
"We provide a helper executable `isaaclab.sh <https://github.com/isaac-"
"sim/IsaacLab/blob/main/isaaclab.sh>`_ that provides utilities to manage "
"extensions:"
msgstr ""
"我们提供了一个辅助可执行文件 `isaaclab.sh <https://github.com/isaac-"
"sim/IsaacLab/blob/main/isaaclab.sh>`_ 用来管理扩展: "

#: ../../source/setup/installation/binaries_installation.rst:234
msgid "Creating the Isaac Sim Symbolic Link"
msgstr "创建Isaac Sim符号链接"

#: ../../source/setup/installation/binaries_installation.rst:236
msgid ""
"Set up a symbolic link between the installed Isaac Sim root folder and "
"``_isaac_sim`` in the Isaac Lab directory. This makes it convenient to index"
" the python modules and look for extensions shipped with Isaac Sim."
msgstr ""
"在已安装的Isaac Sim根目录和Isaac Lab目录的 ``_isaac_sim`` "
"之间建立符号链接。这样做方便了索引Python模块并查找与Isaac Sim一起提供的扩展。"

#: ../../source/setup/installation/binaries_installation.rst:267
msgid "Setting up the conda environment (optional)"
msgstr "配置conda环境（可选）"

#: ../../source/setup/installation/binaries_installation.rst:270
msgid ""
"This step is optional. If you are using the bundled python with Isaac Sim, "
"you can skip this step."
msgstr "此步骤是可选的。如果您使用Isaac Sim捆绑的Python，可以跳过此步骤。"

#: ../../source/setup/installation/binaries_installation.rst:272
msgid ""
"The executable ``isaaclab.sh`` automatically fetches the python bundled with"
" Isaac Sim, using ``./isaaclab.sh -p`` command (unless inside a virtual "
"environment). This executable behaves like a python executable, and can be "
"used to run any python script or module with the simulator. For more "
"information, please refer to the `documentation "
"<https://docs.omniverse.nvidia.com/isaacsim/latest/manual_standalone_python.html#isaac-"
"sim-python-environment>`__."
msgstr ""
"可执行文件 ``isaaclab.sh`` 会自动获取与Isaac Sim捆绑的Python，使用 ``./isaaclab.sh -p`` "
"命令（除非在虚拟环境中）。这个可执行文件的行为类似于Python可执行文件，可用于运行任何带有模拟器的Python脚本或模块。有关更多信息，请参考 "
"`文档 "
"<https://docs.omniverse.nvidia.com/isaacsim/latest/manual_standalone_python.html#isaac-"
"sim-python-environment>`__ 。"

#: ../../source/setup/installation/binaries_installation.rst:278
msgid ""
"Although using a virtual environment is optional, we recommend using "
"``conda``. To install ``conda``, please follow the instructions `here "
"<https://docs.conda.io/projects/conda/en/latest/user-"
"guide/install/index.html>`__. In case you want to use ``conda`` to create a "
"virtual environment, you can use the following command:"
msgstr ""
"虽然使用虚拟环境是可选的，但我们建议使用 ``conda`` 。要安装 ``conda`` ，请按照下面的说明进行操作 `here "
"<https://docs.conda.io/projects/conda/en/latest/user-"
"guide/install/index.html>`__ 。如果您使用 ``conda`` 来创建虚拟环境，可以使用以下命令: "

#: ../../source/setup/installation/binaries_installation.rst:307
msgid ""
"If you are using ``conda`` to create a virtual environment, make sure to "
"activate the environment before running any scripts. For example:"
msgstr "如果您使用 ``conda`` 创建虚拟环境，请确保在运行脚本之前激活该环境。举个例子: "

#: ../../source/setup/installation/binaries_installation.rst:314
msgid ""
"Once you are in the virtual environment, you do not need to use "
"``./isaaclab.sh -p`` / ``isaaclab.bat -p`` to run python scripts. You can "
"use the default python executable in your environment by running ``python`` "
"or ``python3``. However, for the rest of the documentation, we will assume "
"that you are using ``./isaaclab.sh -p`` / ``isaaclab.bat -p`` to run python "
"scripts. This command is equivalent to running ``python`` or ``python3`` in "
"your virtual environment."
msgstr ""
"一旦您进入虚拟环境，您就不需要使用 ``./isaaclab.sh -p`` / ``isaaclab.bat -p`` "
"来运行Python脚本。您可以使用环境中的默认Python可执行文件，即通过运行 ``python`` 或 ``python3`` "
"。不过，在接下来的文档中，我们将假设您使用 ``./isaaclab.sh -p`` / ``isaaclab.bat -p`` "
"来运行Python脚本。这条命令相当于在您的虚拟环境中运行 ``python`` 或 ``python3`` 。"

#: ../../source/setup/installation/binaries_installation.rst:322
msgid "Installation"
msgstr "安装"

#: ../../source/setup/installation/binaries_installation.rst:324
msgid "Install dependencies using ``apt`` (on Linux only):"
msgstr "使用 ``apt`` 来安装依赖（仅适用于Linux）: "

#: ../../source/setup/installation/binaries_installation.rst:331
msgid ""
"Run the install command that iterates over all the extensions in "
"``source/extensions`` directory and installs them using pip (with "
"``--editable`` flag):"
msgstr ""
"运行安装命令，遍历 ``source/extensions`` 目录中的所有扩展，同时使用带有 ``--editable`` 标志的pip进行安装: "

#: ../../source/setup/installation/binaries_installation.rst:353
msgid ""
"By default, the above will install all the learning frameworks. If you want "
"to install only a specific framework, you can pass the name of the framework"
" as an argument. For example, to install only the ``rl_games`` framework, "
"you can run"
msgstr ""
"上述代码将按默认设置安装所有学习框架。如果您想只安装特定框架，可以将框架的名称作为参数传递。例如，为了只安装 ``rl_games`` 框架，您可以运行"

#: ../../source/setup/installation/binaries_installation.rst:373
msgid ""
"The valid options are ``rl_games``, ``rsl_rl``, ``sb3``, ``skrl``, "
"``robomimic``, ``none``."
msgstr ""
"有效选项有 ``rl_games`` 、 ``rsl_rl`` 、 ``sb3`` 、 ``skrl`` 、 ``robomimic`` 、 "
"``none`` 。"

#: ../../source/setup/installation/binaries_installation.rst:376
msgid "Verifying the Isaac Lab installation"
msgstr "验证 Isaac Lab 安装"

#: ../../source/setup/installation/binaries_installation.rst:378
msgid ""
"To verify that the installation was successful, run the following command "
"from the top of the repository:"
msgstr "要验证安装是否成功，请从存储库顶部运行以下命令: "

#: ../../source/setup/installation/binaries_installation.rst:409
msgid ""
"The above command should launch the simulator and display a window with a "
"black ground plane. You can exit the script by pressing ``Ctrl+C`` on your "
"terminal. On Windows machines, please terminate the process from Command "
"Prompt using ``Ctrl+Break`` or ``Ctrl+fn+B``."
msgstr ""
"上述命令应该启动模拟器，并显示具有黑色地面平面的窗口。您可以通过在终端上按 ``Ctrl+C`` 来退出脚本。在 Windows "
"机器上，请使用命令提示符从 ``Ctrl+Break`` 或 ``Ctrl+fn+B`` 终止进程。"

#: ../../source/setup/installation/binaries_installation.rst:414
msgid "If you see this, then the installation was successful! |:tada:|"
msgstr "如果您看到这个，那么安装成功了！ |:tada:|"
