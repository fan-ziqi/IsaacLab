# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-27 16:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/api/lab/isaaclab.envs.rst:2
msgid "isaaclab.envs"
msgstr ""

#: isaaclab.envs:1 of
msgid "Sub-package for environment definitions."
msgstr ""

#: isaaclab.envs:3 of
msgid ""
"Environments define the interface between the agent and the simulation. "
"In the simplest case, the environment provides the agent with the current"
" observations and executes the actions provided by the agent. However, "
"the environment can also provide additional information such as the "
"current reward, done flag, and information about the current episode."
msgstr ""

#: isaaclab.envs:9 of
msgid "There are two types of environment designing workflows:"
msgstr ""

#: isaaclab.envs:11 of
msgid ""
"**Manager-based**: The environment is decomposed into individual "
"components (or managers) for different aspects (such as computing "
"observations, applying actions, and applying randomization. The users "
"mainly configure the managers and the environment coordinates the "
"managers and calls their functions."
msgstr ""

#: isaaclab.envs:15 of
msgid ""
"**Direct**: The user implements all the necessary functionality directly "
"into a single class directly without the need for additional managers."
msgstr ""

#: isaaclab.envs:18 of
msgid ""
"Based on these workflows, there are the following environment classes for"
" single and multi-agent RL:"
msgstr ""

#: isaaclab.envs:20 of
msgid "**Single-Agent RL:**"
msgstr ""

#: isaaclab.envs:22 of
msgid ""
":class:`ManagerBasedEnv`: The manager-based workflow base environment "
"which only provides the agent with the current observations and executes "
"the actions provided by the agent."
msgstr ""

#: isaaclab.envs:24 of
msgid ""
":class:`ManagerBasedRLEnv`: The manager-based workflow RL task "
"environment which besides the functionality of the base environment also "
"provides additional Markov Decision Process (MDP) related information "
"such as the current reward, done flag, and information."
msgstr ""

#: isaaclab.envs:27 of
msgid ""
":class:`DirectRLEnv`: The direct workflow RL task environment which "
"provides implementations for implementing scene setup, computing dones, "
"performing resets, and computing reward and observation."
msgstr ""

#: isaaclab.envs:30 of
msgid "**Multi-Agent RL (MARL):**"
msgstr ""

#: isaaclab.envs:32 of
msgid ""
":class:`DirectMARLEnv`: The direct workflow MARL task environment which "
"provides implementations for implementing scene setup, computing dones, "
"performing resets, and computing reward and observation."
msgstr ""

#: isaaclab.envs:35 of
msgid ""
"For more information about the workflow design patterns, see the `Task "
"Design Workflows`_ section."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:7
msgid "Submodules"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:12:<autosummary>:1
msgid ":py:obj:`mdp <isaaclab.envs.mdp>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:12:<autosummary>:1
msgid "Sub-module with implementation of manager terms."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:12:<autosummary>:1
msgid ":py:obj:`ui <isaaclab.envs.ui>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:12:<autosummary>:1
msgid "Sub-module providing UI window implementation for environments."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:14
msgid "Classes"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
msgid ":py:obj:`ManagerBasedEnv <isaaclab.envs.ManagerBasedEnv>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1 of
msgid ""
"The base environment encapsulates the simulation scene and the "
"environment managers for the manager-based workflow."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
msgid ":py:obj:`ManagerBasedEnvCfg <isaaclab.envs.ManagerBasedEnvCfg>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1 of
msgid "Base configuration of the environment."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
msgid ":py:obj:`ManagerBasedRLEnv <isaaclab.envs.ManagerBasedRLEnv>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1 of
msgid ""
"The superclass for the manager-based workflow reinforcement learning-"
"based environments."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
msgid ":py:obj:`ManagerBasedRLEnvCfg <isaaclab.envs.ManagerBasedRLEnvCfg>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env_cfg.ManagerBasedRLEnvCfg:1 of
msgid ""
"Configuration for a reinforcement learning environment with the manager-"
"based workflow."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
msgid ":py:obj:`DirectRLEnv <isaaclab.envs.DirectRLEnv>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1 of
msgid "The superclass for the direct workflow to design environments."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
msgid ":py:obj:`DirectRLEnvCfg <isaaclab.envs.DirectRLEnvCfg>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1 of
msgid "Configuration for an RL environment defined with the direct workflow."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
msgid ":py:obj:`DirectMARLEnv <isaaclab.envs.DirectMARLEnv>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1 of
msgid "The superclass for the direct workflow to design multi-agent environments."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
msgid ":py:obj:`DirectMARLEnvCfg <isaaclab.envs.DirectMARLEnvCfg>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1 of
msgid "Configuration for a MARL environment defined with the direct workflow."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
msgid ":py:obj:`ManagerBasedRLMimicEnv <isaaclab.envs.ManagerBasedRLMimicEnv>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1 of
msgid "The superclass for the Isaac Lab Mimic environments."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
msgid ":py:obj:`MimicEnvCfg <isaaclab.envs.MimicEnvCfg>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
#: isaaclab.envs.mimic_env_cfg.MimicEnvCfg:1 of
msgid "Configuration class for the Mimic environment integration."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
msgid ":py:obj:`ViewerCfg <isaaclab.envs.ViewerCfg>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:27:<autosummary>:1
#: isaaclab.envs.common.ViewerCfg:1 of
msgid "Configuration of the scene viewport camera."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:30
msgid "Manager Based Environment"
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:3 of
msgid ""
"While a simulation scene or world comprises of different components such "
"as the robots, objects, and sensors (cameras, lidars, etc.), the "
"environment is a higher level abstraction that provides an interface for "
"interacting with the simulation. The environment is comprised of the "
"following components:"
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:8 of
msgid ""
"**Scene**: The scene manager that creates and manages the virtual world "
"in which the robot operates. This includes defining the robot, static and"
" dynamic objects, sensors, etc."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:10 of
msgid ""
"**Observation Manager**: The observation manager that generates "
"observations from the current simulation state and the data gathered from"
" the sensors. These observations may include privileged information that "
"is not available to the robot in the real world. Additionally, user-"
"defined terms can be added to process the observations and generate "
"custom observations. For example, using a network to embed high-"
"dimensional observations into a lower-dimensional space."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:15 of
msgid ""
"**Action Manager**: The action manager that processes the raw actions "
"sent to the environment and converts them to low-level commands that are "
"sent to the simulation. It can be configured to accept raw actions at "
"different levels of abstraction. For example, in case of a robotic arm, "
"the raw actions can be joint torques, joint positions, or end-effector "
"poses. Similarly for a mobile base, it can be the joint torques, or the "
"desired velocity of the floating base."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:20 of
msgid ""
"**Event Manager**: The event manager orchestrates operations triggered "
"based on simulation events. This includes resetting the scene to a "
"default state, applying random pushes to the robot at different intervals"
" of time, or randomizing properties such as mass and friction "
"coefficients. This is useful for training and evaluating the robot in a "
"variety of scenarios."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:24 of
msgid ""
"**Recorder Manager**: The recorder manager that handles recording data "
"produced during different steps in the simulation. This includes "
"recording in the beginning and end of a reset and a step. The recorded "
"data is distinguished per episode, per environment and can be exported "
"through a dataset file handler to a file."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:28 of
msgid ""
"The environment provides a unified interface for interacting with the "
"simulation. However, it does not include task-specific quantities such as"
" the reward function, or the termination conditions. These quantities are"
" often specific to defining Markov Decision Processes (MDPs) while the "
"base environment is agnostic to the MDP definition."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:33 of
msgid ""
"The environment steps forward in time at a fixed time-step. The physics "
"simulation is decimated at a lower time-step. This is to ensure that the "
"simulation is stable. These two time-steps can be configured "
"independently using the :attr:`ManagerBasedEnvCfg.decimation` (number of "
"simulation steps per environment step) and the "
":attr:`ManagerBasedEnvCfg.sim.dt` (physics time-step) parameters. Based "
"on these parameters, the environment time-step is computed as the product"
" of the two. The two time-steps can be obtained by querying the "
":attr:`physics_dt` and the :attr:`step_dt` properties respectively."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1 of
msgid "**Methods:**"
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1 of
msgid ":py:obj:`__init__ <isaaclab.envs.ManagerBasedEnv.__init__>`\\ \\(cfg\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1
#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.__init__:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv.__init__:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.__init__:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.__init__:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid "Initialize the environment."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1 of
msgid ""
":py:obj:`load_managers <isaaclab.envs.ManagerBasedEnv.load_managers>`\\ "
"\\(\\)"
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.load_managers:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.load_managers:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid "Load the managers for the environment."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1 of
msgid ""
":py:obj:`setup_manager_visualizers "
"<isaaclab.envs.ManagerBasedEnv.setup_manager_visualizers>`\\ \\(\\)"
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.setup_manager_visualizers:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.setup_manager_visualizers:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid "Creates live visualizers for manager terms."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1 of
msgid ""
":py:obj:`reset <isaaclab.envs.ManagerBasedEnv.reset>`\\ \\(\\[seed\\, "
"env\\_ids\\, options\\]\\)"
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid "Resets the specified environments and returns observations."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1 of
msgid ""
":py:obj:`reset_to <isaaclab.envs.ManagerBasedEnv.reset_to>`\\ \\(state\\,"
" env\\_ids\\[\\, seed\\, is\\_relative\\]\\)"
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset_to:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid "Resets specified environments to provided states."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1 of
msgid ":py:obj:`step <isaaclab.envs.ManagerBasedEnv.step>`\\ \\(action\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1
#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.step:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv.step:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.step:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1 of
msgid "Execute one time-step of the environment's dynamics."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1 of
msgid ":py:obj:`seed <isaaclab.envs.ManagerBasedEnv.seed>`\\ \\(\\[seed\\]\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1
#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.seed:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv.seed:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.seed:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid "Set the seed for the environment."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1 of
msgid ":py:obj:`close <isaaclab.envs.ManagerBasedEnv.close>`\\ \\(\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1
#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.close:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv.close:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.close:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.close:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid "Cleanup for the environment."
msgstr ""

#: isaaclab.envs.common.ViewerCfg:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1
#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv:1
#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1
#: isaaclab.envs.manager_based_rl_env_cfg.ManagerBasedRLEnvCfg:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1 of
msgid "**Attributes:**"
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.__init__:1:<autosummary>:1
#: of
msgid ":py:obj:`num_envs <isaaclab.envs.ManagerBasedEnv.num_envs>`\\"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.num_envs:1 isaaclab.envs.DirectRLEnv.num_envs:1
#: isaaclab.envs.ManagerBasedEnv.num_envs:1
#: isaaclab.envs.ManagerBasedRLEnv.num_envs:1
#: isaaclab.envs.ManagerBasedRLMimicEnv.num_envs:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.__init__:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid "The number of instances of the environment that are running."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.__init__:1:<autosummary>:1
#: of
msgid ":py:obj:`physics_dt <isaaclab.envs.ManagerBasedEnv.physics_dt>`\\"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.physics_dt:1
#: isaaclab.envs.DirectRLEnv.physics_dt:1
#: isaaclab.envs.ManagerBasedEnv.physics_dt:1
#: isaaclab.envs.ManagerBasedRLEnv.physics_dt:1
#: isaaclab.envs.ManagerBasedRLMimicEnv.physics_dt:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.__init__:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid "The physics time-step (in s)."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.__init__:1:<autosummary>:1
#: of
msgid ":py:obj:`step_dt <isaaclab.envs.ManagerBasedEnv.step_dt>`\\"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.step_dt:1 isaaclab.envs.DirectRLEnv.step_dt:1
#: isaaclab.envs.ManagerBasedEnv.step_dt:1
#: isaaclab.envs.ManagerBasedRLEnv.step_dt:1
#: isaaclab.envs.ManagerBasedRLMimicEnv.step_dt:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.__init__:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid "The environment stepping time-step (in s)."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.__init__:1:<autosummary>:1
#: of
msgid ":py:obj:`device <isaaclab.envs.ManagerBasedEnv.device>`\\"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.device:1 isaaclab.envs.DirectRLEnv.device:1
#: isaaclab.envs.ManagerBasedEnv.device:1
#: isaaclab.envs.ManagerBasedRLEnv.device:1
#: isaaclab.envs.ManagerBasedRLMimicEnv.device:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.__init__:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid "The device on which the environment is running."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.__init__
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.render
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.reset
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.seed
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.set_debug_vis
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.step
#: isaaclab.envs.direct_rl_env.DirectRLEnv.__init__
#: isaaclab.envs.direct_rl_env.DirectRLEnv.render
#: isaaclab.envs.direct_rl_env.DirectRLEnv.reset
#: isaaclab.envs.direct_rl_env.DirectRLEnv.seed
#: isaaclab.envs.direct_rl_env.DirectRLEnv.set_debug_vis
#: isaaclab.envs.direct_rl_env.DirectRLEnv.step
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.__init__
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset_to
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.seed
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.step
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.__init__
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.render
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.step
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.action_to_target_eef_pose
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.actions_to_gripper_actions
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_object_poses
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_subtask_term_signals
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.target_eef_pose_to_action
#: of
msgid "参数"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.__init__:3
#: isaaclab.envs.direct_rl_env.DirectRLEnv.__init__:3
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.__init__:3 of
msgid "The configuration object for the environment."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.__init__
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.render
#: isaaclab.envs.direct_rl_env.DirectRLEnv.__init__
#: isaaclab.envs.direct_rl_env.DirectRLEnv.render
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.__init__
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.render of
msgid "抛出"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.__init__:7
#: isaaclab.envs.direct_rl_env.DirectRLEnv.__init__:7
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.__init__:5 of
msgid ""
"If a simulation context already exists. The environment must always "
"create one     since it configures the simulation context and controls "
"the simulation."
msgstr ""

#: isaaclab.envs.DirectMARLEnv.physics_dt:3
#: isaaclab.envs.DirectRLEnv.physics_dt:3
#: isaaclab.envs.ManagerBasedEnv.physics_dt:3
#: isaaclab.envs.ManagerBasedRLEnv.physics_dt:3
#: isaaclab.envs.ManagerBasedRLMimicEnv.physics_dt:3 of
msgid "This is the lowest time-decimation at which the simulation is happening."
msgstr ""

#: isaaclab.envs.DirectMARLEnv.step_dt:3 isaaclab.envs.DirectRLEnv.step_dt:3
#: isaaclab.envs.ManagerBasedEnv.step_dt:3
#: isaaclab.envs.ManagerBasedRLEnv.step_dt:3
#: isaaclab.envs.ManagerBasedRLMimicEnv.step_dt:3 of
msgid "This is the time-step at which the environment steps forward."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.load_managers:3
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.load_managers:3 of
msgid ""
"This function is responsible for creating the various managers (action, "
"observation, events, etc.) for the environment. Since the managers "
"require access to physics handles, they can only be created after the "
"simulator is reset (i.e. played for the first time)."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.load_managers:8
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.load_managers:8 of
msgid ""
"In case of standalone application (when running simulator from Python), "
"the function is called automatically when the class is initialized."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.load_managers:11
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.load_managers:11 of
msgid ""
"However, in case of extension mode, the user must call this function "
"manually after the simulator is reset. This is because the simulator is "
"only reset when the user calls :meth:`SimulationContext.reset_async` and "
"it isn't possible to call async functions in the constructor."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset:3 of
msgid ""
"This function calls the :meth:`_reset_idx` function to reset the "
"specified environments. However, certain operations, such as procedural "
"terrain generation, that happened during initialization are not repeated."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.reset:3
#: isaaclab.envs.direct_rl_env.DirectRLEnv.reset:7
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset:7
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset_to:13 of
msgid ""
"The seed to use for randomization. Defaults to None, in which case the "
"seed is not set."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset:8
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset_to:12 of
msgid ""
"The environment ids to reset. Defaults to None, in which case all "
"environments are reset."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.reset:4
#: isaaclab.envs.direct_rl_env.DirectRLEnv.reset:8
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset:9 of
msgid ""
"Additional information to specify how the environment is reset. Defaults "
"to None.  .. note:: This argument is used for compatibility with "
"Gymnasium environment definition."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.reset:4
#: isaaclab.envs.direct_rl_env.DirectRLEnv.reset:8
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset:9 of
msgid ""
"Additional information to specify how the environment is reset. Defaults "
"to None."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.reset:6
#: isaaclab.envs.direct_rl_env.DirectRLEnv.reset:10
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset:11 of
msgid ""
"This argument is used for compatibility with Gymnasium environment "
"definition."
msgstr ""

#: isaaclab.envs.DirectMARLEnv.np_random
#: isaaclab.envs.DirectMARLEnv.np_random_seed
#: isaaclab.envs.DirectRLEnv.np_random isaaclab.envs.DirectRLEnv.np_random_seed
#: isaaclab.envs.DirectRLEnv.unwrapped
#: isaaclab.envs.ManagerBasedRLEnv.np_random
#: isaaclab.envs.ManagerBasedRLEnv.np_random_seed
#: isaaclab.envs.ManagerBasedRLEnv.unwrapped
#: isaaclab.envs.ManagerBasedRLMimicEnv.np_random
#: isaaclab.envs.ManagerBasedRLMimicEnv.np_random_seed
#: isaaclab.envs.ManagerBasedRLMimicEnv.unwrapped
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.action_space
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.observation_space
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.render
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.reset
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.seed
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.set_debug_vis
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.state
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.step
#: isaaclab.envs.direct_rl_env.DirectRLEnv.render
#: isaaclab.envs.direct_rl_env.DirectRLEnv.reset
#: isaaclab.envs.direct_rl_env.DirectRLEnv.seed
#: isaaclab.envs.direct_rl_env.DirectRLEnv.set_debug_vis
#: isaaclab.envs.direct_rl_env.DirectRLEnv.step
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.seed
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.step
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.render
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.step
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.action_to_target_eef_pose
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.actions_to_gripper_actions
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_object_poses
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_subtask_term_signals
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.target_eef_pose_to_action
#: of
msgid "返回"
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv.reset:12
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset:13
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.step:11 of
msgid "A tuple containing the observations and extras."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset_to:3 of
msgid ""
"This function resets the environments to the provided states. The state "
"is a dictionary containing the state of the scene entities. Please refer "
"to :meth:`InteractiveScene.get_state` for the format."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset_to:7 of
msgid ""
"The function is different from the :meth:`reset` function as it resets "
"the environments to specific states, instead of using the randomization "
"events for resetting the environments."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset_to:10 of
msgid ""
"The state to reset the specified environments to. Please refer to "
":meth:`InteractiveScene.get_state` for the format."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.reset_to:14 of
msgid ""
"If set to True, the state is considered relative to the environment "
"origins. Defaults to False."
msgstr ""

#: isaaclab.envs.manager_based_env.ManagerBasedEnv.step:3 of
msgid ""
"The environment steps forward at a fixed time-step, while the physics "
"simulation is decimated at a lower time-step. This is to ensure that the "
"simulation is stable. These two time-steps can be configured "
"independently using the :attr:`ManagerBasedEnvCfg.decimation` (number of "
"simulation steps per environment step) and the "
":attr:`ManagerBasedEnvCfg.sim.dt` (physics time-step). Based on these "
"parameters, the environment time-step is computed as the product of the "
"two."
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv.step:18
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.step:9
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.step:13 of
msgid "The actions to apply on the environment. Shape is (num_envs, action_dim)."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.seed:3
#: isaaclab.envs.direct_rl_env.DirectRLEnv.seed:3
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.seed:3 of
msgid "The seed for random generator. Defaults to -1."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.seed:5
#: isaaclab.envs.direct_rl_env.DirectRLEnv.seed:5
#: isaaclab.envs.manager_based_env.ManagerBasedEnv.seed:5 of
msgid "The seed used for random generator."
msgstr ""

#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`viewer <isaaclab.envs.ManagerBasedEnvCfg.viewer>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "Viewer configuration."
msgstr ""

#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`sim <isaaclab.envs.ManagerBasedEnvCfg.sim>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "Physics simulation configuration."
msgstr ""

#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`seed <isaaclab.envs.ManagerBasedEnvCfg.seed>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "The seed for the random number generator."
msgstr ""

#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`decimation <isaaclab.envs.ManagerBasedEnvCfg.decimation>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.decimation:1
#: isaaclab.envs.DirectRLEnvCfg.decimation:1
#: isaaclab.envs.ManagerBasedEnvCfg.decimation:1
#: isaaclab.envs.ManagerBasedRLEnvCfg.decimation:1
#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "Number of control action updates @ sim dt per policy dt."
msgstr ""

#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`scene <isaaclab.envs.ManagerBasedEnvCfg.scene>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.scene:1
#: isaaclab.envs.DirectRLEnvCfg.scene:1
#: isaaclab.envs.ManagerBasedEnvCfg.scene:1
#: isaaclab.envs.ManagerBasedRLEnvCfg.scene:1
#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "Scene settings."
msgstr ""

#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`recorders <isaaclab.envs.ManagerBasedEnvCfg.recorders>`\\"
msgstr ""

#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "Recorder settings."
msgstr ""

#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`observations <isaaclab.envs.ManagerBasedEnvCfg.observations>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedEnvCfg.observations:1
#: isaaclab.envs.ManagerBasedRLEnvCfg.observations:1
#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "Observation space settings."
msgstr ""

#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`actions <isaaclab.envs.ManagerBasedEnvCfg.actions>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedEnvCfg.actions:1
#: isaaclab.envs.ManagerBasedRLEnvCfg.actions:1
#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "Action space settings."
msgstr ""

#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`events <isaaclab.envs.ManagerBasedEnvCfg.events>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "Event settings."
msgstr ""

#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`rerender_on_reset "
"<isaaclab.envs.ManagerBasedEnvCfg.rerender_on_reset>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ""
"Whether a render step is performed again after at least one environment "
"has been reset."
msgstr ""

#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`wait_for_textures "
"<isaaclab.envs.ManagerBasedEnvCfg.wait_for_textures>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1:<autosummary>:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "True to wait for assets to be loaded completely, False otherwise."
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1
#: isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg:1
#: isaaclab.envs.manager_based_rl_env_cfg.ManagerBasedRLEnvCfg:1 of
msgid "**Classes:**"
msgstr ""

#: isaaclab.envs.ManagerBasedEnvCfg.viewer:1:<autosummary>:1 of
msgid ""
":py:obj:`ui_window_class_type "
"<isaaclab.envs.ManagerBasedEnvCfg.ui_window_class_type>`\\"
msgstr ""

#: isaaclab.envs.DirectMARLEnvCfg.viewer:1:<autosummary>:1
#: isaaclab.envs.DirectRLEnvCfg.viewer:1:<autosummary>:1
#: isaaclab.envs.ManagerBasedEnvCfg.viewer:1:<autosummary>:1 of
msgid ":py:class:`~isaaclab.envs.ui.base_env_window.BaseEnvWindow` 的别名"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.viewer:1
#: isaaclab.envs.DirectRLEnvCfg.viewer:1
#: isaaclab.envs.ManagerBasedEnvCfg.viewer:1
#: isaaclab.envs.ManagerBasedRLEnvCfg.viewer:1 of
msgid "Viewer configuration. Default is ViewerCfg()."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.sim:1
#: isaaclab.envs.DirectRLEnvCfg.sim:1 isaaclab.envs.ManagerBasedEnvCfg.sim:1
#: isaaclab.envs.ManagerBasedRLEnvCfg.sim:1 of
msgid "Physics simulation configuration. Default is SimulationCfg()."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.seed:1
#: isaaclab.envs.DirectRLEnvCfg.seed:1 isaaclab.envs.ManagerBasedEnvCfg.seed:1
#: isaaclab.envs.ManagerBasedRLEnvCfg.seed:1 of
msgid ""
"The seed for the random number generator. Defaults to None, in which case"
" the seed is not set."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.seed:5
#: isaaclab.envs.DirectRLEnvCfg.seed:5 isaaclab.envs.ManagerBasedEnvCfg.seed:5
#: isaaclab.envs.ManagerBasedRLEnvCfg.seed:5 of
msgid ""
"The seed is set at the beginning of the environment initialization. This "
"ensures that the environment creation is deterministic and behaves "
"similarly across different runs."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.decimation:3
#: isaaclab.envs.DirectRLEnvCfg.decimation:3
#: isaaclab.envs.ManagerBasedEnvCfg.decimation:3
#: isaaclab.envs.ManagerBasedRLEnvCfg.decimation:3 of
msgid ""
"For instance, if the simulation dt is 0.01s and the policy dt is 0.1s, "
"then the decimation is 10. This means that the control action is updated "
"every 10 simulation steps."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.scene:3
#: isaaclab.envs.DirectRLEnvCfg.scene:3
#: isaaclab.envs.ManagerBasedEnvCfg.scene:3
#: isaaclab.envs.ManagerBasedRLEnvCfg.scene:3 of
msgid ""
"Please refer to the :class:`isaaclab.scene.InteractiveSceneCfg` class for"
" more details."
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedEnvCfg.recorders:1
#: isaaclab.envs.ManagerBasedRLEnvCfg.recorders:1 of
msgid "Recorder settings. Defaults to recording nothing."
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedEnvCfg.recorders:3
#: isaaclab.envs.ManagerBasedRLEnvCfg.recorders:3 of
msgid ""
"Please refer to the :class:`isaaclab.managers.RecorderManager` class for "
"more details."
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedEnvCfg.observations:3
#: isaaclab.envs.ManagerBasedRLEnvCfg.observations:3 of
msgid ""
"Please refer to the :class:`isaaclab.managers.ObservationManager` class "
"for more details."
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedEnvCfg.actions:3
#: isaaclab.envs.ManagerBasedRLEnvCfg.actions:3 of
msgid ""
"Please refer to the :class:`isaaclab.managers.ActionManager` class for "
"more details."
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedEnvCfg.events:1
#: isaaclab.envs.ManagerBasedRLEnvCfg.events:1 of
msgid ""
"Event settings. Defaults to the basic configuration that resets the scene"
" to its default state."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.events:3
#: isaaclab.envs.DirectRLEnvCfg.events:3
#: isaaclab.envs.ManagerBasedEnvCfg.events:3
#: isaaclab.envs.ManagerBasedRLEnvCfg.events:3 of
msgid ""
"Please refer to the :class:`isaaclab.managers.EventManager` class for "
"more details."
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnvCfg.rerender_on_reset:1
#: isaaclab.envs.ManagerBasedEnvCfg.rerender_on_reset:1
#: isaaclab.envs.ManagerBasedRLEnvCfg.rerender_on_reset:1 of
msgid ""
"Whether a render step is performed again after at least one environment "
"has been reset. Defaults to False, which means no render step will be "
"performed after reset."
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnvCfg.rerender_on_reset:4
#: isaaclab.envs.ManagerBasedEnvCfg.rerender_on_reset:4
#: isaaclab.envs.ManagerBasedRLEnvCfg.rerender_on_reset:4 of
msgid ""
"When this is False, data collected from sensors after performing reset "
"will be stale and will not reflect the latest states in simulation caused"
" by the reset."
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnvCfg.rerender_on_reset:6
#: isaaclab.envs.ManagerBasedEnvCfg.rerender_on_reset:6
#: isaaclab.envs.ManagerBasedRLEnvCfg.rerender_on_reset:6 of
msgid ""
"When this is True, an extra render step will be performed to update the "
"sensor data to reflect the latest states from the reset. This comes at a "
"cost of performance as an additional render step will be performed after "
"each time an environment is reset."
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnvCfg.wait_for_textures:1
#: isaaclab.envs.ManagerBasedEnvCfg.wait_for_textures:1
#: isaaclab.envs.ManagerBasedRLEnvCfg.wait_for_textures:1 of
msgid ""
"True to wait for assets to be loaded completely, False otherwise. "
"Defaults to True."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:40
msgid "Manager Based RL Environment"
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1 of
msgid ""
"基类：:py:class:`~isaaclab.envs.manager_based_env.ManagerBasedEnv`, "
":py:class:`~gymnasium.core.Env`"
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:3 of
msgid ""
"This class inherits from :class:`ManagerBasedEnv` and implements the core"
" functionality for reinforcement learning-based environments. It is "
"designed to be used with any RL library. The class is designed to be used"
" with vectorized environments, i.e., the environment is expected to be "
"run in parallel with multiple sub-environments. The number of sub-"
"environments is specified using the ``num_envs``."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:9 of
msgid ""
"Each observation from the environment is a batch of observations for each"
" sub- environments. The method :meth:`step` is also expected to receive a"
" batch of actions for each sub-environment."
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv:8
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:13 of
msgid ""
"While the environment itself is implemented as a vectorized environment, "
"we do not inherit from :class:`gym.vector.VectorEnv`. This is mainly "
"because the class adds various methods (for wait and asynchronous "
"updates) which are not required. Additionally, each RL library typically "
"has its own definition for a vectorized environment. Thus, to reduce "
"complexity, we directly use the :class:`gym.Env` over here and leave it "
"up to library-defined wrappers to take care of wrapping this environment "
"for their agents."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:15
#: isaaclab.envs.direct_rl_env.DirectRLEnv:18
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:23 of
msgid ""
"For vectorized environments, it is recommended to **only** call the "
":meth:`reset` method once before the first call to :meth:`step`, i.e. "
"after the environment is created. After that, the :meth:`step` function "
"handles the reset of terminated sub-environments. This is because the "
"simulator does not support resetting individual sub-environments in a "
"vectorized environment."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`is_vector_env <isaaclab.envs.ManagerBasedRLEnv.is_vector_env>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnv.is_vector_env:1
#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1
#: isaaclab.envs.ManagerBasedRLMimicEnv.is_vector_env:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid "Whether the environment is a vectorized environment."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`metadata <isaaclab.envs.ManagerBasedRLEnv.metadata>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnv.metadata:1
#: isaaclab.envs.DirectRLEnv.metadata:1
#: isaaclab.envs.ManagerBasedRLEnv.metadata:1
#: isaaclab.envs.ManagerBasedRLMimicEnv.metadata:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid "Metadata for the environment."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`cfg <isaaclab.envs.ManagerBasedRLEnv.cfg>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedRLEnv.cfg:1
#: isaaclab.envs.ManagerBasedRLMimicEnv.cfg:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid "Configuration for the environment."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1 of
msgid ""
":py:obj:`max_episode_length_s "
"<isaaclab.envs.ManagerBasedRLEnv.max_episode_length_s>`\\"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.max_episode_length_s:1
#: isaaclab.envs.DirectRLEnv.max_episode_length_s:1
#: isaaclab.envs.ManagerBasedRLEnv.max_episode_length_s:1
#: isaaclab.envs.ManagerBasedRLMimicEnv.max_episode_length_s:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid "Maximum episode length in seconds."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1 of
msgid ""
":py:obj:`max_episode_length "
"<isaaclab.envs.ManagerBasedRLEnv.max_episode_length>`\\"
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.max_episode_length:1
#: isaaclab.envs.ManagerBasedRLMimicEnv.max_episode_length:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid "Maximum episode length in environment steps."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`device <isaaclab.envs.ManagerBasedRLEnv.device>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`np_random <isaaclab.envs.ManagerBasedRLEnv.np_random>`\\"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.np_random:1
#: isaaclab.envs.DirectRLEnv.np_random:1
#: isaaclab.envs.ManagerBasedRLEnv.np_random:1
#: isaaclab.envs.ManagerBasedRLMimicEnv.np_random:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ""
"Returns the environment's internal :attr:`_np_random` that if not set "
"will initialise with a random seed."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1 of
msgid ""
":py:obj:`np_random_seed "
"<isaaclab.envs.ManagerBasedRLEnv.np_random_seed>`\\"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.np_random_seed:1
#: isaaclab.envs.DirectRLEnv.np_random_seed:1
#: isaaclab.envs.ManagerBasedRLEnv.np_random_seed:1
#: isaaclab.envs.ManagerBasedRLMimicEnv.np_random_seed:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ""
"Returns the environment's internal :attr:`_np_random_seed` that if not "
"set will first initialise with a random int as seed."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`num_envs <isaaclab.envs.ManagerBasedRLEnv.num_envs>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`physics_dt <isaaclab.envs.ManagerBasedRLEnv.physics_dt>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`step_dt <isaaclab.envs.ManagerBasedRLEnv.step_dt>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`unwrapped <isaaclab.envs.ManagerBasedRLEnv.unwrapped>`\\"
msgstr ""

#: isaaclab.envs.DirectRLEnv.unwrapped:1
#: isaaclab.envs.ManagerBasedRLEnv.unwrapped:1
#: isaaclab.envs.ManagerBasedRLMimicEnv.unwrapped:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid "Returns the base non-wrapped environment."
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`__init__ <isaaclab.envs.ManagerBasedRLEnv.__init__>`\\ "
"\\(cfg\\[\\, render\\_mode\\]\\)"
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`load_managers <isaaclab.envs.ManagerBasedRLEnv.load_managers>`\\"
" \\(\\)"
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`setup_manager_visualizers "
"<isaaclab.envs.ManagerBasedRLEnv.setup_manager_visualizers>`\\ \\(\\)"
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ":py:obj:`step <isaaclab.envs.ManagerBasedRLEnv.step>`\\ \\(action\\)"
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.step:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
"Execute one time-step of the environment's dynamics and reset terminated "
"environments."
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`render <isaaclab.envs.ManagerBasedRLEnv.render>`\\ "
"\\(\\[recompute\\]\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1
#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.render:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv.render:1
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.render:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid "Run rendering without stepping through the physics."
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ":py:obj:`close <isaaclab.envs.ManagerBasedRLEnv.close>`\\ \\(\\)"
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`get_wrapper_attr "
"<isaaclab.envs.ManagerBasedRLEnv.get_wrapper_attr>`\\ \\(name\\)"
msgstr ""

#: gymnasium.core.Env.get_wrapper_attr:1
#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1
#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid "Gets the attribute `name` from the environment."
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`has_wrapper_attr "
"<isaaclab.envs.ManagerBasedRLEnv.has_wrapper_attr>`\\ \\(name\\)"
msgstr ""

#: gymnasium.core.Env.has_wrapper_attr:1
#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1
#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid "Checks if the attribute `name` exists in the environment."
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`reset <isaaclab.envs.ManagerBasedRLEnv.reset>`\\ \\(\\[seed\\, "
"env\\_ids\\, options\\]\\)"
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`reset_to <isaaclab.envs.ManagerBasedRLEnv.reset_to>`\\ "
"\\(state\\, env\\_ids\\[\\, seed\\, is\\_relative\\]\\)"
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ":py:obj:`seed <isaaclab.envs.ManagerBasedRLEnv.seed>`\\ \\(\\[seed\\]\\)"
msgstr ""

#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`set_wrapper_attr "
"<isaaclab.envs.ManagerBasedRLEnv.set_wrapper_attr>`\\ \\(name\\, value\\)"
msgstr ""

#: gymnasium.core.Env.set_wrapper_attr:1
#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1
#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.ManagerBasedRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid "Sets the attribute `name` on the environment with `value`."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.__init__:3 of
msgid "The configuration for the environment."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.__init__:4
#: isaaclab.envs.direct_rl_env.DirectRLEnv.__init__:4
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.__init__:4 of
msgid ""
"The render mode for the environment. Defaults to None, which is similar "
"to ``\"human\"``."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.step:3 of
msgid ""
"Unlike the :class:`ManagerBasedEnv.step` class, the function performs the"
" following operations:"
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.step:5 of
msgid "Process the actions."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.step:6 of
msgid "Perform physics stepping."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.step:7 of
msgid "Perform rendering if gui is enabled."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.step:8 of
msgid "Update the environment counters and compute the rewards and terminations."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.step:9 of
msgid "Reset the environments that terminated."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.step:10 of
msgid "Compute the observations."
msgstr ""

#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.step:11 of
msgid "Return the observations, rewards, resets and extras."
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv.step:20
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.step:15 of
msgid ""
"A tuple containing the observations, rewards, resets (terminated and "
"truncated) and extras."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.render:3
#: isaaclab.envs.direct_rl_env.DirectRLEnv.render:3
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.render:3 of
msgid "By convention, if mode is:"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.render:5
#: isaaclab.envs.direct_rl_env.DirectRLEnv.render:5
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.render:5 of
msgid ""
"**human**: Render to the current display and return nothing. Usually for "
"human consumption."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.render:6
#: isaaclab.envs.direct_rl_env.DirectRLEnv.render:6
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.render:6 of
msgid ""
"**rgb_array**: Return an numpy.ndarray with shape (x, y, 3), representing"
" RGB values for an x-by-y pixel image, suitable for turning into a video."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.render:9
#: isaaclab.envs.direct_rl_env.DirectRLEnv.render:9
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.render:9 of
msgid ""
"Whether to force a render even if the simulator has already rendered the "
"scene. Defaults to False."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.render:12
#: isaaclab.envs.direct_rl_env.DirectRLEnv.render:12
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.render:12 of
msgid ""
"The rendered image as a numpy array if mode is \"rgb_array\". Otherwise, "
"returns None."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.render:14
#: isaaclab.envs.direct_rl_env.DirectRLEnv.render:14
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.render:14 of
msgid ""
"If mode is set to \"rgb_data\" and simulation render mode does not "
"support it.     In this case, the simulation render mode must be set to "
"``RenderMode.PARTIAL_RENDERING``     or ``RenderMode.FULL_RENDERING``."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.render:15
#: isaaclab.envs.direct_rl_env.DirectRLEnv.render:15
#: isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv.render:15 of
msgid "If an unsupported rendering mode is specified."
msgstr ""

#: isaaclab.envs.DirectMARLEnv.np_random:3
#: isaaclab.envs.DirectRLEnv.np_random:3
#: isaaclab.envs.ManagerBasedRLEnv.np_random:3
#: isaaclab.envs.ManagerBasedRLMimicEnv.np_random:3 of
msgid "Instances of `np.random.Generator`"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.np_random_seed:3
#: isaaclab.envs.DirectRLEnv.np_random_seed:3
#: isaaclab.envs.ManagerBasedRLEnv.np_random_seed:3
#: isaaclab.envs.ManagerBasedRLMimicEnv.np_random_seed:3 of
msgid ""
"If :attr:`np_random_seed` was set directly instead of through "
":meth:`reset` or :meth:`set_np_random_through_seed`, the seed will take "
"the value -1."
msgstr ""

#: isaaclab.envs.DirectMARLEnv.np_random_seed:6
#: isaaclab.envs.DirectRLEnv.np_random_seed:6
#: isaaclab.envs.ManagerBasedRLEnv.np_random_seed:6
#: isaaclab.envs.ManagerBasedRLMimicEnv.np_random_seed:6 of
msgid ""
"the seed of the current `np_random` or -1, if the seed of the rng is "
"unknown"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.np_random_seed
#: isaaclab.envs.DirectRLEnv.np_random_seed isaaclab.envs.DirectRLEnv.unwrapped
#: isaaclab.envs.ManagerBasedRLEnv.np_random_seed
#: isaaclab.envs.ManagerBasedRLEnv.unwrapped
#: isaaclab.envs.ManagerBasedRLMimicEnv.np_random_seed
#: isaaclab.envs.ManagerBasedRLMimicEnv.unwrapped of
msgid "返回类型"
msgstr ""

#: isaaclab.envs.DirectRLEnv.unwrapped:3
#: isaaclab.envs.ManagerBasedRLEnv.unwrapped:3
#: isaaclab.envs.ManagerBasedRLMimicEnv.unwrapped:3 of
msgid "The base non-wrapped :class:`gymnasium.Env` instance"
msgstr ""

#: isaaclab.envs.manager_based_rl_env_cfg.ManagerBasedRLEnvCfg:1 of
msgid "基类：:py:class:`~isaaclab.envs.manager_based_env_cfg.ManagerBasedEnvCfg`"
msgstr ""

#: isaaclab.envs.manager_based_rl_env_cfg.ManagerBasedRLEnvCfg:1:<autosummary>:1
#: of
msgid ""
":py:obj:`ui_window_class_type "
"<isaaclab.envs.ManagerBasedRLEnvCfg.ui_window_class_type>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_env_cfg.ManagerBasedRLEnvCfg:1:<autosummary>:1
#: of
msgid ""
":py:class:`~isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow`"
" 的别名"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ""
":py:obj:`is_finite_horizon "
"<isaaclab.envs.ManagerBasedRLEnvCfg.is_finite_horizon>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ""
"Whether the learning task is treated as a finite or infinite horizon "
"problem for the agent."
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ""
":py:obj:`episode_length_s "
"<isaaclab.envs.ManagerBasedRLEnvCfg.episode_length_s>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.episode_length_s:1
#: isaaclab.envs.DirectRLEnvCfg.episode_length_s:1
#: isaaclab.envs.ManagerBasedRLEnvCfg.episode_length_s:1
#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "Duration of an episode (in seconds)."
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ":py:obj:`rewards <isaaclab.envs.ManagerBasedRLEnvCfg.rewards>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedRLEnvCfg.rewards:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "Reward settings."
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ":py:obj:`viewer <isaaclab.envs.ManagerBasedRLEnvCfg.viewer>`\\"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ":py:obj:`sim <isaaclab.envs.ManagerBasedRLEnvCfg.sim>`\\"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ":py:obj:`seed <isaaclab.envs.ManagerBasedRLEnvCfg.seed>`\\"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ":py:obj:`decimation <isaaclab.envs.ManagerBasedRLEnvCfg.decimation>`\\"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ":py:obj:`scene <isaaclab.envs.ManagerBasedRLEnvCfg.scene>`\\"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ":py:obj:`recorders <isaaclab.envs.ManagerBasedRLEnvCfg.recorders>`\\"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ":py:obj:`observations <isaaclab.envs.ManagerBasedRLEnvCfg.observations>`\\"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ":py:obj:`actions <isaaclab.envs.ManagerBasedRLEnvCfg.actions>`\\"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ":py:obj:`events <isaaclab.envs.ManagerBasedRLEnvCfg.events>`\\"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ""
":py:obj:`rerender_on_reset "
"<isaaclab.envs.ManagerBasedRLEnvCfg.rerender_on_reset>`\\"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ""
":py:obj:`wait_for_textures "
"<isaaclab.envs.ManagerBasedRLEnvCfg.wait_for_textures>`\\"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ":py:obj:`terminations <isaaclab.envs.ManagerBasedRLEnvCfg.terminations>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedRLEnvCfg.terminations:1
#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "Termination settings."
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ":py:obj:`curriculum <isaaclab.envs.ManagerBasedRLEnvCfg.curriculum>`\\"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "Curriculum settings."
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid ":py:obj:`commands <isaaclab.envs.ManagerBasedRLEnvCfg.commands>`\\"
msgstr ""

#: isaaclab.envs.ui.manager_based_rl_env_window.ManagerBasedRLEnvWindow:1:<autosummary>:1
#: of
msgid "Command settings."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.is_finite_horizon:1
#: isaaclab.envs.DirectRLEnvCfg.is_finite_horizon:1
#: isaaclab.envs.ManagerBasedRLEnvCfg.is_finite_horizon:1 of
msgid ""
"Whether the learning task is treated as a finite or infinite horizon "
"problem for the agent. Defaults to False, which means the task is treated"
" as an infinite horizon problem."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.is_finite_horizon:4
#: isaaclab.envs.DirectRLEnvCfg.is_finite_horizon:4
#: isaaclab.envs.ManagerBasedRLEnvCfg.is_finite_horizon:4 of
msgid "This flag handles the subtleties of finite and infinite horizon tasks:"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.is_finite_horizon:6
#: isaaclab.envs.DirectRLEnvCfg.is_finite_horizon:6
#: isaaclab.envs.ManagerBasedRLEnvCfg.is_finite_horizon:6 of
msgid ""
"**Finite horizon**: no penalty or bootstrapping value is required by the "
"the agent for running out of time. However, the environment still needs "
"to terminate the episode after the time limit is reached."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.is_finite_horizon:9
#: isaaclab.envs.DirectRLEnvCfg.is_finite_horizon:9
#: isaaclab.envs.ManagerBasedRLEnvCfg.is_finite_horizon:9 of
msgid ""
"**Infinite horizon**: the agent needs to bootstrap the value of the state"
" at the end of the episode. This is done by sending a time-limit (or "
"truncated) done signal to the agent, which triggers this bootstrapping "
"calculation."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.is_finite_horizon:13
#: isaaclab.envs.DirectRLEnvCfg.is_finite_horizon:13
#: isaaclab.envs.ManagerBasedRLEnvCfg.is_finite_horizon:13 of
msgid ""
"If True, then the environment is treated as a finite horizon problem and "
"no time-out (or truncated) done signal is sent to the agent. If False, "
"then the environment is treated as an infinite horizon problem and a "
"time-out (or truncated) done signal is sent to the agent."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.is_finite_horizon:19
#: isaaclab.envs.DirectRLEnvCfg.is_finite_horizon:19
#: isaaclab.envs.ManagerBasedRLEnvCfg.is_finite_horizon:19 of
msgid ""
"The base :class:`ManagerBasedRLEnv` class does not use this flag "
"directly. It is used by the environment wrappers to determine what type "
"of done signal to send to the corresponding learning agent."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.episode_length_s:3
#: isaaclab.envs.DirectRLEnvCfg.episode_length_s:3
#: isaaclab.envs.ManagerBasedRLEnvCfg.episode_length_s:3 of
msgid ""
"Based on the decimation rate and physics time step, the episode length is"
" calculated as:"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.episode_length_s:9
#: isaaclab.envs.DirectRLEnvCfg.episode_length_s:9
#: isaaclab.envs.ManagerBasedRLEnvCfg.episode_length_s:9 of
msgid ""
"For example, if the decimation rate is 10, the physics time step is 0.01,"
" and the episode length is 10 seconds, then the episode length in steps "
"is 100."
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedRLEnvCfg.rewards:3 of
msgid ""
"Please refer to the :class:`isaaclab.managers.RewardManager` class for "
"more details."
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedRLEnvCfg.terminations:3 of
msgid ""
"Please refer to the :class:`isaaclab.managers.TerminationManager` class "
"for more details."
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedRLEnvCfg.curriculum:1 of
msgid ""
"Curriculum settings. Defaults to None, in which case no curriculum is "
"applied."
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedRLEnvCfg.curriculum:3 of
msgid ""
"Please refer to the :class:`isaaclab.managers.CurriculumManager` class "
"for more details."
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedRLEnvCfg.commands:1 of
msgid ""
"Command settings. Defaults to None, in which case no commands are "
"generated."
msgstr ""

#: ../../docstring isaaclab.envs.ManagerBasedRLEnvCfg.commands:3 of
msgid ""
"Please refer to the :class:`isaaclab.managers.CommandManager` class for "
"more details."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:54
msgid "Direct RL Environment"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1 of
msgid "基类：:py:class:`~gymnasium.core.Env`"
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv:3 of
msgid ""
"This class implements the core functionality for reinforcement learning "
"(RL) environments. It is designed to be used with any RL library. The "
"class is designed to be used with vectorized environments, i.e., the "
"environment is expected to be run in parallel with multiple sub-"
"environments."
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`is_vector_env <isaaclab.envs.DirectRLEnv.is_vector_env>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`metadata <isaaclab.envs.DirectRLEnv.metadata>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`num_envs <isaaclab.envs.DirectRLEnv.num_envs>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`physics_dt <isaaclab.envs.DirectRLEnv.physics_dt>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`step_dt <isaaclab.envs.DirectRLEnv.step_dt>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`device <isaaclab.envs.DirectRLEnv.device>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1 of
msgid ""
":py:obj:`max_episode_length_s "
"<isaaclab.envs.DirectRLEnv.max_episode_length_s>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1 of
msgid ""
":py:obj:`max_episode_length "
"<isaaclab.envs.DirectRLEnv.max_episode_length>`\\"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.max_episode_length:1
#: isaaclab.envs.DirectRLEnv.max_episode_length:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1 of
msgid "The maximum episode length in steps adjusted from s."
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`np_random <isaaclab.envs.DirectRLEnv.np_random>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`np_random_seed <isaaclab.envs.DirectRLEnv.np_random_seed>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv:1:<autosummary>:1 of
msgid ":py:obj:`unwrapped <isaaclab.envs.DirectRLEnv.unwrapped>`\\"
msgstr ""

#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`__init__ <isaaclab.envs.DirectRLEnv.__init__>`\\ \\(cfg\\[\\, "
"render\\_mode\\]\\)"
msgstr ""

#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`reset <isaaclab.envs.DirectRLEnv.reset>`\\ \\(\\[seed\\, "
"options\\]\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1
#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.reset:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv.reset:1 of
msgid "Resets all the environments and returns observations."
msgstr ""

#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ":py:obj:`step <isaaclab.envs.DirectRLEnv.step>`\\ \\(action\\)"
msgstr ""

#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ":py:obj:`seed <isaaclab.envs.DirectRLEnv.seed>`\\ \\(\\[seed\\]\\)"
msgstr ""

#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`render <isaaclab.envs.DirectRLEnv.render>`\\ "
"\\(\\[recompute\\]\\)"
msgstr ""

#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ":py:obj:`close <isaaclab.envs.DirectRLEnv.close>`\\ \\(\\)"
msgstr ""

#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`set_debug_vis <isaaclab.envs.DirectRLEnv.set_debug_vis>`\\ "
"\\(debug\\_vis\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1
#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.set_debug_vis:1
#: isaaclab.envs.direct_rl_env.DirectRLEnv.set_debug_vis:1 of
msgid "Toggles the environment debug visualization."
msgstr ""

#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`get_wrapper_attr <isaaclab.envs.DirectRLEnv.get_wrapper_attr>`\\"
" \\(name\\)"
msgstr ""

#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`has_wrapper_attr <isaaclab.envs.DirectRLEnv.has_wrapper_attr>`\\"
" \\(name\\)"
msgstr ""

#: isaaclab.envs.DirectRLEnv.is_vector_env:1:<autosummary>:1 of
msgid ""
":py:obj:`set_wrapper_attr <isaaclab.envs.DirectRLEnv.set_wrapper_attr>`\\"
" \\(name\\, value\\)"
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv.reset:3 of
msgid ""
"This function calls the :meth:`_reset_idx` function to reset all the "
"environments. However, certain operations, such as procedural terrain "
"generation, that happened during initialization are not repeated."
msgstr ""

#: isaaclab.envs.direct_rl_env.DirectRLEnv.step:3 of
msgid ""
"The environment steps forward at a fixed time-step, while the physics "
"simulation is decimated at a lower time-step. This is to ensure that the "
"simulation is stable. These two time-steps can be configured "
"independently using the :attr:`DirectRLEnvCfg.decimation` (number of "
"simulation steps per environment step) and the "
":attr:`DirectRLEnvCfg.sim.physics_dt` (physics time-step). Based on these"
" parameters, the environment time-step is computed as the product of the "
"two."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.step:9
#: isaaclab.envs.direct_rl_env.DirectRLEnv.step:9 of
msgid "This function performs the following steps:"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.step:11
#: isaaclab.envs.direct_rl_env.DirectRLEnv.step:11 of
msgid "Pre-process the actions before stepping through the physics."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.step:12
#: isaaclab.envs.direct_rl_env.DirectRLEnv.step:12 of
msgid ""
"Apply the actions to the simulator and step through the physics in a "
"decimated manner."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.step:13
#: isaaclab.envs.direct_rl_env.DirectRLEnv.step:13 of
msgid "Compute the reward and done signals."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.step:14
#: isaaclab.envs.direct_rl_env.DirectRLEnv.step:14 of
msgid ""
"Reset environments that have terminated or reached the maximum episode "
"length."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.step:15
#: isaaclab.envs.direct_rl_env.DirectRLEnv.step:15 of
msgid "Apply interval events if they are enabled."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.step:16
#: isaaclab.envs.direct_rl_env.DirectRLEnv.step:16 of
msgid "Compute observations."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.set_debug_vis:3
#: isaaclab.envs.direct_rl_env.DirectRLEnv.set_debug_vis:3 of
msgid "Whether to visualize the environment debug visualization."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.set_debug_vis:5
#: isaaclab.envs.direct_rl_env.DirectRLEnv.set_debug_vis:5 of
msgid ""
"Whether the debug visualization was successfully set. False if the "
"environment does not support debug visualization."
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1
#: isaaclab.envs.mimic_env_cfg.MimicEnvCfg:1 of
msgid "基类：:py:class:`object`"
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:3 of
msgid ""
"Please refer to the :class:`isaaclab.envs.direct_rl_env.DirectRLEnv` "
"class for more details."
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`viewer <isaaclab.envs.DirectRLEnvCfg.viewer>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`sim <isaaclab.envs.DirectRLEnvCfg.sim>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`seed <isaaclab.envs.DirectRLEnvCfg.seed>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`decimation <isaaclab.envs.DirectRLEnvCfg.decimation>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`is_finite_horizon "
"<isaaclab.envs.DirectRLEnvCfg.is_finite_horizon>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`episode_length_s "
"<isaaclab.envs.DirectRLEnvCfg.episode_length_s>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`scene <isaaclab.envs.DirectRLEnvCfg.scene>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`events <isaaclab.envs.DirectRLEnvCfg.events>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`observation_space "
"<isaaclab.envs.DirectRLEnvCfg.observation_space>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnvCfg.observation_space:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid "Observation space definition."
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`num_observations "
"<isaaclab.envs.DirectRLEnvCfg.num_observations>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnvCfg.num_observations:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid "The dimension of the observation space from each environment instance."
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`state_space <isaaclab.envs.DirectRLEnvCfg.state_space>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.state_space:1
#: isaaclab.envs.DirectRLEnvCfg.state_space:1
#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid "State space definition."
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`num_states <isaaclab.envs.DirectRLEnvCfg.num_states>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnvCfg.num_states:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid "The dimension of the state-space from each environment instance."
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`observation_noise_model "
"<isaaclab.envs.DirectRLEnvCfg.observation_noise_model>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ""
"The noise model to apply to the computed observations from the "
"environment."
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`action_space <isaaclab.envs.DirectRLEnvCfg.action_space>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnvCfg.action_space:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid "Action space definition."
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`num_actions <isaaclab.envs.DirectRLEnvCfg.num_actions>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnvCfg.num_actions:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid "The dimension of the action space for each environment."
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`action_noise_model "
"<isaaclab.envs.DirectRLEnvCfg.action_noise_model>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1
#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid "The noise model applied to the actions provided to the environment."
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`rerender_on_reset "
"<isaaclab.envs.DirectRLEnvCfg.rerender_on_reset>`\\"
msgstr ""

#: isaaclab.envs.direct_rl_env_cfg.DirectRLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`wait_for_textures "
"<isaaclab.envs.DirectRLEnvCfg.wait_for_textures>`\\"
msgstr ""

#: isaaclab.envs.DirectRLEnvCfg.viewer:1:<autosummary>:1 of
msgid ""
":py:obj:`ui_window_class_type "
"<isaaclab.envs.DirectRLEnvCfg.ui_window_class_type>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.events:1
#: isaaclab.envs.DirectRLEnvCfg.events:1 of
msgid ""
"Event settings. Defaults to None, in which case no events are applied "
"through the event manager."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:3
#: isaaclab.envs.DirectMARLEnvCfg.observation_spaces:3
#: isaaclab.envs.DirectMARLEnvCfg.state_space:10
#: isaaclab.envs.DirectRLEnvCfg.action_space:3
#: isaaclab.envs.DirectRLEnvCfg.observation_space:3
#: isaaclab.envs.DirectRLEnvCfg.state_space:5 of
msgid ""
"The space can be defined either using Gymnasium "
":py:mod:`~gymnasium.spaces` (when a more detailed specification of the "
"space is desired) or basic Python data types (for simplicity)."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:9
#: isaaclab.envs.DirectMARLEnvCfg.observation_spaces:9
#: isaaclab.envs.DirectMARLEnvCfg.state_space:16
#: isaaclab.envs.DirectRLEnvCfg.action_space:9
#: isaaclab.envs.DirectRLEnvCfg.observation_space:9
#: isaaclab.envs.DirectRLEnvCfg.state_space:11 of
msgid "Gymnasium space"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:10
#: isaaclab.envs.DirectMARLEnvCfg.observation_spaces:10
#: isaaclab.envs.DirectMARLEnvCfg.state_space:17
#: isaaclab.envs.DirectRLEnvCfg.action_space:10
#: isaaclab.envs.DirectRLEnvCfg.observation_space:10
#: isaaclab.envs.DirectRLEnvCfg.state_space:12 of
msgid "Python data type"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:11
#: isaaclab.envs.DirectMARLEnvCfg.observation_spaces:11
#: isaaclab.envs.DirectMARLEnvCfg.state_space:18
#: isaaclab.envs.DirectRLEnvCfg.action_space:11
#: isaaclab.envs.DirectRLEnvCfg.observation_space:11
#: isaaclab.envs.DirectRLEnvCfg.state_space:13 of
msgid ":class:`~gymnasium.spaces.Box`"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:12
#: isaaclab.envs.DirectMARLEnvCfg.observation_spaces:12
#: isaaclab.envs.DirectMARLEnvCfg.state_space:19
#: isaaclab.envs.DirectRLEnvCfg.action_space:12
#: isaaclab.envs.DirectRLEnvCfg.observation_space:12
#: isaaclab.envs.DirectRLEnvCfg.state_space:14 of
msgid "Integer or list of integers (e.g.: ``7``, ``[64, 64, 3]``)"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:13
#: isaaclab.envs.DirectMARLEnvCfg.observation_spaces:13
#: isaaclab.envs.DirectMARLEnvCfg.state_space:20
#: isaaclab.envs.DirectRLEnvCfg.action_space:13
#: isaaclab.envs.DirectRLEnvCfg.observation_space:13
#: isaaclab.envs.DirectRLEnvCfg.state_space:15 of
msgid ":class:`~gymnasium.spaces.Discrete`"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:14
#: isaaclab.envs.DirectMARLEnvCfg.observation_spaces:14
#: isaaclab.envs.DirectMARLEnvCfg.state_space:21
#: isaaclab.envs.DirectRLEnvCfg.action_space:14
#: isaaclab.envs.DirectRLEnvCfg.observation_space:14
#: isaaclab.envs.DirectRLEnvCfg.state_space:16 of
#, python-brace-format
msgid "Single-element set (e.g.: ``{2}``)"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:15
#: isaaclab.envs.DirectMARLEnvCfg.observation_spaces:15
#: isaaclab.envs.DirectMARLEnvCfg.state_space:22
#: isaaclab.envs.DirectRLEnvCfg.action_space:15
#: isaaclab.envs.DirectRLEnvCfg.observation_space:15
#: isaaclab.envs.DirectRLEnvCfg.state_space:17 of
msgid ":class:`~gymnasium.spaces.MultiDiscrete`"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:16
#: isaaclab.envs.DirectMARLEnvCfg.observation_spaces:16
#: isaaclab.envs.DirectMARLEnvCfg.state_space:23
#: isaaclab.envs.DirectRLEnvCfg.action_space:16
#: isaaclab.envs.DirectRLEnvCfg.observation_space:16
#: isaaclab.envs.DirectRLEnvCfg.state_space:18 of
#, python-brace-format
msgid "List of single-element sets (e.g.: ``[{2}, {5}]``)"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:17
#: isaaclab.envs.DirectMARLEnvCfg.observation_spaces:17
#: isaaclab.envs.DirectMARLEnvCfg.state_space:24
#: isaaclab.envs.DirectRLEnvCfg.action_space:17
#: isaaclab.envs.DirectRLEnvCfg.observation_space:17
#: isaaclab.envs.DirectRLEnvCfg.state_space:19 of
msgid ":class:`~gymnasium.spaces.Dict`"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:18
#: isaaclab.envs.DirectMARLEnvCfg.observation_spaces:18
#: isaaclab.envs.DirectMARLEnvCfg.state_space:25
#: isaaclab.envs.DirectRLEnvCfg.action_space:18
#: isaaclab.envs.DirectRLEnvCfg.observation_space:18
#: isaaclab.envs.DirectRLEnvCfg.state_space:20 of
#, python-brace-format
msgid ""
"Dictionary (e.g.: ``{\"joints\": 7, \"rgb\": [64, 64, 3], \"gripper\": "
"{2}}``)"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:19
#: isaaclab.envs.DirectMARLEnvCfg.observation_spaces:19
#: isaaclab.envs.DirectMARLEnvCfg.state_space:26
#: isaaclab.envs.DirectRLEnvCfg.action_space:19
#: isaaclab.envs.DirectRLEnvCfg.observation_space:19
#: isaaclab.envs.DirectRLEnvCfg.state_space:21 of
msgid ":class:`~gymnasium.spaces.Tuple`"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:20
#: isaaclab.envs.DirectMARLEnvCfg.observation_spaces:20
#: isaaclab.envs.DirectMARLEnvCfg.state_space:27
#: isaaclab.envs.DirectRLEnvCfg.action_space:20
#: isaaclab.envs.DirectRLEnvCfg.observation_space:20
#: isaaclab.envs.DirectRLEnvCfg.state_space:22 of
#, python-brace-format
msgid "Tuple (e.g.: ``(7, [64, 64, 3], {2})``)"
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnvCfg.num_observations:5 of
msgid ""
"This attribute is deprecated. Use "
":attr:`~isaaclab.envs.DirectRLEnvCfg.observation_space` instead."
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnvCfg.state_space:3 of
msgid ""
"This is useful for asymmetric actor-critic and defines the observation "
"space for the critic."
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnvCfg.num_states:5 of
msgid ""
"This attribute is deprecated. Use "
":attr:`~isaaclab.envs.DirectRLEnvCfg.state_space` instead."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.observation_noise_model:1
#: isaaclab.envs.DirectRLEnvCfg.observation_noise_model:1 of
msgid ""
"The noise model to apply to the computed observations from the "
"environment. Default is None, which means no noise is added."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_noise_model:3
#: isaaclab.envs.DirectMARLEnvCfg.observation_noise_model:3
#: isaaclab.envs.DirectRLEnvCfg.action_noise_model:3
#: isaaclab.envs.DirectRLEnvCfg.observation_noise_model:3 of
msgid ""
"Please refer to the :class:`isaaclab.utils.noise.NoiseModel` class for "
"more details."
msgstr ""

#: ../../docstring isaaclab.envs.DirectRLEnvCfg.num_actions:5 of
msgid ""
"This attribute is deprecated. Use "
":attr:`~isaaclab.envs.DirectRLEnvCfg.action_space` instead."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_noise_model:1
#: isaaclab.envs.DirectRLEnvCfg.action_noise_model:1 of
msgid ""
"The noise model applied to the actions provided to the environment. "
"Default is None, which means no noise is added."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:68
msgid "Direct Multi-Agent RL Environment"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:3 of
msgid ""
"This class implements the core functionality for multi-agent "
"reinforcement learning (MARL) environments. It is designed to be used "
"with any RL library. The class is designed to be used with vectorized "
"environments, i.e., the environment is expected to be run in parallel "
"with multiple sub-environments."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:8 of
msgid ""
"The design of this class is based on the PettingZoo Parallel API. While "
"the environment itself is implemented as a vectorized environment, we do "
"not inherit from :class:`pettingzoo.ParallelEnv` or "
":class:`gym.vector.VectorEnv`. This is mainly because the class adds "
"various attributes and methods that are inconsistent with them."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid ":py:obj:`metadata <isaaclab.envs.DirectMARLEnv.metadata>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid ":py:obj:`num_envs <isaaclab.envs.DirectMARLEnv.num_envs>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid ":py:obj:`num_agents <isaaclab.envs.DirectMARLEnv.num_agents>`\\"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.num_agents:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid "Number of current agents."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid ":py:obj:`max_num_agents <isaaclab.envs.DirectMARLEnv.max_num_agents>`\\"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.max_num_agents:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid "Number of all possible agents the environment can generate."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid ":py:obj:`unwrapped <isaaclab.envs.DirectMARLEnv.unwrapped>`\\"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.unwrapped:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid "Get the unwrapped environment underneath all the layers of wrappers."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid ":py:obj:`physics_dt <isaaclab.envs.DirectMARLEnv.physics_dt>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid ":py:obj:`step_dt <isaaclab.envs.DirectMARLEnv.step_dt>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid ":py:obj:`device <isaaclab.envs.DirectMARLEnv.device>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid ""
":py:obj:`max_episode_length_s "
"<isaaclab.envs.DirectMARLEnv.max_episode_length_s>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid ""
":py:obj:`max_episode_length "
"<isaaclab.envs.DirectMARLEnv.max_episode_length>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid ":py:obj:`np_random <isaaclab.envs.DirectMARLEnv.np_random>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv:1:<autosummary>:1 of
msgid ":py:obj:`np_random_seed <isaaclab.envs.DirectMARLEnv.np_random_seed>`\\"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1 of
msgid ""
":py:obj:`__init__ <isaaclab.envs.DirectMARLEnv.__init__>`\\ \\(cfg\\[\\, "
"render\\_mode\\]\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1 of
msgid ""
":py:obj:`observation_space "
"<isaaclab.envs.DirectMARLEnv.observation_space>`\\ \\(agent\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.observation_space:1 of
msgid "Get the observation space for the specified agent."
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1 of
msgid ""
":py:obj:`action_space <isaaclab.envs.DirectMARLEnv.action_space>`\\ "
"\\(agent\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.action_space:1 of
msgid "Get the action space for the specified agent."
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1 of
msgid ""
":py:obj:`reset <isaaclab.envs.DirectMARLEnv.reset>`\\ \\(\\[seed\\, "
"options\\]\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1 of
msgid ":py:obj:`step <isaaclab.envs.DirectMARLEnv.step>`\\ \\(actions\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1 of
msgid ":py:obj:`state <isaaclab.envs.DirectMARLEnv.state>`\\ \\(\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1
#: isaaclab.envs.direct_marl_env.DirectMARLEnv.state:1 of
msgid "Returns the state for the environment."
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1 of
msgid ":py:obj:`seed <isaaclab.envs.DirectMARLEnv.seed>`\\ \\(\\[seed\\]\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1 of
msgid ""
":py:obj:`render <isaaclab.envs.DirectMARLEnv.render>`\\ "
"\\(\\[recompute\\]\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1 of
msgid ":py:obj:`close <isaaclab.envs.DirectMARLEnv.close>`\\ \\(\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1 of
msgid ""
":py:obj:`set_debug_vis <isaaclab.envs.DirectMARLEnv.set_debug_vis>`\\ "
"\\(debug\\_vis\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1 of
msgid ""
":py:obj:`get_wrapper_attr "
"<isaaclab.envs.DirectMARLEnv.get_wrapper_attr>`\\ \\(name\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1 of
msgid ""
":py:obj:`has_wrapper_attr "
"<isaaclab.envs.DirectMARLEnv.has_wrapper_attr>`\\ \\(name\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.metadata:1:<autosummary>:1 of
msgid ""
":py:obj:`set_wrapper_attr "
"<isaaclab.envs.DirectMARLEnv.set_wrapper_attr>`\\ \\(name\\, value\\)"
msgstr ""

#: isaaclab.envs.DirectMARLEnv.num_agents:3 of
msgid ""
"The number of current agents may change as the environment progresses "
"(e.g.: agents can be added or removed)."
msgstr ""

#: isaaclab.envs.DirectMARLEnv.max_num_agents:3 of
msgid "This value remains constant as the environment progresses."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.observation_space:3 of
msgid "The agent's observation space."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.action_space:3 of
msgid "The agent's action space."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.reset:8 of
msgid "A tuple containing the observations and extras (keyed by the agent ID)."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.step:3 of
msgid ""
"The environment steps forward at a fixed time-step, while the physics "
"simulation is decimated at a lower time-step. This is to ensure that the "
"simulation is stable. These two time-steps can be configured "
"independently using the :attr:`DirectMARLEnvCfg.decimation` (number of "
"simulation steps per environment step) and the "
":attr:`DirectMARLEnvCfg.sim.physics_dt` (physics time-step). Based on "
"these parameters, the environment time-step is computed as the product of"
" the two."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.step:18 of
msgid ""
"The actions to apply on the environment (keyed by the agent ID). Shape of"
" individual tensors is (num_envs, action_dim)."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.step:21 of
msgid ""
"A tuple containing the observations, rewards, resets (terminated and "
"truncated) and extras (keyed by the agent ID)."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.state:3 of
msgid ""
"The state-space is used for centralized training or asymmetric actor-"
"critic architectures. It is configured using the "
":attr:`DirectMARLEnvCfg.state_space` parameter."
msgstr ""

#: isaaclab.envs.direct_marl_env.DirectMARLEnv.state:6 of
msgid ""
"The states for the environment, or None if "
":attr:`DirectMARLEnvCfg.state_space` parameter is zero."
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:3 of
msgid ""
"Please refer to the :class:`isaaclab.envs.direct_marl_env.DirectMARLEnv` "
"class for more details."
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`viewer <isaaclab.envs.DirectMARLEnvCfg.viewer>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`sim <isaaclab.envs.DirectMARLEnvCfg.sim>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`seed <isaaclab.envs.DirectMARLEnvCfg.seed>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`decimation <isaaclab.envs.DirectMARLEnvCfg.decimation>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`is_finite_horizon "
"<isaaclab.envs.DirectMARLEnvCfg.is_finite_horizon>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`episode_length_s "
"<isaaclab.envs.DirectMARLEnvCfg.episode_length_s>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`scene <isaaclab.envs.DirectMARLEnvCfg.scene>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`events <isaaclab.envs.DirectMARLEnvCfg.events>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`observation_spaces "
"<isaaclab.envs.DirectMARLEnvCfg.observation_spaces>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.observation_spaces:1
#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid "Observation space definition for each agent."
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`num_observations "
"<isaaclab.envs.DirectMARLEnvCfg.num_observations>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.num_observations:1
#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid "The dimension of the observation space for each agent."
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`state_space <isaaclab.envs.DirectMARLEnvCfg.state_space>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`num_states <isaaclab.envs.DirectMARLEnvCfg.num_states>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.num_states:1
#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid "The dimension of the state space from each environment instance."
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`observation_noise_model "
"<isaaclab.envs.DirectMARLEnvCfg.observation_noise_model>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`action_spaces <isaaclab.envs.DirectMARLEnvCfg.action_spaces>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.action_spaces:1
#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid "Action space definition for each agent."
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ":py:obj:`num_actions <isaaclab.envs.DirectMARLEnvCfg.num_actions>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.num_actions:1
#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid "The dimension of the action space for each agent."
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`action_noise_model "
"<isaaclab.envs.DirectMARLEnvCfg.action_noise_model>`\\"
msgstr ""

#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid ""
":py:obj:`possible_agents "
"<isaaclab.envs.DirectMARLEnvCfg.possible_agents>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.possible_agents:1
#: isaaclab.envs.direct_marl_env_cfg.DirectMARLEnvCfg:1:<autosummary>:1 of
msgid "A list of all possible agents the environment could generate."
msgstr ""

#: isaaclab.envs.DirectMARLEnvCfg.viewer:1:<autosummary>:1 of
msgid ""
":py:obj:`ui_window_class_type "
"<isaaclab.envs.DirectMARLEnvCfg.ui_window_class_type>`\\"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.num_observations:5 of
msgid ""
"This attribute is deprecated. Use "
":attr:`~isaaclab.envs.DirectMARLEnvCfg.observation_spaces` instead."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.state_space:3 of
msgid "The following values are supported:"
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.state_space:5 of
msgid ""
"-1: All the observations from the different agents are automatically "
"concatenated."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.state_space:6 of
msgid ""
"0: No state-space will be constructed (`state_space` is None). This is "
"useful to save computational resources when the algorithm to be trained "
"does not need it."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.state_space:8 of
msgid ""
"greater than 0: Custom state-space dimension to be provided by the task "
"implementation."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.num_states:5 of
msgid ""
"This attribute is deprecated. Use "
":attr:`~isaaclab.envs.DirectMARLEnvCfg.state_space` instead."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.num_actions:5 of
msgid ""
"This attribute is deprecated. Use "
":attr:`~isaaclab.envs.DirectMARLEnvCfg.action_spaces` instead."
msgstr ""

#: ../../docstring isaaclab.envs.DirectMARLEnvCfg.possible_agents:3 of
msgid ""
"The contents of the list cannot be modified during the entire training "
"process."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:82
msgid "Mimic Environment"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1 of
msgid "基类：:py:class:`~isaaclab.envs.manager_based_rl_env.ManagerBasedRLEnv`"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:3 of
msgid ""
"This class inherits from :class:`ManagerBasedRLEnv` and provides a "
"template for the functions that need to be defined to run the Isaac Lab "
"Mimic data generation workflow. The Isaac Lab data generation pipeline, "
"inspired by the MimicGen system, enables the generation of new datasets "
"based on a few human collected demonstrations. MimicGen is a novel "
"approach designed to automatically synthesize large-scale, rich datasets "
"from a sparse set of human demonstrations by adapting them to new "
"contexts. It manages to replicate the benefits of large datasets while "
"reducing the immense time and effort usually required to gather extensive"
" human demonstrations."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:11 of
msgid ""
"The MimicGen system works by parsing demonstrations into object-centric "
"segments. It then adapts these segments to new scenes by transforming "
"each segment according to the new scene’s context, stitching them into a "
"coherent trajectory for a robotic end-effector to execute. This approach "
"allows learners to train proficient agents through imitation learning on "
"diverse configurations of scenes, object instances, etc."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:20 of
msgid "Key Features:"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:17 of
msgid ""
"Efficient Dataset Generation: Utilizes a small set of human demos to "
"produce large scale demonstrations."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:18 of
msgid ""
"Broad Applicability: Capable of supporting tasks that require a range of "
"manipulation skills, such as pick-and-place and interacting with "
"articulated objects."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:20 of
msgid ""
"Dataset Versatility: The synthetic data retains a quality that compares "
"favorably with additional human demos."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`get_robot_eef_pose "
"<isaaclab.envs.ManagerBasedRLMimicEnv.get_robot_eef_pose>`\\ "
"\\(eef\\_name\\[\\, env\\_ids\\]\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid "Get current robot end effector pose."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`target_eef_pose_to_action "
"<isaaclab.envs.ManagerBasedRLMimicEnv.target_eef_pose_to_action>`\\ "
"\\(...\\[\\, noise\\, env\\_id\\]\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
"Takes a target pose and gripper action for the end effector controller "
"and returns an action (usually a normalized delta pose action) to try and"
" achieve that target pose."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`action_to_target_eef_pose "
"<isaaclab.envs.ManagerBasedRLMimicEnv.action_to_target_eef_pose>`\\ "
"\\(action\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
"Converts action (compatible with env.step) to a target pose for the end "
"effector controller."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`actions_to_gripper_actions "
"<isaaclab.envs.ManagerBasedRLMimicEnv.actions_to_gripper_actions>`\\ "
"\\(actions\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.actions_to_gripper_actions:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
"Extracts the gripper actuation part from a sequence of env actions "
"(compatible with env.step)."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`get_object_poses "
"<isaaclab.envs.ManagerBasedRLMimicEnv.get_object_poses>`\\ "
"\\(\\[env\\_ids\\]\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_object_poses:1
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
"Gets the pose of each object relevant to Isaac Lab Mimic data generation "
"in the current scene."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`get_subtask_term_signals "
"<isaaclab.envs.ManagerBasedRLMimicEnv.get_subtask_term_signals>`\\ "
"\\(\\[env\\_ids\\]\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid "Gets a dictionary of termination signal flags for each subtask in a task."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`serialize <isaaclab.envs.ManagerBasedRLMimicEnv.serialize>`\\ "
"\\(\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
"Save all information needed to re-instantiate this environment in a "
"dictionary."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`__init__ <isaaclab.envs.ManagerBasedRLMimicEnv.__init__>`\\ "
"\\(cfg\\[\\, render\\_mode\\]\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ":py:obj:`close <isaaclab.envs.ManagerBasedRLMimicEnv.close>`\\ \\(\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`get_wrapper_attr "
"<isaaclab.envs.ManagerBasedRLMimicEnv.get_wrapper_attr>`\\ \\(name\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`has_wrapper_attr "
"<isaaclab.envs.ManagerBasedRLMimicEnv.has_wrapper_attr>`\\ \\(name\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`load_managers "
"<isaaclab.envs.ManagerBasedRLMimicEnv.load_managers>`\\ \\(\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`render <isaaclab.envs.ManagerBasedRLMimicEnv.render>`\\ "
"\\(\\[recompute\\]\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`reset <isaaclab.envs.ManagerBasedRLMimicEnv.reset>`\\ "
"\\(\\[seed\\, env\\_ids\\, options\\]\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`reset_to <isaaclab.envs.ManagerBasedRLMimicEnv.reset_to>`\\ "
"\\(state\\, env\\_ids\\[\\, seed\\, is\\_relative\\]\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`seed <isaaclab.envs.ManagerBasedRLMimicEnv.seed>`\\ "
"\\(\\[seed\\]\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`set_wrapper_attr "
"<isaaclab.envs.ManagerBasedRLMimicEnv.set_wrapper_attr>`\\ \\(name\\, "
"value\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ""
":py:obj:`setup_manager_visualizers "
"<isaaclab.envs.ManagerBasedRLMimicEnv.setup_manager_visualizers>`\\ "
"\\(\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv:1:<autosummary>:1
#: of
msgid ":py:obj:`step <isaaclab.envs.ManagerBasedRLMimicEnv.step>`\\ \\(action\\)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ":py:obj:`device <isaaclab.envs.ManagerBasedRLMimicEnv.device>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ""
":py:obj:`is_vector_env "
"<isaaclab.envs.ManagerBasedRLMimicEnv.is_vector_env>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ""
":py:obj:`max_episode_length "
"<isaaclab.envs.ManagerBasedRLMimicEnv.max_episode_length>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ""
":py:obj:`max_episode_length_s "
"<isaaclab.envs.ManagerBasedRLMimicEnv.max_episode_length_s>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ":py:obj:`metadata <isaaclab.envs.ManagerBasedRLMimicEnv.metadata>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ":py:obj:`np_random <isaaclab.envs.ManagerBasedRLMimicEnv.np_random>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ""
":py:obj:`np_random_seed "
"<isaaclab.envs.ManagerBasedRLMimicEnv.np_random_seed>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ":py:obj:`num_envs <isaaclab.envs.ManagerBasedRLMimicEnv.num_envs>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ":py:obj:`physics_dt <isaaclab.envs.ManagerBasedRLMimicEnv.physics_dt>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ":py:obj:`step_dt <isaaclab.envs.ManagerBasedRLMimicEnv.step_dt>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ":py:obj:`unwrapped <isaaclab.envs.ManagerBasedRLMimicEnv.unwrapped>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1:<autosummary>:1
#: of
msgid ":py:obj:`cfg <isaaclab.envs.ManagerBasedRLMimicEnv.cfg>`\\"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:1
#: of
msgid ""
"Get current robot end effector pose. Should be the same frame as used by "
"the robot end-effector controller."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:3
#: of
msgid "Name of the end effector."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_object_poses:3
#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:4
#: of
msgid "Environment indices to get the pose for. If None, all envs are considered."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_robot_eef_pose:6
#: of
msgid "A torch.Tensor eef pose matrix. Shape is (len(env_ids), 4, 4)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.target_eef_pose_to_action:1
#: of
msgid ""
"Takes a target pose and gripper action for the end effector controller "
"and returns an action (usually a normalized delta pose action) to try and"
" achieve that target pose. Noise is added to the target pose action if "
"specified."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.target_eef_pose_to_action:5
#: of
msgid "Dictionary of 4x4 target eef pose for each end-effector."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.target_eef_pose_to_action:6
#: of
msgid "Dictionary of gripper actions for each end-effector."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.target_eef_pose_to_action:7
#: of
msgid "Noise to add to the action. If None, no noise is added."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.target_eef_pose_to_action:8
#: of
msgid "Environment index to compute the action for."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.target_eef_pose_to_action:10
#: of
msgid "An action torch.Tensor that's compatible with env.step()."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.action_to_target_eef_pose:1
#: of
msgid ""
"Converts action (compatible with env.step) to a target pose for the end "
"effector controller. Inverse of @target_eef_pose_to_action. Usually used "
"to infer a sequence of target controller poses from a demonstration "
"trajectory using the recorded actions."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.action_to_target_eef_pose:5
#: of
msgid "Environment action. Shape is (num_envs, action_dim)."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.action_to_target_eef_pose:7
#: of
msgid "A dictionary of eef pose torch.Tensor that @action corresponds to."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.actions_to_gripper_actions:3
#: of
msgid ""
"environment actions. The shape is (num_envs, num steps in a demo, "
"action_dim)."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.actions_to_gripper_actions:5
#: of
msgid ""
"A dictionary of torch.Tensor gripper actions. Key to each dict is an "
"eef_name."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_object_poses:5
#: of
msgid ""
"A dictionary that maps object names to object pose matrix (4x4 "
"torch.Tensor)"
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_subtask_term_signals:1
#: of
msgid ""
"Gets a dictionary of termination signal flags for each subtask in a task."
" The flag is 1 when the subtask has been completed and 0 otherwise. The "
"implementation of this method is required if intending to enable "
"automatic subtask term signal annotation when running the dataset "
"annotation tool. This method can be kept unimplemented if intending to "
"use manual subtask term signal annotation."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_subtask_term_signals:7
#: of
msgid ""
"Environment indices to get the termination signals for. If None, all envs"
" are considered."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.get_subtask_term_signals:9
#: of
msgid "A dictionary termination signal flags (False or True) for each subtask."
msgstr ""

#: isaaclab.envs.manager_based_rl_mimic_env.ManagerBasedRLMimicEnv.serialize:1
#: of
msgid ""
"Save all information needed to re-instantiate this environment in a "
"dictionary. This is the same as @env_meta - environment metadata stored "
"in hdf5 datasets, and used in utils/env_utils.py."
msgstr ""

#: isaaclab.envs.mimic_env_cfg.MimicEnvCfg:3 of
msgid ""
"This class consolidates various configuration aspects for the Isaac Lab "
"Mimic data generation pipeline."
msgstr ""

#: ../../source/api/lab/isaaclab.envs.rst:96
msgid "Common"
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid ":py:obj:`eye <isaaclab.envs.ViewerCfg.eye>`\\"
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid "Initial camera position (in m)."
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid ":py:obj:`lookat <isaaclab.envs.ViewerCfg.lookat>`\\"
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid "Initial camera target position (in m)."
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid ":py:obj:`cam_prim_path <isaaclab.envs.ViewerCfg.cam_prim_path>`\\"
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid "The camera prim path to record images from."
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid ":py:obj:`resolution <isaaclab.envs.ViewerCfg.resolution>`\\"
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid ""
"The resolution (width, height) of the camera specified using "
":attr:`cam_prim_path`."
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid ":py:obj:`origin_type <isaaclab.envs.ViewerCfg.origin_type>`\\"
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid ""
"The frame in which the camera position (eye) and target (lookat) are "
"defined in."
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid ":py:obj:`env_index <isaaclab.envs.ViewerCfg.env_index>`\\"
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid "The environment index for frame origin."
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid ":py:obj:`asset_name <isaaclab.envs.ViewerCfg.asset_name>`\\"
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid "The asset name in the interactive scene for the frame origin."
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid ":py:obj:`body_name <isaaclab.envs.ViewerCfg.body_name>`\\"
msgstr ""

#: isaaclab.envs.ViewerCfg.eye:1:<autosummary>:1 of
msgid ""
"The name of the body in :attr:`asset_name` in the interactive scene for "
"the frame origin."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.eye:1 of
msgid "Initial camera position (in m). Default is (7.5, 7.5, 7.5)."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.lookat:1 of
msgid "Initial camera target position (in m). Default is (0.0, 0.0, 0.0)."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.cam_prim_path:1 of
msgid ""
"The camera prim path to record images from. Default is "
"\"/OmniverseKit_Persp\", which is the default camera in the viewport."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.resolution:1 of
msgid ""
"The resolution (width, height) of the camera specified using "
":attr:`cam_prim_path`. Default is (1280, 720)."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.origin_type:1 of
msgid ""
"The frame in which the camera position (eye) and target (lookat) are "
"defined in. Default is \"world\"."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.origin_type:3 of
msgid "Available options are:"
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.origin_type:5 of
msgid "``\"world\"``: The origin of the world."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.origin_type:6 of
msgid "``\"env\"``: The origin of the environment defined by :attr:`env_index`."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.origin_type:7 of
msgid ""
"``\"asset_root\"``: The center of the asset defined by :attr:`asset_name`"
" in environment :attr:`env_index`."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.origin_type:8 of
msgid ""
"``\"asset_body\"``: The center of the body defined by :attr:`body_name` "
"in asset defined by :attr:`asset_name` in environment :attr:`env_index`."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.env_index:1 of
msgid "The environment index for frame origin. Default is 0."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.env_index:3 of
msgid ""
"This quantity is only effective if :attr:`origin` is set to \"env\" or "
"\"asset_root\"."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.asset_name:1 of
msgid ""
"The asset name in the interactive scene for the frame origin. Default is "
"None."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.asset_name:3 of
msgid ""
"This quantity is only effective if :attr:`origin` is set to "
"\"asset_root\"."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.body_name:1 of
msgid ""
"The name of the body in :attr:`asset_name` in the interactive scene for "
"the frame origin. Default is None."
msgstr ""

#: ../../docstring isaaclab.envs.ViewerCfg.body_name:3 of
msgid ""
"This quantity is only effective if :attr:`origin` is set to "
"\"asset_body\"."
msgstr ""




