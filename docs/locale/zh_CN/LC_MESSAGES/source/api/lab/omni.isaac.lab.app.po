# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-30 16:09+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/api/lab/omni.isaac.lab.app.rst:2
msgid "omni.isaac.lab.app"
msgstr ""

#: of omni.isaac.lab.app:1
msgid "Sub-package containing app-specific functionalities."
msgstr ""

#: of omni.isaac.lab.app:3
msgid "These include:"
msgstr ""

#: of omni.isaac.lab.app:5
msgid "Ability to launch the simulation app with different configurations"
msgstr ""

#: of omni.isaac.lab.app:6
msgid "Run tests with the simulation app"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:7
msgid "Classes"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:10:<autosummary>:1
msgid ":py:obj:`AppLauncher <omni.isaac.lab.app.AppLauncher>`\\"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:10:<autosummary>:1 of
#: omni.isaac.lab.app.app_launcher.AppLauncher:1
msgid ""
"A utility class to launch Isaac Sim application based on command-line "
"arguments and environment variables."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:14
msgid "Environment variables"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:16
msgid ""
"The following details the behavior of the class based on the environment "
"variables:"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:18
msgid ""
"**Headless mode**: If the environment variable ``HEADLESS=1``, then "
"SimulationApp will be started in headless mode. If ``LIVESTREAM={1,2}``, "
"then it will supersede the ``HEADLESS`` envvar and force headlessness."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:21
msgid "``HEADLESS=1`` causes the app to run in headless mode."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:23
msgid ""
"**Livestreaming**: If the environment variable ``LIVESTREAM={1,2}`` , "
"then `livestream`_ is enabled. Any of the livestream modes being true "
"forces the app to run in headless mode."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:26
msgid ""
"``LIVESTREAM=1`` enables streaming via the Isaac `Native Livestream`_ "
"extension. This allows users to connect through the Omniverse Streaming "
"Client."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:28
msgid ""
"``LIVESTREAM=2`` enables streaming  via the `WebRTC Livestream`_ "
"extension. This allows users to connect in a browser using the WebRTC "
"protocol."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:33
msgid ""
"Each Isaac Sim instance can only connect to one streaming client. "
"Connecting to an Isaac Sim instance that is currently serving a streaming"
" client results in an error for the second user."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:37
msgid ""
"**Enable cameras**: If the environment variable ``ENABLE_CAMERAS`` is set"
" to 1, then the cameras are enabled. This is useful for running the "
"simulator without a GUI but still rendering the viewport and camera "
"images."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:41
msgid ""
"``ENABLE_CAMERAS=1``: Enables the offscreen-render pipeline which allows "
"users to render the scene without launching a GUI."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:46
msgid ""
"The off-screen rendering pipeline only works when used in conjunction "
"with the :class:`omni.isaac.lab.sim.SimulationContext` class. This is "
"because the off-screen rendering pipeline enables flags that are "
"internally used by the SimulationContext class."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:51
msgid ""
"To set the environment variables, one can use the following command in "
"the terminal:"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:60
msgid ""
"Alternatively, one can set the environment variables to the python script"
" directly:"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:68
msgid "Overriding the environment variables"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:70
msgid ""
"The environment variables can be overridden in the python script itself "
"using the :class:`AppLauncher`. These can be passed as a dictionary, a "
":class:`argparse.Namespace` object or as keyword arguments. When the "
"passed arguments are not the default values, then they override the "
"environment variables."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:74
msgid ""
"The following snippet shows how use the :class:`AppLauncher` in different"
" ways:"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.app.rst:106
msgid "Simulation App Launcher"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher:3
msgid ""
"The class resolves the simulation app settings that appear through "
"environments variables, command-line arguments (CLI) or as input keyword "
"arguments. Based on these settings, it launches the simulation app and "
"configures the extensions to load (as a part of post-launch setup)."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher:7
msgid ""
"The input arguments provided to the class are given higher priority than "
"the values set from the corresponding environment variables. This "
"provides flexibility to deal with different users' preferences."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher:12
msgid ""
"Explicitly defined arguments are only given priority when their value is "
"set to something outside their default configuration. For example, the "
"``livestream`` argument is -1 by default. It only overrides the "
"``LIVESTREAM`` environment variable when ``livestream`` argument is set "
"to a value >-1. In other words, if ``livestream=-1``, then the value from"
" the environment variable ``LIVESTREAM`` is used."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher:1
msgid "**Methods:**"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher:1:<autosummary>:1
msgid ""
":py:obj:`__init__ <omni.isaac.lab.app.AppLauncher.__init__>`\\ "
"\\(\\[launcher\\_args\\]\\)"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.__init__:1
#: omni.isaac.lab.app.app_launcher.AppLauncher:1:<autosummary>:1
msgid "Create a `SimulationApp`_ instance based on the input settings."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher:1:<autosummary>:1
msgid ""
":py:obj:`add_app_launcher_args "
"<omni.isaac.lab.app.AppLauncher.add_app_launcher_args>`\\ \\(parser\\)"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:1
#: omni.isaac.lab.app.app_launcher.AppLauncher:1:<autosummary>:1
msgid ""
"Utility function to configure AppLauncher arguments with an existing "
"argument parser object."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher:1
msgid "**Attributes:**"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.__init__:1:<autosummary>:1
msgid ":py:obj:`app <omni.isaac.lab.app.AppLauncher.app>`\\"
msgstr ""

#: of omni.isaac.lab.app.AppLauncher.app:1
#: omni.isaac.lab.app.app_launcher.AppLauncher.__init__:1:<autosummary>:1
msgid "The launched SimulationApp."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.__init__
#: omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args
msgid "Parameters"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.__init__:3
msgid ""
"Input arguments to parse using the AppLauncher and set into the "
"SimulationApp. Defaults to None, which is equivalent to passing an empty "
"dictionary. A detailed description of the possible arguments is available"
" in the `SimulationApp`_ documentation."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.__init__:6
msgid ""
"Additional keyword arguments that will be merged into "
":attr:`launcher_args`. They serve as a convenience for those who want to "
"pass some arguments using the argparse interface and others directly into"
" the AppLauncher. Duplicated arguments with the :attr:`launcher_args` "
"will raise a ValueError."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.__init__
msgid "Raises"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.__init__:11
msgid ""
"If there are common/duplicated arguments between ``launcher_args`` and "
"``kwargs``."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.__init__:12
msgid ""
"If combination of ``launcher_args`` and ``kwargs`` are missing the "
"necessary arguments     that are needed by the AppLauncher to resolve the"
" desired app configuration."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.__init__:13
msgid ""
"If incompatible or undefined values are assigned to relevant environment "
"values,     such as ``LIVESTREAM``."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:3
msgid ""
"This function takes an ``argparse.ArgumentParser`` object and does some "
"sanity checking on the existing arguments for ingestion by the "
"SimulationApp. It then appends custom command-line arguments relevant to "
"the SimulationApp to the input :class:`argparse.ArgumentParser` instance."
" This allows overriding the environment variables using command-line "
"arguments."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:8
msgid "Currently, it adds the following parameters to the argparser object:"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:10
msgid ""
"``headless`` (bool): If True, the app will be launched in headless (no-"
"gui) mode. The values map the same as that for the ``HEADLESS`` "
"environment variable. If False, then headless mode is determined by the "
"``HEADLESS`` environment variable."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:13
msgid ""
"``livestream`` (int): If one of {1, 2}, then livestreaming and headless "
"mode is enabled. The values map the same as that for the ``LIVESTREAM`` "
"environment variable. If :obj:`-1`, then livestreaming is determined by "
"the ``LIVESTREAM`` environment variable. Valid options are:"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:18
msgid "``0``: Disabled"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:19
msgid ""
"``1``: `Native "
"<https://docs.omniverse.nvidia.com/extensions/latest/ext_livestream/native.html>`_"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:20
msgid ""
"``2``: `WebRTC "
"<https://docs.omniverse.nvidia.com/extensions/latest/ext_livestream/webrtc.html>`_"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:22
msgid ""
"``enable_cameras`` (bool): If True, the app will enable camera sensors "
"and render them, even when in headless mode. This flag must be set to "
"True if the environments contains any camera sensors. The values map the "
"same as that for the ``ENABLE_CAMERAS`` environment variable. If False, "
"then enable_cameras mode is determined by the ``ENABLE_CAMERAS`` "
"environment variable."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:26
msgid "``device`` (str): The device to run the simulation on. Valid options are:"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:29
msgid "``cpu``: Use CPU."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:30
msgid "``cuda``: Use GPU with device ID ``0``."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:31
msgid "``cuda:N``: Use GPU, where N is the device ID. For example, \"cuda:0\"."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:33
msgid ""
"``experience`` (str): The experience file to load when launching the "
"SimulationApp. If a relative path is provided, it is resolved relative to"
" the ``apps`` folder in Isaac Sim and Isaac Lab (in that order)."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:36
msgid ""
"If provided as an empty string, the experience file is determined based "
"on the command-line flags:"
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:38
msgid ""
"If headless and enable_cameras are True, the experience file is set to "
"``isaaclab.python.headless.rendering.kit``."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:39
msgid ""
"If headless is False and enable_cameras is True, the experience file is "
"set to ``isaaclab.python.rendering.kit``."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:40
msgid ""
"If headless and enable_cameras are False, the experience file is set to "
"``isaaclab.python.kit``."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:41
msgid ""
"If headless is True and enable_cameras is False, the experience file is "
"set to ``isaaclab.python.headless.kit``."
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:43
msgid ""
"``kit_args`` (str): Optional command line arguments to be passed to "
"Omniverse Kit directly. Arguments should be combined into a single string"
" separated by space. Example usage: --kit_args \"--ext-"
"folder=/path/to/ext1 --ext-folder=/path/to/ext2\""
msgstr ""

#: of omni.isaac.lab.app.app_launcher.AppLauncher.add_app_launcher_args:47
msgid ""
"An argument parser instance to be extended with the AppLauncher specific "
"options."
msgstr ""

