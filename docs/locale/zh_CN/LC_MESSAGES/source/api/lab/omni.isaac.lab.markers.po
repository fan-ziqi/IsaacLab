# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-05 17:45+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/api/lab/omni.isaac.lab.markers.rst:2
msgid "omni.isaac.lab.markers"
msgstr ""

#: of omni.isaac.lab.markers:1
msgid ""
"Sub-package for marker utilities to simplify creation of UI elements in "
"the GUI."
msgstr ""

#: of omni.isaac.lab.markers:3
msgid "Currently, the sub-package provides the following classes:"
msgstr ""

#: of omni.isaac.lab.markers:5
msgid ""
":class:`VisualizationMarkers` for creating a group of markers using "
"`UsdGeom.PointInstancer "
"<https://graphics.pixar.com/usd/dev/api/class_usd_geom_point_instancer.html>`_."
msgstr ""

#: of omni.isaac.lab.markers:11
msgid ""
"For some simple use-cases, it may be sufficient to use the debug drawing "
"utilities from Isaac Sim. The debug drawing API is available in the "
"`omni.isaac.debug_drawing`_ module. It allows drawing of points and "
"splines efficiently on the UI."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.markers.rst:7
msgid "Classes"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.markers.rst:11:<autosummary>:1
msgid ""
":py:obj:`VisualizationMarkers "
"<omni.isaac.lab.markers.VisualizationMarkers>`\\"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.markers.rst:11:<autosummary>:1 of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:1
msgid "A class to coordinate groups of visual markers (loaded from USD)."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.markers.rst:11:<autosummary>:1
msgid ""
":py:obj:`VisualizationMarkersCfg "
"<omni.isaac.lab.markers.VisualizationMarkersCfg>`\\"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.markers.rst:11:<autosummary>:1 of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkersCfg:1
msgid "A class to configure a :class:`VisualizationMarkers`."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.markers.rst:14
msgid "Visualization Markers"
msgstr ""

#: of omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:1
msgid "基类：:py:class:`object`"
msgstr ""

#: of omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:3
msgid ""
"This class allows visualization of different UI markers in the scene, "
"such as points and frames. The class wraps around the "
"`UsdGeom.PointInstancer`_ for efficient handling of objects in the stage "
"via instancing the created marker prototype prims."
msgstr ""

#: of omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:7
msgid ""
"A marker prototype prim is a reusable template prim used for defining "
"variations of objects in the scene. For example, a sphere prim can be "
"used as a marker prototype prim to create multiple sphere prims in the "
"scene at different locations. Thus, prototype prims are useful for "
"creating multiple instances of the same prim in the scene."
msgstr ""

#: of omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:12
msgid ""
"The class parses the configuration to create different the marker "
"prototypes into the stage. Each marker prototype prim is created as a "
"child of the :class:`UsdGeom.PointInstancer` prim. The prim path for the "
"the marker prim is resolved using the key of the marker in the "
":attr:`VisualizationMarkersCfg.markers` dictionary. The marker prototypes"
" are created using the :meth:`omni.isaac.core.utils.create_prim` "
"function, and then then instanced using :class:`UsdGeom.PointInstancer` "
"prim to allow creating multiple instances of the marker prims."
msgstr ""

#: of omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:19
msgid ""
"Switching between different marker prototypes is possible by calling the "
":meth:`visualize` method with the prototype indices corresponding to the "
"marker prototype. The prototype indices are based on the order in the "
":attr:`VisualizationMarkersCfg.markers` dictionary. For example, if the "
"dictionary has two markers, \"marker1\" and \"marker2\", then their "
"prototype indices are 0 and 1 respectively. The prototype indices can be "
"passed as a list or array of integers."
msgstr ""

#: of omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:71
msgid "Usage:"
msgstr ""

#: of omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:26
msgid ""
"The following snippet shows how to create 24 sphere markers with a radius"
" of 1.0 at random translations within the range [-1.0, 1.0]. The first 12"
" markers will be colored red and the rest will be colored green."
msgstr ""

#: of omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:1
msgid "**Methods:**"
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:1:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<omni.isaac.lab.markers.VisualizationMarkers.__init__>`\\ \\(cfg\\)"
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.__init__:1
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:1:<autosummary>:1
msgid "Initialize the class."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:1:<autosummary>:1
msgid ""
":py:obj:`set_visibility "
"<omni.isaac.lab.markers.VisualizationMarkers.set_visibility>`\\ "
"\\(visible\\)"
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.set_visibility:1
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:1:<autosummary>:1
msgid "Sets the visibility of the markers."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:1:<autosummary>:1
msgid ""
":py:obj:`is_visible "
"<omni.isaac.lab.markers.VisualizationMarkers.is_visible>`\\ \\(\\)"
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.is_visible:1
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:1:<autosummary>:1
msgid "Checks the visibility of the markers."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:1:<autosummary>:1
msgid ""
":py:obj:`visualize "
"<omni.isaac.lab.markers.VisualizationMarkers.visualize>`\\ "
"\\(\\[translations\\, orientations\\, ...\\]\\)"
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize:1
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:1:<autosummary>:1
msgid "Update markers in the viewport."
msgstr ""

#: of omni.isaac.lab.markers.visualization_markers.VisualizationMarkers:1
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkersCfg:1
msgid "**Attributes:**"
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.__init__:1:<autosummary>:1
msgid ""
":py:obj:`num_prototypes "
"<omni.isaac.lab.markers.VisualizationMarkers.num_prototypes>`\\"
msgstr ""

#: of omni.isaac.lab.markers.VisualizationMarkers.num_prototypes:1
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.__init__:1:<autosummary>:1
msgid "The number of marker prototypes available."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.__init__:1:<autosummary>:1
msgid ":py:obj:`count <omni.isaac.lab.markers.VisualizationMarkers.count>`\\"
msgstr ""

#: of omni.isaac.lab.markers.VisualizationMarkers.count:1
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.__init__:1:<autosummary>:1
msgid "The total number of marker instances."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.__init__:3
msgid ""
"When the class is initialized, the :class:`UsdGeom.PointInstancer` is "
"created into the stage and the marker prims are registered into it."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.__init__:7
msgid ""
"If a prim already exists at the given path, the function will find the "
"next free path and create the :class:`UsdGeom.PointInstancer` prim there."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.__init__
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.set_visibility
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize
msgid "参数"
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.__init__:10
msgid "The configuration for the markers."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.__init__
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize
msgid "抛出"
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.__init__:12
msgid "When no markers are provided in the :obj:`cfg`."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.set_visibility:3
msgid "The method does this through the USD API."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.set_visibility:5
msgid "flag to set the visibility."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.is_visible
msgid "返回"
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.is_visible:3
msgid "True if the markers are visible, False otherwise."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize:4
msgid ""
"If the prim `PointInstancer` is hidden in the stage, the function will "
"simply return without updating the markers. This helps in unnecessary "
"computation when the markers are not visible."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize:8
msgid ""
"Whenever updating the markers, the input arrays must have the same number"
" of elements in the first dimension. If the number of elements is "
"different, the `UsdGeom.PointInstancer` will raise an error complaining "
"about the mismatch."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize:12
msgid ""
"Additionally, the function supports dynamic update of the markers. This "
"means that the number of markers can change between calls. For example, "
"if you have 24 points that you want to visualize, you can pass 24 "
"translations, orientations, and scales. If you want to visualize only 12 "
"points, you can pass 12 translations, orientations, and scales. The "
"function will automatically update the number of markers in the scene."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize:18
msgid ""
"The function will also update the marker prototypes based on their "
"prototype indices. For instance, if you have two marker prototypes, and "
"you pass the following marker indices: [0, 1, 0, 1], the function will "
"update the first and third markers with the first prototype, and the "
"second and fourth markers with the second prototype. This is useful when "
"you want to visualize different markers in the same scene. The list of "
"marker indices must have the same number of elements as the translations,"
" orientations, or scales. If the number of elements is different, the "
"function will raise an error."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize:26
msgid ""
"This function will update all the markers instanced from the prototypes. "
"That means if you have 24 markers, you will need to pass 24 translations,"
" orientations, and scales."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize:29
msgid ""
"If you want to update only a subset of the markers, you will need to "
"handle the indices yourself and pass the complete arrays to this "
"function."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize:32
msgid ""
"Translations w.r.t. parent prim frame. Shape is (M, 3). Defaults to None,"
" which means left unchanged."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize:34
msgid ""
"Quaternion orientations (w, x, y, z) w.r.t. parent prim frame. Shape is "
"(M, 4). Defaults to None, which means left unchanged."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize:36
msgid ""
"Scale applied before any rotation is applied. Shape is (M, 3). Defaults "
"to None, which means left unchanged."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize:38
msgid ""
"Decides which marker prototype to visualize. Shape is (M). Defaults to "
"None, which means left unchanged provided that the total number of "
"markers is the same as the previous call. If the number of markers is "
"different, the function will update the number of markers in the scene."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize:43
msgid "When input arrays do not follow the expected shapes."
msgstr ""

#: of
#: omni.isaac.lab.markers.visualization_markers.VisualizationMarkers.visualize:44
msgid "When the function is called with all None arguments."
msgstr ""

#: of
#: omni.isaac.lab.markers.VisualizationMarkersCfg.prim_path:1:<autosummary>:1
msgid ""
":py:obj:`prim_path "
"<omni.isaac.lab.markers.VisualizationMarkersCfg.prim_path>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.markers.VisualizationMarkersCfg.prim_path:1
#: omni.isaac.lab.markers.VisualizationMarkersCfg.prim_path:1:<autosummary>:1
msgid "The prim path where the :class:`UsdGeom.PointInstancer` will be created."
msgstr ""

#: of
#: omni.isaac.lab.markers.VisualizationMarkersCfg.prim_path:1:<autosummary>:1
msgid ""
":py:obj:`markers "
"<omni.isaac.lab.markers.VisualizationMarkersCfg.markers>`\\"
msgstr ""

#: ../../docstring of omni.isaac.lab.markers.VisualizationMarkersCfg.markers:1
#: omni.isaac.lab.markers.VisualizationMarkersCfg.prim_path:1:<autosummary>:1
msgid "The dictionary of marker configurations."
msgstr ""

#: ../../docstring of omni.isaac.lab.markers.VisualizationMarkersCfg.markers:3
msgid ""
"The key is the name of the marker, and the value is the configuration of "
"the marker. The key is used to identify the marker in the class."
msgstr ""





