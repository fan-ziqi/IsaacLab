# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-01 19:20+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/api/lab/isaaclab.sim.rst:2
msgid "isaaclab.sim"
msgstr ""

#: isaaclab.sim:1 of
msgid "Sub-package containing simulation-specific functionalities."
msgstr ""

#: isaaclab.sim:3 of
msgid "These include:"
msgstr ""

#: isaaclab.sim:5 of
msgid "Ability to spawn different objects and materials into Omniverse"
msgstr ""

#: isaaclab.sim:6 of
msgid "Define and modify various schemas on USD prims"
msgstr ""

#: isaaclab.sim:7 of
msgid ""
"Converters to obtain USD file from other file formats (such as URDF, OBJ,"
" STL, FBX)"
msgstr ""

#: isaaclab.sim:8 of
msgid "Utility class to control the simulator"
msgstr ""

#: isaaclab.sim:11 of
msgid ""
"Currently, only a subset of all possible schemas and prims in Omniverse "
"are supported. We are expanding the these set of functions on a need "
"basis. In case, there are specific prims or schemas that you would like "
"to include, please open an issue on GitHub as a feature request "
"elaborating on the required application."
msgstr ""

#: isaaclab.sim:16 of
msgid ""
"To make it convenient to use the module, we recommend importing the "
"module as follows:"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:7
msgid "Submodules"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:14:<autosummary>:1
msgid ":py:obj:`converters <isaaclab.sim.converters>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:14:<autosummary>:1
msgid "Sub-module containing converters for converting various file types to USD."
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:14:<autosummary>:1
msgid ":py:obj:`schemas <isaaclab.sim.schemas>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:14:<autosummary>:1
msgid "Sub-module containing utilities for schemas used in Omniverse."
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:14:<autosummary>:1
msgid ":py:obj:`spawners <isaaclab.sim.spawners>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:14:<autosummary>:1
msgid "Sub-module containing utilities for creating prims in Omniverse."
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:14:<autosummary>:1
msgid ":py:obj:`utils <isaaclab.sim.utils>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:14:<autosummary>:1
#: isaaclab.sim.utils:1 of
msgid "Sub-module with USD-related utilities."
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:16
msgid "Classes"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:23:<autosummary>:1
msgid ":py:obj:`SimulationContext <isaaclab.sim.SimulationContext>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:23:<autosummary>:1
#: isaaclab.sim.simulation_context.SimulationContext:1 of
msgid ""
"A class to control simulation-related events such as physics stepping and"
" rendering."
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:23:<autosummary>:1
msgid ":py:obj:`SimulationCfg <isaaclab.sim.SimulationCfg>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:23:<autosummary>:1
#: isaaclab.sim.simulation_cfg.SimulationCfg:1 of
msgid "Configuration for simulation physics."
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:23:<autosummary>:1
msgid ":py:obj:`PhysxCfg <isaaclab.sim.PhysxCfg>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:23:<autosummary>:1
#: isaaclab.sim.simulation_cfg.PhysxCfg:1 of
msgid "Configuration for PhysX solver-related parameters."
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:23:<autosummary>:1
msgid ":py:obj:`RenderCfg <isaaclab.sim.RenderCfg>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:23:<autosummary>:1
#: isaaclab.sim.simulation_cfg.RenderCfg:1 of
msgid "Configuration for Omniverse RTX Renderer."
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:25
msgid "Functions"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:28:<autosummary>:1
msgid ""
":py:obj:`simulation_context.build_simulation_context "
"<isaaclab.sim.simulation_context.build_simulation_context>`\\ "
"\\(\\[...\\]\\)"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:28:<autosummary>:1
#: isaaclab.sim.simulation_context.build_simulation_context:1 of
msgid "Context manager to build a simulation context with the provided settings."
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:31
msgid "Simulation Context"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:1 of
msgid "Bases: :py:class:`~isaacsim.core.api.simulation_context.SimulationContext`"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:3 of
msgid ""
"The simulation context helps control various simulation aspects. This "
"includes:"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:5 of
msgid ""
"configure the simulator with different settings such as the physics time-"
"step, the number of physics substeps, and the physics solver parameters "
"(for more information, see :class:`isaaclab.sim.SimulationCfg`)"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:7 of
msgid "playing, pausing, stepping and stopping the simulation"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:8 of
msgid ""
"adding and removing callbacks to different simulation events such as "
"physics stepping, rendering, etc."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:10 of
msgid ""
"This class inherits from the "
":class:`isaacsim.core.api.simulation_context.SimulationContext` class and"
" adds additional functionalities such as setting up the simulation "
"context with a configuration object, exposing other commonly used "
"simulator-related functions, and performing version checks of Isaac Sim "
"to ensure compatibility between releases."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:15 of
msgid ""
"The simulation context is a singleton object. This means that there can "
"only be one instance of the simulation context at any given time. This is"
" enforced by the parent class. Therefore, it is not possible to create "
"multiple instances of the simulation context. Instead, the simulation "
"context can be accessed using the ``instance()`` method."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:21 of
msgid ""
"Since we only support the `PyTorch <https://pytorch.org/>`_ backend for "
"simulation, the simulation context is configured to use the ``torch`` "
"backend by default. This means that all the data structures used in the "
"simulation are ``torch.Tensor`` objects."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:25 of
msgid "The simulation context can be used in two different modes of operations:"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:27 of
msgid ""
"**Standalone python script**: In this mode, the user has full control "
"over the simulation and can trigger stepping events synchronously (i.e. "
"as a blocking call). In this case the user has to manually call "
":meth:`step` step the physics simulation and :meth:`render` to render the"
" scene."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:31 of
msgid ""
"**Omniverse extension**: In this mode, the user has limited control over "
"the simulation stepping and all the simulation events are triggered "
"asynchronously (i.e. as a non-blocking call). In this case, the user can "
"only trigger the simulation to start, pause, and stop. The simulation "
"takes care of stepping the physics simulation and rendering the scene."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:36 of
msgid ""
"Based on above, for most functions in this class there is an equivalent "
"function that is suffixed with ``_async``. The ``_async`` functions are "
"used in the Omniverse extension mode and the non-``_async`` functions are"
" used in the standalone python script mode."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:1 of
msgid "**Classes:**"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:1:<autosummary>:1 of
msgid ":py:obj:`RenderMode <isaaclab.sim.SimulationContext.RenderMode>`\\"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1
#: isaaclab.sim.simulation_context.SimulationContext:1:<autosummary>:1 of
msgid "Different rendering modes for the simulation."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext:1 of
msgid "**Methods:**"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: of
msgid ""
":py:obj:`__init__ <isaaclab.sim.SimulationContext.__init__>`\\ "
"\\(\\[cfg\\]\\)"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: isaaclab.sim.simulation_context.SimulationContext.__init__:1 of
msgid "Creates a simulation context to control the simulator."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: of
msgid ":py:obj:`has_gui <isaaclab.sim.SimulationContext.has_gui>`\\ \\(\\)"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: isaaclab.sim.simulation_context.SimulationContext.has_gui:1 of
msgid "Returns whether the simulation has a GUI enabled."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: of
msgid ""
":py:obj:`has_rtx_sensors "
"<isaaclab.sim.SimulationContext.has_rtx_sensors>`\\ \\(\\)"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: isaaclab.sim.simulation_context.SimulationContext.has_rtx_sensors:1 of
msgid "Returns whether the simulation has any RTX-rendering related sensors."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: of
msgid ""
":py:obj:`is_fabric_enabled "
"<isaaclab.sim.SimulationContext.is_fabric_enabled>`\\ \\(\\)"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: isaaclab.sim.simulation_context.SimulationContext.is_fabric_enabled:1 of
msgid "Returns whether the fabric interface is enabled."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: of
msgid ""
":py:obj:`get_version <isaaclab.sim.SimulationContext.get_version>`\\ "
"\\(\\)"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: isaaclab.sim.simulation_context.SimulationContext.get_version:1 of
msgid "Returns the version of the simulator."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: of
msgid ""
":py:obj:`set_camera_view "
"<isaaclab.sim.SimulationContext.set_camera_view>`\\ \\(eye\\, "
"target\\[\\, camera\\_prim\\_path\\]\\)"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: isaaclab.sim.simulation_context.SimulationContext.set_camera_view:1 of
msgid "Set the location and target of the viewport camera in the stage."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: of
msgid ""
":py:obj:`set_render_mode "
"<isaaclab.sim.SimulationContext.set_render_mode>`\\ \\(mode\\)"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: isaaclab.sim.simulation_context.SimulationContext.set_render_mode:1 of
msgid "Change the current render mode of the simulation."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: of
msgid ""
":py:obj:`set_setting <isaaclab.sim.SimulationContext.set_setting>`\\ "
"\\(name\\, value\\)"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: isaaclab.sim.simulation_context.SimulationContext.set_setting:1 of
msgid "Set simulation settings using the Carbonite SDK."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: of
msgid ""
":py:obj:`get_setting <isaaclab.sim.SimulationContext.get_setting>`\\ "
"\\(name\\)"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: isaaclab.sim.simulation_context.SimulationContext.get_setting:1 of
msgid "Read the simulation setting using the Carbonite SDK."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: of
msgid ":py:obj:`forward <isaaclab.sim.SimulationContext.forward>`\\ \\(\\)"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: isaaclab.sim.simulation_context.SimulationContext.forward:1 of
msgid "Updates articulation kinematics and fabric for rendering."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: of
msgid ":py:obj:`step <isaaclab.sim.SimulationContext.step>`\\ \\(\\[render\\]\\)"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: isaaclab.sim.simulation_context.SimulationContext.step:1 of
msgid "Steps the simulation."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: of
msgid ""
":py:obj:`render <isaaclab.sim.SimulationContext.render>`\\ "
"\\(\\[mode\\]\\)"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1:<autosummary>:1
#: isaaclab.sim.simulation_context.SimulationContext.render:1 of
msgid ""
"Refreshes the rendering components including UI elements and view-ports "
"depending on the render mode."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1 of
msgid "Bases: :py:class:`~enum.IntEnum`"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:3 of
msgid ""
"Render modes correspond to how the viewport and other UI elements (such "
"as listeners to keyboard or mouse events) are updated. There are three "
"main components that can be updated when the simulation is rendered:"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:6 of
msgid ""
"**UI elements and other extensions**: These are UI elements (such as "
"buttons, sliders, etc.) and other extensions that are running in the "
"background that need to be updated when the simulation is running."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:8 of
msgid ""
"**Cameras**: These are typically based on Hydra textures and are used to "
"render the scene from different viewpoints. They can be attached to a "
"viewport or be used independently to render the scene."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:10 of
msgid "**Viewports**: These are windows where you can see the rendered scene."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:12 of
msgid ""
"Updating each of the above components has a different overhead. For "
"example, updating the viewports is computationally expensive compared to "
"updating the UI elements. Therefore, it is useful to be able to control "
"what is updated when the simulation is rendered. This is where the render"
" mode comes in. There are four different render modes:"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:17 of
msgid ""
":attr:`NO_GUI_OR_RENDERING`: The simulation is running without a GUI and "
"off-screen rendering flag is disabled, so none of the above are updated."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:19 of
msgid ""
":attr:`NO_RENDERING`: No rendering, where only 1 is updated at a lower "
"rate."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:20 of
msgid ""
":attr:`PARTIAL_RENDERING`: Partial rendering, where only 1 and 2 are "
"updated."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:21 of
msgid ""
":attr:`FULL_RENDERING`: Full rendering, where everything (1, 2, 3) is "
"updated."
msgstr ""

#: isaaclab.sim.simulation_cfg.PhysxCfg:1
#: isaaclab.sim.simulation_cfg.RenderCfg:1
#: isaaclab.sim.simulation_cfg.SimulationCfg:1
#: isaaclab.sim.simulation_context.SimulationContext.RenderMode:1 of
msgid "**Attributes:**"
msgstr ""

#: isaaclab.sim.SimulationContext.RenderMode.NO_GUI_OR_RENDERING:1:<autosummary>:1
#: of
msgid ""
":py:obj:`NO_GUI_OR_RENDERING "
"<isaaclab.sim.SimulationContext.RenderMode.NO_GUI_OR_RENDERING>`\\"
msgstr ""

#: ../../docstring
#: isaaclab.sim.SimulationContext.RenderMode.NO_GUI_OR_RENDERING:1
#: isaaclab.sim.SimulationContext.RenderMode.NO_GUI_OR_RENDERING:1:<autosummary>:1
#: of
msgid ""
"The simulation is running without a GUI and off-screen rendering is "
"disabled."
msgstr ""

#: isaaclab.sim.SimulationContext.RenderMode.NO_GUI_OR_RENDERING:1:<autosummary>:1
#: of
msgid ""
":py:obj:`NO_RENDERING "
"<isaaclab.sim.SimulationContext.RenderMode.NO_RENDERING>`\\"
msgstr ""

#: ../../docstring
#: isaaclab.sim.SimulationContext.RenderMode.NO_GUI_OR_RENDERING:1:<autosummary>:1
#: isaaclab.sim.SimulationContext.RenderMode.NO_RENDERING:1 of
msgid "No rendering, where only other UI elements are updated at a lower rate."
msgstr ""

#: isaaclab.sim.SimulationContext.RenderMode.NO_GUI_OR_RENDERING:1:<autosummary>:1
#: of
msgid ""
":py:obj:`PARTIAL_RENDERING "
"<isaaclab.sim.SimulationContext.RenderMode.PARTIAL_RENDERING>`\\"
msgstr ""

#: ../../docstring
#: isaaclab.sim.SimulationContext.RenderMode.NO_GUI_OR_RENDERING:1:<autosummary>:1
#: isaaclab.sim.SimulationContext.RenderMode.PARTIAL_RENDERING:1 of
msgid ""
"Partial rendering, where the simulation cameras and UI elements are "
"updated."
msgstr ""

#: isaaclab.sim.SimulationContext.RenderMode.NO_GUI_OR_RENDERING:1:<autosummary>:1
#: of
msgid ""
":py:obj:`FULL_RENDERING "
"<isaaclab.sim.SimulationContext.RenderMode.FULL_RENDERING>`\\"
msgstr ""

#: ../../docstring isaaclab.sim.SimulationContext.RenderMode.FULL_RENDERING:1
#: isaaclab.sim.SimulationContext.RenderMode.NO_GUI_OR_RENDERING:1:<autosummary>:1
#: of
msgid ""
"Full rendering, where all the simulation viewports, cameras and UI "
"elements are updated."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.__init__
#: isaaclab.sim.simulation_context.SimulationContext.get_setting
#: isaaclab.sim.simulation_context.SimulationContext.render
#: isaaclab.sim.simulation_context.SimulationContext.set_camera_view
#: isaaclab.sim.simulation_context.SimulationContext.set_render_mode
#: isaaclab.sim.simulation_context.SimulationContext.set_setting
#: isaaclab.sim.simulation_context.SimulationContext.step
#: isaaclab.sim.simulation_context.build_simulation_context
#: isaaclab.sim.utils.apply_nested isaaclab.sim.utils.bind_physics_material
#: isaaclab.sim.utils.bind_visual_material isaaclab.sim.utils.clone
#: isaaclab.sim.utils.export_prim_to_file
#: isaaclab.sim.utils.find_first_matching_prim
#: isaaclab.sim.utils.find_global_fixed_joint_prim
#: isaaclab.sim.utils.find_matching_prim_paths
#: isaaclab.sim.utils.find_matching_prims
#: isaaclab.sim.utils.get_all_matching_child_prims
#: isaaclab.sim.utils.get_first_matching_child_prim
#: isaaclab.sim.utils.make_uninstanceable
#: isaaclab.sim.utils.safe_set_attribute_on_usd_prim
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema
#: isaaclab.sim.utils.select_usd_variants of
msgid "Parameters"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.__init__:3 of
msgid ""
"The configuration of the simulation. Defaults to None, in which case the "
"default configuration is used."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.has_gui:3 of
msgid "True if the simulation has a GUI enabled either locally or live-streamed."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.has_rtx_sensors:3 of
msgid ""
"This function returns the value of the simulation parameter "
"``\"/isaaclab/render/rtx_sensors\"``. The parameter is set to True when "
"instances of RTX-related sensors (cameras or LiDARs) are created using "
"Isaac Lab's sensor classes."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.has_rtx_sensors:7 of
msgid "True if the simulation has RTX sensors (such as USD Cameras or LiDARs)."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.has_rtx_sensors:9 of
msgid "For more information, please check `NVIDIA RTX documentation`_."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.is_fabric_enabled:3 of
msgid ""
"When fabric interface is enabled, USD read/write operations are disabled."
" Instead all applications read and write the simulation state directly "
"from the fabric interface. This reduces a lot of overhead that occurs "
"during USD read/write operations."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.is_fabric_enabled:7 of
msgid "For more information, please check `Fabric documentation`_."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.get_version:3 of
msgid ""
"This is a wrapper around the ``isaacsim.core.version.get_version()`` "
"function."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.get_version:5 of
msgid "The returned tuple contains the following information:"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.get_version:7 of
msgid "Major version (int): This is the year of the release (e.g. 2022)."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.get_version:8 of
msgid "Minor version (int): This is the half-year of the release (e.g. 1 or 2)."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.get_version:9 of
msgid "Patch version (int): This is the patch number of the release (e.g. 0)."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.set_camera_view:5 of
msgid ""
"This is a wrapper around the "
":math:`isaacsim.core.utils.viewports.set_camera_view` function. It is "
"provided here for convenience to reduce the amount of imports needed."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.set_camera_view:8 of
msgid "The location of the camera eye."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.set_camera_view:9 of
msgid "The location of the camera target."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.set_camera_view:10 of
msgid ""
"The path to the camera primitive in the stage. Defaults to "
"\"/OmniverseKit_Persp\"."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.render:7
#: isaaclab.sim.simulation_context.SimulationContext.set_render_mode:3 of
msgid ""
"Please see :class:`RenderMode` for more information on the different "
"render modes."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.set_render_mode:6 of
msgid ""
"When no GUI is available (locally or livestreamed), we do not need to "
"choose whether the viewport needs to render or not (since there is no "
"GUI). Thus, in this case, calling the function will not change the render"
" mode."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.set_render_mode:10 of
msgid "The rendering mode. If different than SimulationContext's rendering mode,"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.set_render_mode
#: isaaclab.sim.utils.apply_nested isaaclab.sim.utils.bind_physics_material
#: isaaclab.sim.utils.bind_visual_material
#: isaaclab.sim.utils.export_prim_to_file
#: isaaclab.sim.utils.find_first_matching_prim
#: isaaclab.sim.utils.find_global_fixed_joint_prim
#: isaaclab.sim.utils.find_matching_prim_paths
#: isaaclab.sim.utils.find_matching_prims
#: isaaclab.sim.utils.get_all_matching_child_prims
#: isaaclab.sim.utils.get_first_matching_child_prim
#: isaaclab.sim.utils.make_uninstanceable
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema
#: isaaclab.sim.utils.select_usd_variants of
msgid "Raises"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.set_render_mode:14 of
msgid "If the input mode is not supported."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.set_setting:4 of
msgid ""
"If the input setting name does not exist, it will be created. If it does "
"exist, the value will be overwritten. Please make sure to use the correct"
" setting name."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.set_setting:7 of
msgid ""
"To understand the settings interface, please refer to the `Carbonite SDK "
"<https://docs.omniverse.nvidia.com/dev-"
"guide/latest/programmer_ref/settings.html>`_ documentation."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.get_setting:3
#: isaaclab.sim.simulation_context.SimulationContext.set_setting:11 of
msgid "The name of the setting."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.get_setting:5
#: isaaclab.sim.simulation_context.SimulationContext.set_setting:12 of
msgid "The value of the setting."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.get_setting
#: isaaclab.sim.utils.apply_nested isaaclab.sim.utils.clone
#: isaaclab.sim.utils.find_first_matching_prim
#: isaaclab.sim.utils.find_global_fixed_joint_prim
#: isaaclab.sim.utils.find_matching_prim_paths
#: isaaclab.sim.utils.find_matching_prims
#: isaaclab.sim.utils.get_all_matching_child_prims
#: isaaclab.sim.utils.get_first_matching_child_prim of
msgid "Returns"
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.step:4 of
msgid ""
"This function blocks if the timeline is paused. It only returns when the "
"timeline is playing."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.step:6 of
msgid ""
"Whether to render the scene after stepping the physics simulation. If set"
" to False, the scene is not rendered and only the physics simulation is "
"stepped."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.render:3 of
msgid ""
"This function is used to refresh the rendering components of the "
"simulation. This includes updating the view-ports, UI elements, and other"
" extensions (besides physics simulation) that are running in the "
"background. The rendering components are refreshed based on the render "
"mode."
msgstr ""

#: isaaclab.sim.simulation_context.SimulationContext.render:9 of
msgid ""
"The rendering mode. Defaults to None, in which case the current rendering"
" mode is used."
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:38
msgid "Simulation Configuration"
msgstr ""

#: isaaclab.sim.simulation_cfg.PhysxCfg:1
#: isaaclab.sim.simulation_cfg.RenderCfg:1
#: isaaclab.sim.simulation_cfg.SimulationCfg:1 of
msgid "Bases: :py:class:`object`"
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid ""
":py:obj:`physics_prim_path "
"<isaaclab.sim.SimulationCfg.physics_prim_path>`\\"
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid "The prim path where the USD PhysicsScene is created."
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid ":py:obj:`device <isaaclab.sim.SimulationCfg.device>`\\"
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid "The device to run the simulation on."
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid ":py:obj:`dt <isaaclab.sim.SimulationCfg.dt>`\\"
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid "The physics simulation time-step (in seconds)."
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid ":py:obj:`render_interval <isaaclab.sim.SimulationCfg.render_interval>`\\"
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid "The number of physics simulation steps per rendering step."
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid ":py:obj:`gravity <isaaclab.sim.SimulationCfg.gravity>`\\"
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid "The gravity vector (in m/s^2)."
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid ""
":py:obj:`enable_scene_query_support "
"<isaaclab.sim.SimulationCfg.enable_scene_query_support>`\\"
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid "Enable/disable scene query support for collision shapes."
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid ":py:obj:`use_fabric <isaaclab.sim.SimulationCfg.use_fabric>`\\"
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid "Enable/disable reading of physics buffers directly."
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid ":py:obj:`physx <isaaclab.sim.SimulationCfg.physx>`\\"
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid "PhysX solver settings."
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid ":py:obj:`physics_material <isaaclab.sim.SimulationCfg.physics_material>`\\"
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid "Default physics material settings for rigid bodies."
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid ":py:obj:`render <isaaclab.sim.SimulationCfg.render>`\\"
msgstr ""

#: isaaclab.sim.SimulationCfg.physics_prim_path:1:<autosummary>:1 of
msgid "Render settings."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.physics_prim_path:1 of
msgid ""
"The prim path where the USD PhysicsScene is created. Default is "
"\"/physicsScene\"."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.device:1 of
msgid "The device to run the simulation on. Default is ``\"cuda:0\"``."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.device:3 of
msgid "Valid options are:"
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.device:5 of
msgid "``\"cpu\"``: Use CPU."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.device:6 of
msgid ""
"``\"cuda\"``: Use GPU, where the device ID is inferred from "
":class:`~isaaclab.app.AppLauncher`'s config."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.device:7 of
msgid ""
"``\"cuda:N\"``: Use GPU, where N is the device ID. For example, "
"\"cuda:0\"."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.dt:1 of
msgid "The physics simulation time-step (in seconds). Default is 0.0167 seconds."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.render_interval:1 of
msgid "The number of physics simulation steps per rendering step. Default is 1."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.gravity:1 of
msgid "The gravity vector (in m/s^2). Default is (0.0, 0.0, -9.81)."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.gravity:3 of
msgid "If set to (0.0, 0.0, 0.0), gravity is disabled."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.enable_scene_query_support:1 of
msgid "Enable/disable scene query support for collision shapes. Default is False."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.enable_scene_query_support:3 of
msgid ""
"This flag allows performing collision queries (raycasts, sweeps, and "
"overlaps) on actors and attached shapes in the scene. This is useful for "
"implementing custom collision detection logic outside of the physics "
"engine."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.enable_scene_query_support:7 of
msgid ""
"If set to False, the physics engine does not create the scene query "
"manager and the scene query functionality will not be available. However,"
" this provides some performance speed-up."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.enable_scene_query_support:12 of
msgid ""
"This flag is overridden to True inside the :class:`SimulationContext` "
"class when running the simulation with the GUI enabled. This is to allow "
"certain GUI features to work properly."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.use_fabric:1 of
msgid "Enable/disable reading of physics buffers directly. Default is True."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.use_fabric:3 of
msgid ""
"When running the simulation, updates in the states in the scene is "
"normally synchronized with USD. This leads to an overhead in reading the "
"data and does not scale well with massive parallelization. This flag "
"allows disabling the synchronization and reading the data directly from "
"the physics buffers."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.use_fabric:7 of
msgid ""
"It is recommended to set this flag to :obj:`True` when running the "
"simulation with a large number of primitives in the scene."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.use_fabric:12 of
msgid ""
"When enabled, the GUI will not update the physics parameters in real-"
"time. To enable real-time updates, please set this flag to :obj:`False`."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.use_fabric:15 of
msgid ""
"When using GPU simulation, it is required to enable Fabric to visualize "
"updates in the renderer. Transform updates are propagated to the renderer"
" through Fabric. If Fabric is disabled with GPU simulation, the renderer "
"will not be able to render any updates in the simulation, although "
"simulation will still be running under the hood."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.physx:1 of
msgid "PhysX solver settings. Default is PhysxCfg()."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.physics_material:1 of
msgid ""
"Default physics material settings for rigid bodies. Default is "
"RigidBodyMaterialCfg()."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.physics_material:3 of
msgid ""
"The physics engine defaults to this physics material for all the rigid "
"body prims that do not have any physics material specified on them."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.physics_material:6 of
#, python-brace-format
msgid ""
"The material is created at the path: "
"``{physics_prim_path}/defaultMaterial``."
msgstr ""

#: ../../docstring isaaclab.sim.SimulationCfg.render:1 of
msgid "Render settings. Default is RenderCfg()."
msgstr ""

#: isaaclab.sim.simulation_cfg.PhysxCfg:3 of
msgid ""
"These parameters are used to configure the PhysX solver. For more "
"information, see the `PhysX 5 SDK documentation`_."
msgstr ""

#: isaaclab.sim.simulation_cfg.PhysxCfg:6 of
msgid ""
"PhysX 5 supports GPU-accelerated physics simulation. This is enabled by "
"default, but can be disabled by setting the :attr:`~SimulationCfg.device`"
" to ``cpu`` in :class:`SimulationCfg`. Unlike CPU PhysX, the GPU "
"simulation feature is unable to dynamically grow all the buffers. "
"Therefore, it is necessary to provide a reasonable estimate of the buffer"
" sizes for GPU features. If insufficient buffer sizes are provided, the "
"simulation will fail with errors and lead to adverse behaviors. The "
"buffer sizes can be adjusted through the ``gpu_*`` parameters."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ":py:obj:`solver_type <isaaclab.sim.PhysxCfg.solver_type>`\\"
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.solver_type:1
#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid "The type of solver to use.Default is 1 (TGS)."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`min_position_iteration_count "
"<isaaclab.sim.PhysxCfg.min_position_iteration_count>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
"Minimum number of solver position iterations (rigid bodies, cloth, "
"particles etc.)."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`max_position_iteration_count "
"<isaaclab.sim.PhysxCfg.max_position_iteration_count>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
"Maximum number of solver position iterations (rigid bodies, cloth, "
"particles etc.)."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`min_velocity_iteration_count "
"<isaaclab.sim.PhysxCfg.min_velocity_iteration_count>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
"Minimum number of solver velocity iterations (rigid bodies, cloth, "
"particles etc.)."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`max_velocity_iteration_count "
"<isaaclab.sim.PhysxCfg.max_velocity_iteration_count>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
"Maximum number of solver velocity iterations (rigid bodies, cloth, "
"particles etc.)."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ":py:obj:`enable_ccd <isaaclab.sim.PhysxCfg.enable_ccd>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
"Enable a second broad-phase pass that makes it possible to prevent "
"objects from tunneling through each other."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`enable_stabilization "
"<isaaclab.sim.PhysxCfg.enable_stabilization>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid "Enable/disable additional stabilization pass in solver."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`enable_enhanced_determinism "
"<isaaclab.sim.PhysxCfg.enable_enhanced_determinism>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid "Enable/disable improved determinism at the expense of performance."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`bounce_threshold_velocity "
"<isaaclab.sim.PhysxCfg.bounce_threshold_velocity>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid "Relative velocity threshold for contacts to bounce (in m/s)."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`friction_offset_threshold "
"<isaaclab.sim.PhysxCfg.friction_offset_threshold>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid "Threshold for contact point to experience friction force (in m)."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`friction_correlation_distance "
"<isaaclab.sim.PhysxCfg.friction_correlation_distance>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
"Distance threshold for merging contacts into a single friction anchor "
"point (in m)."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`gpu_max_rigid_contact_count "
"<isaaclab.sim.PhysxCfg.gpu_max_rigid_contact_count>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid "Size of rigid contact stream buffer allocated in pinned host memory."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`gpu_max_rigid_patch_count "
"<isaaclab.sim.PhysxCfg.gpu_max_rigid_patch_count>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
"Size of the rigid contact patch stream buffer allocated in pinned host "
"memory."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`gpu_found_lost_pairs_capacity "
"<isaaclab.sim.PhysxCfg.gpu_found_lost_pairs_capacity>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid "Capacity of found and lost buffers allocated in GPU global memory."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`gpu_found_lost_aggregate_pairs_capacity "
"<isaaclab.sim.PhysxCfg.gpu_found_lost_aggregate_pairs_capacity>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
"Capacity of found and lost buffers in aggregate system allocated in GPU "
"global memory."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`gpu_total_aggregate_pairs_capacity "
"<isaaclab.sim.PhysxCfg.gpu_total_aggregate_pairs_capacity>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
"Capacity of total number of aggregate pairs allocated in GPU global "
"memory."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`gpu_collision_stack_size "
"<isaaclab.sim.PhysxCfg.gpu_collision_stack_size>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid "Size of the collision stack buffer allocated in pinned host memory."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ":py:obj:`gpu_heap_capacity <isaaclab.sim.PhysxCfg.gpu_heap_capacity>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid "Initial capacity of the GPU and pinned host memory heaps."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`gpu_temp_buffer_capacity "
"<isaaclab.sim.PhysxCfg.gpu_temp_buffer_capacity>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid "Capacity of temp buffer allocated in pinned host memory."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`gpu_max_num_partitions "
"<isaaclab.sim.PhysxCfg.gpu_max_num_partitions>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid "Limitation for the partitions in the GPU dynamics pipeline."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`gpu_max_soft_body_contacts "
"<isaaclab.sim.PhysxCfg.gpu_max_soft_body_contacts>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid "Size of soft body contacts stream buffer allocated in pinned host memory."
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid ""
":py:obj:`gpu_max_particle_contacts "
"<isaaclab.sim.PhysxCfg.gpu_max_particle_contacts>`\\"
msgstr ""

#: isaaclab.sim.PhysxCfg.solver_type:1:<autosummary>:1 of
msgid "Size of particle contacts stream buffer allocated in pinned host memory."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.solver_type:3 of
msgid "Available solvers:"
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.solver_type:5 of
msgid ":obj:`0`: PGS (Projective Gauss-Seidel)"
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.solver_type:6 of
msgid ":obj:`1`: TGS (Truncated Gauss-Seidel)"
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.min_position_iteration_count:1 of
msgid ""
"Minimum number of solver position iterations (rigid bodies, cloth, "
"particles etc.). Default is 1."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.max_position_iteration_count:5
#: isaaclab.sim.PhysxCfg.min_position_iteration_count:5 of
msgid ""
"Each physics actor in Omniverse specifies its own solver iteration count."
" The solver takes the number of iterations specified by the actor with "
"the highest iteration and clamps it to the range "
"``[min_position_iteration_count, max_position_iteration_count]``."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.max_position_iteration_count:1 of
msgid ""
"Maximum number of solver position iterations (rigid bodies, cloth, "
"particles etc.). Default is 255."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.min_velocity_iteration_count:1 of
msgid ""
"Minimum number of solver velocity iterations (rigid bodies, cloth, "
"particles etc.). Default is 0."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.max_velocity_iteration_count:5
#: isaaclab.sim.PhysxCfg.min_velocity_iteration_count:5 of
msgid ""
"Each physics actor in Omniverse specifies its own solver iteration count."
" The solver takes the number of iterations specified by the actor with "
"the highest iteration and clamps it to the range "
"``[min_velocity_iteration_count, max_velocity_iteration_count]``."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.max_velocity_iteration_count:1 of
msgid ""
"Maximum number of solver velocity iterations (rigid bodies, cloth, "
"particles etc.). Default is 255."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.enable_ccd:1 of
msgid ""
"Enable a second broad-phase pass that makes it possible to prevent "
"objects from tunneling through each other. Default is False."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.enable_stabilization:1 of
msgid "Enable/disable additional stabilization pass in solver. Default is True."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.enable_enhanced_determinism:1 of
msgid ""
"Enable/disable improved determinism at the expense of performance. "
"Defaults to False."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.enable_enhanced_determinism:3 of
msgid "For more information on PhysX determinism, please check `here`_."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.bounce_threshold_velocity:1 of
msgid ""
"Relative velocity threshold for contacts to bounce (in m/s). Default is "
"0.5 m/s."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.friction_offset_threshold:1 of
msgid ""
"Threshold for contact point to experience friction force (in m). Default "
"is 0.04 m."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.friction_correlation_distance:1 of
msgid ""
"Distance threshold for merging contacts into a single friction anchor "
"point (in m). Default is 0.025 m."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.gpu_max_rigid_contact_count:1 of
msgid ""
"Size of rigid contact stream buffer allocated in pinned host memory. "
"Default is 2 ** 23."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.gpu_max_rigid_patch_count:1 of
msgid ""
"Size of the rigid contact patch stream buffer allocated in pinned host "
"memory. Default is 5 * 2 ** 15."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.gpu_found_lost_pairs_capacity:1 of
msgid ""
"Capacity of found and lost buffers allocated in GPU global memory. "
"Default is 2 ** 21."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.gpu_found_lost_pairs_capacity:3 of
msgid "This is used for the found/lost pair reports in the BP."
msgstr ""

#: ../../docstring
#: isaaclab.sim.PhysxCfg.gpu_found_lost_aggregate_pairs_capacity:1 of
msgid ""
"Capacity of found and lost buffers in aggregate system allocated in GPU "
"global memory. Default is 2 ** 25."
msgstr ""

#: ../../docstring
#: isaaclab.sim.PhysxCfg.gpu_found_lost_aggregate_pairs_capacity:4 of
msgid "This is used for the found/lost pair reports in AABB manager."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.gpu_total_aggregate_pairs_capacity:1
#: of
msgid ""
"Capacity of total number of aggregate pairs allocated in GPU global "
"memory. Default is 2 ** 21."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.gpu_collision_stack_size:1 of
msgid ""
"Size of the collision stack buffer allocated in pinned host memory. "
"Default is 2 ** 26."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.gpu_heap_capacity:1 of
msgid ""
"Initial capacity of the GPU and pinned host memory heaps. Additional "
"memory will be allocated if more memory is required. Default is 2 ** 26."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.gpu_temp_buffer_capacity:1 of
msgid ""
"Capacity of temp buffer allocated in pinned host memory. Default is 2 ** "
"24."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.gpu_max_num_partitions:1 of
msgid "Limitation for the partitions in the GPU dynamics pipeline. Default is 8."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.gpu_max_num_partitions:3 of
msgid ""
"This variable must be power of 2. A value greater than 32 is currently "
"not supported. Range: (1, 32)"
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.gpu_max_soft_body_contacts:1 of
msgid ""
"Size of soft body contacts stream buffer allocated in pinned host memory."
" Default is 2 ** 20."
msgstr ""

#: ../../docstring isaaclab.sim.PhysxCfg.gpu_max_particle_contacts:1 of
msgid ""
"Size of particle contacts stream buffer allocated in pinned host memory. "
"Default is 2 ** 20."
msgstr ""

#: isaaclab.sim.simulation_cfg.RenderCfg:3 of
msgid ""
"These parameters are used to configure the Omniverse RTX Renderer. The "
"defaults for IsaacLab are set in the experience files: "
"`apps/isaaclab.python.rendering.kit` and "
"`apps/isaaclab.python.headless.rendering.kit`. Setting any value here "
"will override the defaults of the experience files."
msgstr ""

#: isaaclab.sim.simulation_cfg.RenderCfg:7 of
msgid "For more information, see the `Omniverse RTX Renderer documentation`_."
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ""
":py:obj:`enable_translucency "
"<isaaclab.sim.RenderCfg.enable_translucency>`\\"
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ""
"Enables translucency for specular transmissive surfaces such as glass at "
"the cost of some performance."
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ":py:obj:`enable_reflections <isaaclab.sim.RenderCfg.enable_reflections>`\\"
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid "Enables reflections at the cost of some performance."
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ""
":py:obj:`enable_global_illumination "
"<isaaclab.sim.RenderCfg.enable_global_illumination>`\\"
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid "Enables Diffused Global Illumination at the cost of some performance."
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ":py:obj:`antialiasing_mode <isaaclab.sim.RenderCfg.antialiasing_mode>`\\"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.antialiasing_mode:7
#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid "Selects the anti-aliasing mode to use. Defaults to DLSS."
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ":py:obj:`enable_dlssg <isaaclab.sim.RenderCfg.enable_dlssg>`\\"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_dlssg:10
#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid "\"Enables the use of DLSS-G."
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ":py:obj:`enable_dl_denoiser <isaaclab.sim.RenderCfg.enable_dl_denoiser>`\\"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_dl_denoiser:6
#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid "Enables the use of a DL denoiser."
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ":py:obj:`dlss_mode <isaaclab.sim.RenderCfg.dlss_mode>`\\"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.dlss_mode:6
#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid "For DLSS anti-aliasing, selects the performance/quality tradeoff mode."
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ""
":py:obj:`enable_direct_lighting "
"<isaaclab.sim.RenderCfg.enable_direct_lighting>`\\"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_direct_lighting:1
#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid "Enable direct light contributions from lights."
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ":py:obj:`samples_per_pixel <isaaclab.sim.RenderCfg.samples_per_pixel>`\\"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1
#: isaaclab.sim.RenderCfg.samples_per_pixel:6 of
msgid "Defines the Direct Lighting samples per pixel."
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ":py:obj:`enable_shadows <isaaclab.sim.RenderCfg.enable_shadows>`\\"
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid "Enables shadows at the cost of performance."
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ""
":py:obj:`enable_ambient_occlusion "
"<isaaclab.sim.RenderCfg.enable_ambient_occlusion>`\\"
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid "Enables ambient occlusion at the cost of some performance."
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ":py:obj:`carb_settings <isaaclab.sim.RenderCfg.carb_settings>`\\"
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ""
"Provides a general dictionary for users to supply all carb rendering "
"settings with native names. - Name strings can be formatted like a carb "
"setting, .kit file setting, or python variable. - For instance, a key "
"value pair can be     /rtx/translucency/enabled: False # carb      "
"rtx.translucency.enabled: False # .kit      rtx_translucency_enabled: "
"False # python."
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid ":py:obj:`rendering_mode <isaaclab.sim.RenderCfg.rendering_mode>`\\"
msgstr ""

#: isaaclab.sim.RenderCfg.enable_translucency:1:<autosummary>:1 of
msgid "Sets the rendering mode."
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_translucency:1 of
msgid ""
"Enables translucency for specular transmissive surfaces such as glass at "
"the cost of some performance. Default is False."
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_translucency:3 of
msgid "Set variable: /rtx/translucency/enabled"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_reflections:1 of
msgid "Enables reflections at the cost of some performance. Default is False."
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_reflections:3 of
msgid "Set variable: /rtx/reflections/enabled"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_global_illumination:1 of
msgid ""
"Enables Diffused Global Illumination at the cost of some performance. "
"Default is False."
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_global_illumination:3 of
msgid "Set variable: /rtx/indirectDiffuse/enabled"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.antialiasing_mode:6 of
msgid ""
"DLSS: Boosts performance by using AI to output higher resolution frames "
"from a lower resolution input. DLSS samples multiple lower resolution "
"images and uses motion data and feedback from prior frames to reconstruct"
" native quality images."
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.antialiasing_mode:7 of
msgid ""
"DLAA: Provides higher image quality with an AI-based anti-aliasing "
"technique. DLAA uses the same Super Resolution technology developed for "
"DLSS, reconstructing a native resolution image to maximize image quality."
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.antialiasing_mode:9
#: isaaclab.sim.RenderCfg.dlss_mode:8 of
msgid "Set variable: /rtx/post/dlss/execMode"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_dlssg:6 of
msgid ""
"DLSS Frame Generation boosts performance by using AI to generate more "
"frames. DLSS analyzes sequential frames and motion data to create "
"additional high quality frames. This feature requires an Ada Lovelace "
"architecture GPU. Enabling this feature also enables additional thread-"
"related activities, which can hurt performance. Default is False."
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_dlssg:12 of
msgid "Set variable: /rtx-transient/dlssg/enabled"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_dl_denoiser:6 of
msgid ""
"The DL denoiser can help improve the quality of renders, but comes at a "
"cost of performance."
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_dl_denoiser:8 of
msgid "Set variable: /rtx-transient/dldenoiser/enabled"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.dlss_mode:6 of
msgid ""
"Valid values are 0 (Performance), 1 (Balanced), 2 (Quality), or 3 (Auto)."
" Default is 0."
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_direct_lighting:3 of
msgid "Set variable: /rtx/directLighting/enabled"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.samples_per_pixel:6 of
msgid ""
"Higher values increase the direct lighting quality at the cost of "
"performance. Default is 1."
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.samples_per_pixel:8 of
msgid "Set variable: /rtx/directLighting/sampledLighting/samplesPerPixel"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_shadows:1 of
msgid ""
"Enables shadows at the cost of performance. When disabled, lights will "
"not cast shadows. Defaults to True."
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_shadows:3 of
msgid "Set variable: /rtx/shadows/enabled"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_ambient_occlusion:1 of
msgid ""
"Enables ambient occlusion at the cost of some performance. Default is "
"False."
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.enable_ambient_occlusion:3 of
msgid "Set variable: /rtx/ambientOcclusion/enabled"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.carb_settings:1 of
msgid ""
"Provides a general dictionary for users to supply all carb rendering "
"settings with native names. - Name strings can be formatted like a carb "
"setting, .kit file setting, or python variable. - For instance, a key "
"value pair can be"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.carb_settings:5 of
msgid "/rtx/translucency/enabled: False # carb"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.carb_settings:5 of
msgid ""
"rtx.translucency.enabled: False # .kit rtx_translucency_enabled: False # "
"python"
msgstr ""

#: ../../docstring isaaclab.sim.RenderCfg.rendering_mode:1 of
msgid ""
"Sets the rendering mode. Behaves the same as the CLI arg '--"
"rendering_mode'"
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:56
msgid "Simulation Context Builder"
msgstr ""

#: isaaclab.sim.simulation_context.build_simulation_context:3 of
msgid ""
"This function facilitates the creation of a simulation context and "
"provides flexibility in configuring various aspects of the simulation, "
"such as time step, gravity, device, and scene elements like ground plane "
"and lighting."
msgstr ""

#: isaaclab.sim.simulation_context.build_simulation_context:7 of
msgid ""
"If :attr:`sim_cfg` is None, then an instance of :class:`SimulationCfg` is"
" created with default settings, with parameters overwritten based on "
"arguments to the function."
msgstr ""

#: isaaclab.sim.simulation_context.build_simulation_context:10 of
msgid "An example usage of the context manager function:"
msgstr ""

#: isaaclab.sim.simulation_context.build_simulation_context:22 of
msgid "Whether to create a new stage. Defaults to True."
msgstr ""

#: isaaclab.sim.simulation_context.build_simulation_context:23 of
msgid "Whether to enable gravity in the simulation. Defaults to True."
msgstr ""

#: isaaclab.sim.simulation_context.build_simulation_context:24 of
msgid "Device to run the simulation on. Defaults to \"cuda:0\"."
msgstr ""

#: isaaclab.sim.simulation_context.build_simulation_context:25 of
msgid "Time step for the simulation: Defaults to 0.01."
msgstr ""

#: isaaclab.sim.simulation_context.build_simulation_context:26 of
msgid ""
":class:`isaaclab.sim.SimulationCfg` to use for the simulation. Defaults "
"to None."
msgstr ""

#: isaaclab.sim.simulation_context.build_simulation_context:27 of
msgid "Whether to add a ground plane to the simulation. Defaults to False."
msgstr ""

#: isaaclab.sim.simulation_context.build_simulation_context:28 of
msgid "Whether to add a dome light to the simulation. Defaults to False."
msgstr ""

#: isaaclab.sim.simulation_context.build_simulation_context:29 of
msgid ""
"Whether to automatically add a dome light to the simulation if the "
"simulation has a GUI. Defaults to False. This is useful for debugging "
"tests in the GUI."
msgstr ""

#: isaaclab.sim.simulation_context.build_simulation_context of
msgid "Yields"
msgstr ""

#: isaaclab.sim.simulation_context.build_simulation_context:32 of
msgid "The simulation context to use for the simulation."
msgstr ""

#: ../../source/api/lab/isaaclab.sim.rst:61
msgid "Utilities"
msgstr ""

#: isaaclab.sim.utils:1 of
msgid "**Functions:**"
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
":py:obj:`safe_set_attribute_on_usd_schema "
"<isaaclab.sim.utils.safe_set_attribute_on_usd_schema>`\\ "
"\\(schema\\_api\\, ...\\)"
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid "Set the value of an attribute on its USD schema if it exists."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
":py:obj:`safe_set_attribute_on_usd_prim "
"<isaaclab.sim.utils.safe_set_attribute_on_usd_prim>`\\ \\(prim\\, ...\\)"
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_prim:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid "Set the value of a attribute on its USD prim."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ":py:obj:`apply_nested <isaaclab.sim.utils.apply_nested>`\\ \\(func\\)"
msgstr ""

#: isaaclab.sim.utils.apply_nested:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid "Decorator to apply a function to all prims under a specified prim-path."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ":py:obj:`clone <isaaclab.sim.utils.clone>`\\ \\(func\\)"
msgstr ""

#: isaaclab.sim.utils.clone:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
"Decorator for cloning a prim based on matching prim paths of the prim's "
"parent."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
":py:obj:`bind_visual_material "
"<isaaclab.sim.utils.bind_visual_material>`\\ \\(prim\\_path\\, "
"material\\_path\\)"
msgstr ""

#: isaaclab.sim.utils.bind_visual_material:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid "Bind a visual material to a prim."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
":py:obj:`bind_physics_material "
"<isaaclab.sim.utils.bind_physics_material>`\\ \\(prim\\_path\\, "
"material\\_path\\)"
msgstr ""

#: isaaclab.sim.utils.bind_physics_material:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid "Bind a physics material to a prim."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
":py:obj:`export_prim_to_file <isaaclab.sim.utils.export_prim_to_file>`\\ "
"\\(path\\, source\\_prim\\_path\\)"
msgstr ""

#: isaaclab.sim.utils.export_prim_to_file:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid "Exports a prim from a given stage to a USD file."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
":py:obj:`make_uninstanceable <isaaclab.sim.utils.make_uninstanceable>`\\ "
"\\(prim\\_path\\[\\, stage\\]\\)"
msgstr ""

#: isaaclab.sim.utils.make_uninstanceable:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
"Check if a prim and its descendants are instanced and make them "
"uninstanceable."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
":py:obj:`get_first_matching_child_prim "
"<isaaclab.sim.utils.get_first_matching_child_prim>`\\ \\(prim\\_path\\, "
"...\\)"
msgstr ""

#: isaaclab.sim.utils.get_first_matching_child_prim:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
"Recursively get the first USD Prim at the path string that passes the "
"predicate function"
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
":py:obj:`get_all_matching_child_prims "
"<isaaclab.sim.utils.get_all_matching_child_prims>`\\ \\(prim\\_path\\[\\,"
" ...\\]\\)"
msgstr ""

#: isaaclab.sim.utils.get_all_matching_child_prims:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
"Performs a search starting from the root and returns all the prims "
"matching the predicate."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
":py:obj:`find_first_matching_prim "
"<isaaclab.sim.utils.find_first_matching_prim>`\\ "
"\\(prim\\_path\\_regex\\[\\, ...\\]\\)"
msgstr ""

#: isaaclab.sim.utils.find_first_matching_prim:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid "Find the first matching prim in the stage based on input regex expression."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
":py:obj:`find_matching_prims <isaaclab.sim.utils.find_matching_prims>`\\ "
"\\(prim\\_path\\_regex\\[\\, stage\\]\\)"
msgstr ""

#: isaaclab.sim.utils.find_matching_prims:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid "Find all the matching prims in the stage based on input regex expression."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
":py:obj:`find_matching_prim_paths "
"<isaaclab.sim.utils.find_matching_prim_paths>`\\ "
"\\(prim\\_path\\_regex\\[\\, ...\\]\\)"
msgstr ""

#: isaaclab.sim.utils.find_matching_prim_paths:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
"Find all the matching prim paths in the stage based on input regex "
"expression."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
":py:obj:`find_global_fixed_joint_prim "
"<isaaclab.sim.utils.find_global_fixed_joint_prim>`\\ \\(prim\\_path\\[\\,"
" ...\\]\\)"
msgstr ""

#: isaaclab.sim.utils.find_global_fixed_joint_prim:1
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
"Find the fixed joint prim under the specified prim path that connects the"
" target to the simulation world."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1 of
msgid ""
":py:obj:`select_usd_variants <isaaclab.sim.utils.select_usd_variants>`\\ "
"\\(prim\\_path\\, variants\\[\\, stage\\]\\)"
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:1:<autosummary>:1
#: isaaclab.sim.utils.select_usd_variants:1 of
msgid "Sets the variant selections from the specified variant sets on a USD prim."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:3 of
msgid ""
"A USD API schema serves as an interface or API for authoring and "
"extracting a set of attributes. They typically derive from the "
":class:`pxr.Usd.SchemaBase` class. This function checks if the attribute "
"exists on the schema and sets the value of the attribute if it exists."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:7 of
msgid "The USD schema to set the attribute on."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_prim:8
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:8 of
msgid "The name of the attribute."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_prim:9
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:9 of
msgid "The value to set the attribute to."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_prim:10
#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:10 of
msgid "Whether to convert the attribute name to camel case."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_schema:12 of
msgid "When the input attribute name does not exist on the provided schema API."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_prim:3 of
msgid ""
"The function creates a new attribute if it does not exist on the prim. "
"This is because in some cases (such as with shaders), their attributes "
"are not exposed as USD prim properties that can be altered. This function"
" allows us to set the value of the attributes in these cases."
msgstr ""

#: isaaclab.sim.utils.safe_set_attribute_on_usd_prim:7 of
msgid "The USD prim to set the attribute on."
msgstr ""

#: isaaclab.sim.utils.apply_nested:3 of
msgid ""
"The function iterates over the provided prim path and all its children to"
" apply input function to all prims under the specified prim path."
msgstr ""

#: isaaclab.sim.utils.apply_nested:6 of
msgid ""
"If the function succeeds to apply to a prim, it will not look at the "
"children of that prim. This is based on the physics behavior that nested "
"schemas are not allowed. For example, a parent prim and its child prim "
"cannot both have a rigid-body schema applied on them, or it is not "
"possible to have nested articulations."
msgstr ""

#: isaaclab.sim.utils.apply_nested:11 of
msgid ""
"While traversing the prims under the specified prim path, the function "
"will throw a warning if it does not succeed to apply the function to any "
"prim. This is because the user may have intended to apply the function to"
" a prim that does not have valid attributes, or the prim may be an "
"instanced prim."
msgstr ""

#: isaaclab.sim.utils.apply_nested:15 of
msgid ""
"The function to apply to all prims under a specified prim-path. The "
"function must take the prim-path and other arguments. It should return a "
"boolean indicating whether the function succeeded or not."
msgstr ""

#: isaaclab.sim.utils.apply_nested:19 of
msgid ""
"The wrapped function that applies the function to all prims under a "
"specified prim-path."
msgstr ""

#: isaaclab.sim.utils.apply_nested:21 of
msgid "If the prim-path does not exist on the stage."
msgstr ""

#: isaaclab.sim.utils.clone:3 of
msgid ""
"The decorator checks if the parent prim path matches any prim paths in "
"the stage. If so, it clones the spawned prim at each matching prim path. "
"For example, if the input prim path is: ``/World/Table_[0-9]/Bottle``, "
"the decorator will clone the prim at each matching prim path of the "
"parent prim: ``/World/Table_0/Bottle``, ``/World/Table_1/Bottle``, etc."
msgstr ""

#: isaaclab.sim.utils.clone:10 of
msgid ""
"For matching prim paths, the decorator assumes that valid prims exist for"
" all matching prim paths. In case no matching prim paths are found, the "
"decorator raises a ``RuntimeError``."
msgstr ""

#: isaaclab.sim.utils.clone:13 of
msgid "The function to decorate."
msgstr ""

#: isaaclab.sim.utils.clone:15 of
msgid ""
"The decorated function that spawns the prim and clones it at each "
"matching prim path. It returns the spawned source prim, i.e., the first "
"prim in the list of matching prim paths."
msgstr ""

#: isaaclab.sim.utils.bind_visual_material:3 of
msgid "This function is a wrapper around the USD command `BindMaterialCommand`_."
msgstr ""

#: isaaclab.sim.utils.bind_physics_material:8
#: isaaclab.sim.utils.bind_visual_material:6 of
msgid ""
"The function is decorated with :meth:`apply_nested` to allow applying the"
" function to a prim path and all its descendants."
msgstr ""

#: isaaclab.sim.utils.bind_physics_material:13
#: isaaclab.sim.utils.bind_visual_material:11 of
msgid "The prim path where to apply the material."
msgstr ""

#: isaaclab.sim.utils.bind_physics_material:14
#: isaaclab.sim.utils.bind_visual_material:12 of
msgid "The prim path of the material to apply."
msgstr ""

#: isaaclab.sim.utils.bind_physics_material:15
#: isaaclab.sim.utils.bind_visual_material:13 of
msgid ""
"The stage where the prim and material exist. Defaults to None, in which "
"case the current stage is used."
msgstr ""

#: isaaclab.sim.utils.bind_physics_material:17
#: isaaclab.sim.utils.bind_visual_material:15 of
msgid ""
"Whether the material should override the material of its descendants. "
"Defaults to True."
msgstr ""

#: isaaclab.sim.utils.bind_physics_material:20
#: isaaclab.sim.utils.bind_visual_material:18 of
msgid "If the provided prim paths do not exist on stage."
msgstr ""

#: isaaclab.sim.utils.bind_physics_material:3 of
msgid ""
"`Physics material`_ can be applied only to a prim with physics-enabled on"
" them. This includes having collision APIs, or deformable body APIs, or "
"being a particle system. In case the prim does not have any of these "
"APIs, the function will not apply the material and return False."
msgstr ""

#: isaaclab.sim.utils.export_prim_to_file:3 of
msgid ""
"The function creates a new layer at the provided path and copies the prim"
" to the layer. It sets the copied prim as the default prim in the target "
"layer. Additionally, it updates the stage up-axis and meters-per-unit to "
"match the current stage."
msgstr ""

#: isaaclab.sim.utils.export_prim_to_file:7 of
msgid "The filepath path to export the prim to."
msgstr ""

#: isaaclab.sim.utils.export_prim_to_file:8 of
msgid "The prim path to export."
msgstr ""

#: isaaclab.sim.utils.export_prim_to_file:9 of
msgid ""
"The prim path to set as the default prim in the target layer. Defaults to"
" None, in which case the source prim path is used."
msgstr ""

#: isaaclab.sim.utils.export_prim_to_file:11
#: isaaclab.sim.utils.find_first_matching_prim:4
#: isaaclab.sim.utils.find_global_fixed_joint_prim:13
#: isaaclab.sim.utils.find_matching_prim_paths:4
#: isaaclab.sim.utils.find_matching_prims:4
#: isaaclab.sim.utils.get_all_matching_child_prims:8
#: isaaclab.sim.utils.get_first_matching_child_prim:5
#: isaaclab.sim.utils.make_uninstanceable:10 of
msgid ""
"The stage where the prim exists. Defaults to None, in which case the "
"current stage is used."
msgstr ""

#: isaaclab.sim.utils.export_prim_to_file:14 of
msgid "If the prim paths are not global (i.e: do not start with '/')."
msgstr ""

#: isaaclab.sim.utils.make_uninstanceable:3 of
msgid ""
"This function checks if the prim at the specified prim path and its "
"descendants are instanced. If so, it makes the respective prim "
"uninstanceable by disabling instancing on the prim."
msgstr ""

#: isaaclab.sim.utils.make_uninstanceable:6 of
msgid ""
"This is useful when we want to modify the properties of a prim that is "
"instanced. For example, if we want to apply a different material on an "
"instanced prim, we need to make the prim uninstanceable first."
msgstr ""

#: isaaclab.sim.utils.make_uninstanceable:9 of
msgid "The prim path to check."
msgstr ""

#: isaaclab.sim.utils.find_first_matching_prim:8
#: isaaclab.sim.utils.find_global_fixed_joint_prim:17
#: isaaclab.sim.utils.find_matching_prim_paths:8
#: isaaclab.sim.utils.find_matching_prims:8
#: isaaclab.sim.utils.get_all_matching_child_prims:12
#: isaaclab.sim.utils.get_first_matching_child_prim:9
#: isaaclab.sim.utils.make_uninstanceable:12 of
msgid "If the prim path is not global (i.e: does not start with '/')."
msgstr ""

#: isaaclab.sim.utils.get_first_matching_child_prim:3 of
msgid "The path of the prim in the stage."
msgstr ""

#: isaaclab.sim.utils.get_first_matching_child_prim:4 of
msgid ""
"The function to test the prims against. It takes a prim as input and "
"returns a boolean."
msgstr ""

#: isaaclab.sim.utils.get_first_matching_child_prim:7 of
msgid ""
"The first prim on the path that passes the predicate. If no prim passes "
"the predicate, it returns None."
msgstr ""

#: isaaclab.sim.utils.get_all_matching_child_prims:3 of
msgid "The root prim path to start the search from."
msgstr ""

#: isaaclab.sim.utils.get_all_matching_child_prims:4 of
msgid ""
"The predicate that checks if the prim matches the desired criteria. It "
"takes a prim as input and returns a boolean. Defaults to a function that "
"always returns True."
msgstr ""

#: isaaclab.sim.utils.get_all_matching_child_prims:6 of
msgid ""
"The maximum depth for traversal, should be bigger than zero if specified."
" Defaults to None (i.e: traversal happens till the end of the tree)."
msgstr ""

#: isaaclab.sim.utils.get_all_matching_child_prims:10 of
msgid "A list containing all the prims matching the predicate."
msgstr ""

#: isaaclab.sim.utils.find_first_matching_prim:3
#: isaaclab.sim.utils.find_matching_prim_paths:3
#: isaaclab.sim.utils.find_matching_prims:3 of
msgid "The regex expression for prim path."
msgstr ""

#: isaaclab.sim.utils.find_first_matching_prim:6 of
msgid ""
"The first prim that matches input expression. If no prim matches, returns"
" None."
msgstr ""

#: isaaclab.sim.utils.find_matching_prims:6 of
msgid "A list of prims that match input expression."
msgstr ""

#: isaaclab.sim.utils.find_matching_prim_paths:6 of
msgid "A list of prim paths that match input expression."
msgstr ""

#: isaaclab.sim.utils.find_global_fixed_joint_prim:3 of
msgid ""
"A joint is a connection between two bodies. A fixed joint is a joint that"
" does not allow relative motion between the two bodies. When a fixed "
"joint has only one target body, it is considered to attach the body to "
"the simulation world."
msgstr ""

#: isaaclab.sim.utils.find_global_fixed_joint_prim:7 of
msgid ""
"This function finds the fixed joint prim that has only one target under "
"the specified prim path. If no such fixed joint prim exists, it returns "
"None."
msgstr ""

#: isaaclab.sim.utils.find_global_fixed_joint_prim:10 of
msgid "The prim path to search for the fixed joint prim."
msgstr ""

#: isaaclab.sim.utils.find_global_fixed_joint_prim:11 of
msgid ""
"Whether to consider only enabled fixed joints. Defaults to False. If "
"False, then all joints (enabled or disabled) are considered."
msgstr ""

#: isaaclab.sim.utils.find_global_fixed_joint_prim:15 of
msgid ""
"The fixed joint prim that has only one target. If no such fixed joint "
"prim exists, it returns None."
msgstr ""

#: isaaclab.sim.utils.find_global_fixed_joint_prim:18 of
msgid "If the prim path does not exist on the stage."
msgstr ""

#: isaaclab.sim.utils.select_usd_variants:3 of
msgid ""
"`USD Variants`_ are a very powerful tool in USD composition that allows "
"prims to have different options on a single asset. This can be done by "
"modifying variations of the same prim parameters per variant option in a "
"set. This function acts as a script-based utility to set the variant "
"selections for the specified variant sets on a USD prim."
msgstr ""

#: isaaclab.sim.utils.select_usd_variants:8 of
msgid ""
"The function takes a dictionary or a config class mapping variant set "
"names to variant selections. For instance, if we have a prim at "
"``\"/World/Table\"`` with two variant sets: \"color\" and \"size\", we "
"can set the variant selections as follows:"
msgstr ""

#: isaaclab.sim.utils.select_usd_variants:22 of
msgid "Alternatively, we can use a config class to define the variant selections:"
msgstr ""

#: isaaclab.sim.utils.select_usd_variants:36 of
msgid "The path of the USD prim."
msgstr ""

#: isaaclab.sim.utils.select_usd_variants:37 of
msgid ""
"A dictionary or config class mapping variant set names to variant "
"selections."
msgstr ""

#: isaaclab.sim.utils.select_usd_variants:38 of
msgid "The USD stage. Defaults to None, in which case, the current stage is used."
msgstr ""

#: isaaclab.sim.utils.select_usd_variants:40 of
msgid "If the prim at the specified path is not valid."
msgstr ""

