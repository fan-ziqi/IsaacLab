# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 11:21+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/api/lab/isaaclab.app.rst:2
msgid "isaaclab.app"
msgstr ""

#: isaaclab.app:1 of
msgid "Sub-package containing app-specific functionalities."
msgstr ""

#: isaaclab.app:3 of
msgid "These include:"
msgstr ""

#: isaaclab.app:5 of
msgid "Ability to launch the simulation app with different configurations"
msgstr ""

#: isaaclab.app:6 of
msgid "Run tests with the simulation app"
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:7
msgid "Classes"
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:10:<autosummary>:1
msgid ":py:obj:`AppLauncher <isaaclab.app.AppLauncher>`\\"
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:10:<autosummary>:1
#: isaaclab.app.app_launcher.AppLauncher:1 of
msgid ""
"A utility class to launch Isaac Sim application based on command-line "
"arguments and environment variables."
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:14
msgid "Environment variables"
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:16
msgid ""
"The following details the behavior of the class based on the environment "
"variables:"
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:18
#, python-brace-format
msgid ""
"**Headless mode**: If the environment variable ``HEADLESS=1``, then "
"SimulationApp will be started in headless mode. If ``LIVESTREAM={1,2}``, "
"then it will supersede the ``HEADLESS`` envvar and force headlessness."
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:21
msgid "``HEADLESS=1`` causes the app to run in headless mode."
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:23
#, python-brace-format
msgid ""
"**Livestreaming**: If the environment variable ``LIVESTREAM={1,2}`` , "
"then `livestream`_ is enabled. Any of the livestream modes being true "
"forces the app to run in headless mode."
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:26
msgid ""
"``LIVESTREAM=1`` [DEPRECATED] enables streaming via the Isaac `Native "
"Livestream`_ extension. This allows users to connect through the "
"Omniverse Streaming Client. This method is deprecated from Isaac Sim 4.5."
" Please use the WebRTC livestreaming instead."
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:29
msgid ""
"``LIVESTREAM=2`` enables streaming via the `WebRTC Livestream`_ "
"extension. This allows users to connect through the WebRTC Client using "
"the WebRTC protocol."
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:34
msgid ""
"Each Isaac Sim instance can only connect to one streaming client. "
"Connecting to an Isaac Sim instance that is currently serving a streaming"
" client results in an error for the second user."
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:38
#, python-brace-format
msgid ""
"**Public IP Address**: When using the environment variable "
"``LIVESTREAM={1,2}``, set the ``PUBLIC_IP`` envvar to define the public "
"IP address endpoint for livestreaming remotely."
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:40
msgid ""
"**Enable cameras**: If the environment variable ``ENABLE_CAMERAS`` is set"
" to 1, then the cameras are enabled. This is useful for running the "
"simulator without a GUI but still rendering the viewport and camera "
"images."
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:44
msgid ""
"``ENABLE_CAMERAS=1``: Enables the offscreen-render pipeline which allows "
"users to render the scene without launching a GUI."
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:49
msgid ""
"The off-screen rendering pipeline only works when used in conjunction "
"with the :class:`isaaclab.sim.SimulationContext` class. This is because "
"the off-screen rendering pipeline enables flags that are internally used "
"by the SimulationContext class."
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:54
msgid ""
"To set the environment variables, one can use the following command in "
"the terminal:"
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:63
msgid ""
"Alternatively, one can set the environment variables to the python script"
" directly:"
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:71
msgid "Overriding the environment variables"
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:73
msgid ""
"The environment variables can be overridden in the python script itself "
"using the :class:`AppLauncher`. These can be passed as a dictionary, a "
":class:`argparse.Namespace` object or as keyword arguments. When the "
"passed arguments are not the default values, then they override the "
"environment variables."
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:77
msgid ""
"The following snippet shows how use the :class:`AppLauncher` in different"
" ways:"
msgstr ""

#: ../../source/api/lab/isaaclab.app.rst:109
msgid "Simulation App Launcher"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher:3 of
msgid ""
"The class resolves the simulation app settings that appear through "
"environments variables, command-line arguments (CLI) or as input keyword "
"arguments. Based on these settings, it launches the simulation app and "
"configures the extensions to load (as a part of post-launch setup)."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher:7 of
msgid ""
"The input arguments provided to the class are given higher priority than "
"the values set from the corresponding environment variables. This "
"provides flexibility to deal with different users' preferences."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher:12 of
msgid ""
"Explicitly defined arguments are only given priority when their value is "
"set to something outside their default configuration. For example, the "
"``livestream`` argument is -1 by default. It only overrides the "
"``LIVESTREAM`` environment variable when ``livestream`` argument is set "
"to a value >-1. In other words, if ``livestream=-1``, then the value from"
" the environment variable ``LIVESTREAM`` is used."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher:1 of
msgid "**Methods:**"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher:1:<autosummary>:1 of
msgid ""
":py:obj:`__init__ <isaaclab.app.AppLauncher.__init__>`\\ "
"\\(\\[launcher\\_args\\]\\)"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.__init__:1
#: isaaclab.app.app_launcher.AppLauncher:1:<autosummary>:1 of
msgid "Create a `SimulationApp`_ instance based on the input settings."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher:1:<autosummary>:1 of
msgid ""
":py:obj:`add_app_launcher_args "
"<isaaclab.app.AppLauncher.add_app_launcher_args>`\\ \\(parser\\)"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:1
#: isaaclab.app.app_launcher.AppLauncher:1:<autosummary>:1 of
msgid ""
"Utility function to configure AppLauncher arguments with an existing "
"argument parser object."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher:1 of
msgid "**Attributes:**"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.__init__:1:<autosummary>:1 of
msgid ":py:obj:`app <isaaclab.app.AppLauncher.app>`\\"
msgstr ""

#: isaaclab.app.AppLauncher.app:1
#: isaaclab.app.app_launcher.AppLauncher.__init__:1:<autosummary>:1 of
msgid "The launched SimulationApp."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.__init__
#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args of
msgid "参数"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.__init__:3 of
msgid ""
"Input arguments to parse using the AppLauncher and set into the "
"SimulationApp. Defaults to None, which is equivalent to passing an empty "
"dictionary. A detailed description of the possible arguments is available"
" in the `SimulationApp`_ documentation."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.__init__:6 of
msgid ""
"Additional keyword arguments that will be merged into "
":attr:`launcher_args`. They serve as a convenience for those who want to "
"pass some arguments using the argparse interface and others directly into"
" the AppLauncher. Duplicated arguments with the :attr:`launcher_args` "
"will raise a ValueError."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.__init__ of
msgid "抛出"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.__init__:11 of
msgid ""
"If there are common/duplicated arguments between ``launcher_args`` and "
"``kwargs``."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.__init__:12 of
msgid ""
"If combination of ``launcher_args`` and ``kwargs`` are missing the "
"necessary arguments     that are needed by the AppLauncher to resolve the"
" desired app configuration."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.__init__:13 of
msgid ""
"If incompatible or undefined values are assigned to relevant environment "
"values,     such as ``LIVESTREAM``."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:3 of
msgid ""
"This function takes an ``argparse.ArgumentParser`` object and does some "
"sanity checking on the existing arguments for ingestion by the "
"SimulationApp. It then appends custom command-line arguments relevant to "
"the SimulationApp to the input :class:`argparse.ArgumentParser` instance."
" This allows overriding the environment variables using command-line "
"arguments."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:8 of
msgid "Currently, it adds the following parameters to the argparser object:"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:10 of
msgid ""
"``headless`` (bool): If True, the app will be launched in headless (no-"
"gui) mode. The values map the same as that for the ``HEADLESS`` "
"environment variable. If False, then headless mode is determined by the "
"``HEADLESS`` environment variable."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:13 of
#, python-brace-format
msgid ""
"``livestream`` (int): If one of {1, 2}, then livestreaming and headless "
"mode is enabled. The values map the same as that for the ``LIVESTREAM`` "
"environment variable. If :obj:`-1`, then livestreaming is determined by "
"the ``LIVESTREAM`` environment variable. Valid options are:"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:18 of
msgid "``0``: Disabled"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:19 of
msgid ""
"``1``: `Native [DEPRECATED] "
"<https://docs.isaacsim.omniverse.nvidia.com/latest/installation/manual_livestream_clients.html"
"#omniverse-streaming-client-deprecated>`_"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:20 of
msgid ""
"``2``: `WebRTC "
"<https://docs.isaacsim.omniverse.nvidia.com/latest/installation/manual_livestream_clients.html"
"#isaac-sim-short-webrtc-streaming-client>`_"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:22 of
msgid ""
"``enable_cameras`` (bool): If True, the app will enable camera sensors "
"and render them, even when in headless mode. This flag must be set to "
"True if the environments contains any camera sensors. The values map the "
"same as that for the ``ENABLE_CAMERAS`` environment variable. If False, "
"then enable_cameras mode is determined by the ``ENABLE_CAMERAS`` "
"environment variable."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:26 of
msgid "``device`` (str): The device to run the simulation on. Valid options are:"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:29 of
msgid "``cpu``: Use CPU."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:30 of
msgid "``cuda``: Use GPU with device ID ``0``."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:31 of
msgid "``cuda:N``: Use GPU, where N is the device ID. For example, \"cuda:0\"."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:33 of
msgid ""
"``experience`` (str): The experience file to load when launching the "
"SimulationApp. If a relative path is provided, it is resolved relative to"
" the ``apps`` folder in Isaac Sim and Isaac Lab (in that order)."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:36 of
msgid ""
"If provided as an empty string, the experience file is determined based "
"on the command-line flags:"
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:38 of
msgid ""
"If headless and enable_cameras are True, the experience file is set to "
"``isaaclab.python.headless.rendering.kit``."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:39 of
msgid ""
"If headless is False and enable_cameras is True, the experience file is "
"set to ``isaaclab.python.rendering.kit``."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:40 of
msgid ""
"If headless and enable_cameras are False, the experience file is set to "
"``isaaclab.python.kit``."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:41 of
msgid ""
"If headless is True and enable_cameras is False, the experience file is "
"set to ``isaaclab.python.headless.kit``."
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:43 of
msgid ""
"``kit_args`` (str): Optional command line arguments to be passed to "
"Omniverse Kit directly. Arguments should be combined into a single string"
" separated by space. Example usage: --kit_args \"--ext-"
"folder=/path/to/ext1 --ext-folder=/path/to/ext2\""
msgstr ""

#: isaaclab.app.app_launcher.AppLauncher.add_app_launcher_args:47 of
msgid ""
"An argument parser instance to be extended with the AppLauncher specific "
"options."
msgstr ""


