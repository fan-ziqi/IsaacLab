# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-21 15:29+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/api/lab/omni.isaac.lab.controllers.rst:2
msgid "omni.isaac.lab.controllers"
msgstr ""

#: of omni.isaac.lab.controllers:1
msgid "Sub-package for different controllers and motion-generators."
msgstr ""

#: of omni.isaac.lab.controllers:3
msgid ""
"Controllers or motion generators are responsible for closed-loop tracking"
" of a given command. The controller can be a simple PID controller or a "
"more complex controller such as impedance control or inverse kinematics "
"control. The controller is responsible for generating the desired joint-"
"level commands to be sent to the robot."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.controllers.rst:7
msgid "Classes"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.controllers.rst:13:<autosummary>:1
msgid ""
":py:obj:`DifferentialIKController "
"<omni.isaac.lab.controllers.DifferentialIKController>`\\"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.controllers.rst:13:<autosummary>:1 of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController:1
msgid "Differential inverse kinematics (IK) controller."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.controllers.rst:13:<autosummary>:1
msgid ""
":py:obj:`DifferentialIKControllerCfg "
"<omni.isaac.lab.controllers.DifferentialIKControllerCfg>`\\"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.controllers.rst:13:<autosummary>:1 of
#: omni.isaac.lab.controllers.differential_ik_cfg.DifferentialIKControllerCfg:1
msgid "Configuration for differential inverse kinematics controller."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.controllers.rst:13:<autosummary>:1
msgid ""
":py:obj:`OperationalSpaceController "
"<omni.isaac.lab.controllers.OperationalSpaceController>`\\"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.controllers.rst:13:<autosummary>:1 of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:1
msgid "Operational-space controller."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.controllers.rst:13:<autosummary>:1
msgid ""
":py:obj:`OperationalSpaceControllerCfg "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg>`\\"
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.controllers.rst:13:<autosummary>:1 of
#: omni.isaac.lab.controllers.operational_space_cfg.OperationalSpaceControllerCfg:1
msgid "Configuration for operational-space controller."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.controllers.rst:16
msgid "Differential Inverse Kinematics"
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:1
#: omni.isaac.lab.controllers.differential_ik_cfg.DifferentialIKControllerCfg:1
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:1
#: omni.isaac.lab.controllers.operational_space_cfg.OperationalSpaceControllerCfg:1
msgid "基类：:py:class:`object`"
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:3
msgid ""
"This controller is based on the concept of differential inverse "
"kinematics [1, 2] which is a method for computing the change in joint "
"positions that yields the desired change in pose."
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:6
msgid ""
"\\Delta \\mathbf{q} &= \\mathbf{J}^{\\dagger} \\Delta \\mathbf{x} \\\\\n"
"\\mathbf{q}_{\\text{desired}} &= \\mathbf{q}_{\\text{current}} + \\Delta "
"\\mathbf{q}"
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:11
msgid ""
"where :math:`\\mathbf{J}^{\\dagger}` is the pseudo-inverse of the "
"Jacobian matrix :math:`\\mathbf{J}`, :math:`\\Delta \\mathbf{x}` is the "
"desired change in pose, and :math:`\\mathbf{q}_{\\text{current}}` is the "
"current joint positions."
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:15
msgid ""
"To deal with singularity in Jacobian, the following methods are supported"
" for computing inverse of the Jacobian:"
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:17
msgid "\"pinv\": Moore-Penrose pseudo-inverse"
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:18
msgid "\"svd\": Adaptive singular-value decomposition (SVD)"
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:19
msgid "\"trans\": Transpose of matrix"
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:20
msgid ""
"\"dls\": Damped version of Moore-Penrose pseudo-inverse (also called "
"Levenberg-Marquardt)"
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:24
msgid ""
"The controller does not assume anything about the frames of the current "
"and desired end-effector pose, or the joint-space velocities. It is up to"
" the user to ensure that these quantities are given in the correct "
"format."
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:28
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:3
msgid "Reference:"
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:30
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:7
msgid ""
"`Robot Dynamics Lecture Notes <https://ethz.ch/content/dam/ethz/special-"
"interest/mavt/robotics-n-intelligent-systems/rsl-"
"dam/documents/RobotDynamics2017/RD_HS2017script.pdf>`_ by Marco Hutter "
"(ETH Zurich)"
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:32
msgid ""
"`Introduction to Inverse Kinematics "
"<https://www.cs.cmu.edu/~15464-s13/lectures/lecture6/iksurvey.pdf>`_ by "
"Samuel R. Buss (University of California, San Diego)"
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:1
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:1
msgid "**Methods:**"
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController:1:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<omni.isaac.lab.controllers.DifferentialIKController.__init__>`\\ "
"\\(cfg\\, num\\_envs\\, device\\)"
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.__init__:1
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController:1:<autosummary>:1
msgid "Initialize the controller."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController:1:<autosummary>:1
msgid ""
":py:obj:`reset "
"<omni.isaac.lab.controllers.DifferentialIKController.reset>`\\ "
"\\(\\[env\\_ids\\]\\)"
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.reset:1
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController:1:<autosummary>:1
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.reset:1
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:1:<autosummary>:1
msgid "Reset the internals."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController:1:<autosummary>:1
msgid ""
":py:obj:`set_command "
"<omni.isaac.lab.controllers.DifferentialIKController.set_command>`\\ "
"\\(command\\[\\, ee\\_pos\\, ee\\_quat\\]\\)"
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.set_command:1
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController:1:<autosummary>:1
msgid "Set target end-effector pose command."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController:1:<autosummary>:1
msgid ""
":py:obj:`compute "
"<omni.isaac.lab.controllers.DifferentialIKController.compute>`\\ "
"\\(ee\\_pos\\, ee\\_quat\\, jacobian\\, joint\\_pos\\)"
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.compute:1
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController:1:<autosummary>:1
msgid ""
"Computes the target joint positions that will yield the desired end "
"effector pose."
msgstr ""

#: of omni.isaac.lab.controllers.differential_ik.DifferentialIKController:1
#: omni.isaac.lab.controllers.differential_ik_cfg.DifferentialIKControllerCfg:1
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:1
#: omni.isaac.lab.controllers.operational_space_cfg.OperationalSpaceControllerCfg:1
msgid "**Attributes:**"
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.__init__:1:<autosummary>:1
msgid ""
":py:obj:`action_dim "
"<omni.isaac.lab.controllers.DifferentialIKController.action_dim>`\\"
msgstr ""

#: of omni.isaac.lab.controllers.DifferentialIKController.action_dim:1
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.__init__:1:<autosummary>:1
msgid "Dimension of the controller's input command."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.__init__
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.compute
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.reset
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.set_command
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.__init__
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command
msgid "参数"
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.__init__:3
msgid "The configuration for the controller."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.__init__:4
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.__init__:4
msgid "The number of environments."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.__init__:5
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.__init__:5
msgid "The device to use for computations."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.reset:3
msgid ""
"The environment indices to reset. If None, then all environments are "
"reset."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.set_command:3
msgid ""
"Based on the configured command type and relative mode, the method "
"computes the desired end-effector pose. It is up to the user to ensure "
"that the command is given in the correct frame. The method only applies "
"the relative mode if the command type is ``position_rel`` or "
"``pose_rel``."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.set_command:7
msgid "The input command in shape (N, 3) or (N, 6) or (N, 7)."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.set_command:8
msgid ""
"The current end-effector position in shape (N, 3). This is only needed if"
" the command type is ``position_rel`` or ``pose_rel``."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.set_command:10
msgid ""
"The current end-effector orientation (w, x, y, z) in shape (N, 4). This "
"is only needed if the command type is ``position_*`` or ``pose_rel``."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.set_command
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.__init__
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command
msgid "抛出"
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.set_command:13
msgid "If the command type is ``position_*`` and :attr:`ee_quat` is None."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.set_command:14
msgid "If the command type is ``position_rel`` and :attr:`ee_pos` is None."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.set_command:15
msgid ""
"If the command type is ``pose_rel`` and either :attr:`ee_pos` or "
":attr:`ee_quat` is None."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.compute:3
msgid "The current end-effector position in shape (N, 3)."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.compute:4
msgid "The current end-effector orientation in shape (N, 4)."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.compute:5
msgid "The geometric jacobian matrix in shape (N, 6, num_joints)."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.compute:6
msgid "The current joint positions in shape (N, num_joints)."
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.compute
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute
msgid "返回"
msgstr ""

#: of
#: omni.isaac.lab.controllers.differential_ik.DifferentialIKController.compute:8
msgid "The target joint positions commands in shape (N, num_joints)."
msgstr ""

#: of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.command_type:1:<autosummary>:1
msgid ""
":py:obj:`command_type "
"<omni.isaac.lab.controllers.DifferentialIKControllerCfg.command_type>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.command_type:1
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.command_type:1:<autosummary>:1
msgid "Type of task-space command to control the articulation's body."
msgstr ""

#: of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.command_type:1:<autosummary>:1
msgid ""
":py:obj:`use_relative_mode "
"<omni.isaac.lab.controllers.DifferentialIKControllerCfg.use_relative_mode>`\\"
msgstr ""

#: of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.command_type:1:<autosummary>:1
msgid "Whether to use relative mode for the controller."
msgstr ""

#: of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.command_type:1:<autosummary>:1
msgid ""
":py:obj:`ik_method "
"<omni.isaac.lab.controllers.DifferentialIKControllerCfg.ik_method>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.command_type:1:<autosummary>:1
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.ik_method:1
msgid "Method for computing inverse of Jacobian."
msgstr ""

#: of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.command_type:1:<autosummary>:1
msgid ""
":py:obj:`ik_params "
"<omni.isaac.lab.controllers.DifferentialIKControllerCfg.ik_params>`\\"
msgstr ""

#: of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.command_type:1:<autosummary>:1
msgid "Parameters for the inverse-kinematics method."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.command_type:3
msgid ""
"If \"position\", then the controller only controls the position of the "
"articulation's body. Otherwise, the controller controls the pose of the "
"articulation's body."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.use_relative_mode:1
msgid "Whether to use relative mode for the controller. Defaults to False."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.use_relative_mode:3
msgid ""
"If True, then the controller treats the input command as a delta change "
"in the position/pose. Otherwise, the controller treats the input command "
"as the absolute position/pose."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.ik_params:1
msgid ""
"Parameters for the inverse-kinematics method. Defaults to None, in which "
"case the default parameters for the method are used."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.ik_params:4
msgid "Moore-Penrose pseudo-inverse (\"pinv\"):"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.ik_params:5
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.ik_params:7
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.ik_params:10
msgid "\"k_val\": Scaling of computed delta-joint positions (default: 1.0)."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.ik_params:7
msgid "Adaptive Singular Value Decomposition (\"svd\"):"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.ik_params:8
msgid ""
"\"min_singular_value\": Single values less than this are suppressed to "
"zero (default: 1e-5)."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.ik_params:9
msgid "Jacobian transpose (\"trans\"):"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.ik_params:11
msgid "Damped Moore-Penrose pseudo-inverse (\"dls\"):"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.DifferentialIKControllerCfg.ik_params:12
msgid "\"lambda_val\": Damping coefficient (default: 0.01)."
msgstr ""

#: ../../source/api/lab/omni.isaac.lab.controllers.rst:30
msgid "Operational Space controllers"
msgstr ""

#: of omni.isaac.lab.controllers.operational_space.OperationalSpaceController:5
msgid ""
"`A unified approach for motion and force control of robot manipulators: "
"The operational space formulation "
"<http://dx.doi.org/10.1109/JRA.1987.1087068>`_ by Oussama Khatib "
"(Stanford University)"
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:1:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<omni.isaac.lab.controllers.OperationalSpaceController.__init__>`\\ "
"\\(cfg\\, num\\_envs\\, device\\)"
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.__init__:1
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:1:<autosummary>:1
msgid "Initialize operational-space controller."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:1:<autosummary>:1
msgid ""
":py:obj:`reset "
"<omni.isaac.lab.controllers.OperationalSpaceController.reset>`\\ \\(\\)"
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:1:<autosummary>:1
msgid ""
":py:obj:`set_command "
"<omni.isaac.lab.controllers.OperationalSpaceController.set_command>`\\ "
"\\(command\\[\\, current\\_ee\\_pose\\_b\\, ...\\]\\)"
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command:1
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:1:<autosummary>:1
msgid "Set the task-space targets and impedance parameters."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:1:<autosummary>:1
msgid ""
":py:obj:`compute "
"<omni.isaac.lab.controllers.OperationalSpaceController.compute>`\\ "
"\\(jacobian\\_b\\[\\, current\\_ee\\_pose\\_b\\, ...\\]\\)"
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:1
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController:1:<autosummary>:1
msgid "Performs inference with the controller."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.__init__:1:<autosummary>:1
msgid ""
":py:obj:`action_dim "
"<omni.isaac.lab.controllers.OperationalSpaceController.action_dim>`\\"
msgstr ""

#: of omni.isaac.lab.controllers.OperationalSpaceController.action_dim:1
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.__init__:1:<autosummary>:1
msgid "Dimension of the action space of controller."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.__init__:3
msgid "The configuration for operational-space controller."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.__init__:7
msgid "When invalid control command is provided."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command:3
msgid ""
"A concatenated tensor of shape (``num_envs``, ``action_dim``) containing "
"task-space targets (i.e., pose/wrench) and impedance parameters."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command:6
msgid ""
"Current end-effector pose, in root frame, of shape (``num_envs``, 7), "
"containing position and quaternion ``(w, x, y, z)``. Required for "
"relative commands. Defaults to None."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command:10
msgid ""
"Current pose of the task frame, in root frame, in which the targets and "
"the (motion/wrench) control axes are defined. It is a tensor of shape "
"(``num_envs``, 7), containing position and the quaternion ``(w, x, y, "
"z)``. Defaults to None."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command:25
msgid "Format:"
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command:15
msgid "Task-space targets, ordered according to 'command_types':"
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command:17
msgid ""
"Absolute pose: shape (``num_envs``, 7), containing position and "
"quaternion ``(w, x, y, z)``. Relative pose: shape (``num_envs``, 6), "
"containing delta position and rotation in axis-angle form. Absolute "
"wrench: shape (``num_envs``, 6), containing force and torque."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command:21
msgid ""
"Impedance parameters: stiffness for ``variable_kp``, or stiffness, "
"followed by damping ratio for ``variable``:"
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command:24
msgid "Stiffness: shape (``num_envs``, 6) Damping ratio: shape (``num_envs``, 6)"
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command:27
msgid "When the command dimensions are invalid."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command:28
msgid "When an invalid impedance mode is provided."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:24
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command:29
msgid ""
"When the current end-effector pose is not provided for the ``pose_rel`` "
"command."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.set_command:30
msgid "When an invalid control command is provided."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:3
msgid ""
"The Jacobian matrix of the end-effector in root frame. It is a tensor of "
"shape (``num_envs``, 6, ``num_DoF``)."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:5
msgid ""
"The current end-effector pose in root frame. It is a tensor of shape "
"(``num_envs``, 7), which contains the position and quaternion ``(w, x, y,"
" z)``. Defaults to ``None``."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:7
msgid ""
"The current end-effector velocity in root frame. It is a tensor of shape "
"(``num_envs``, 6), which contains the linear and angular velocities. "
"Defaults to None."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:9
msgid ""
"The current external force on the end-effector in root frame. It is a "
"tensor of shape (``num_envs``, 3), which contains the linear force. "
"Defaults to ``None``."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:11
msgid ""
"The joint-space mass/inertia matrix. It is a tensor of shape "
"(``num_envs``, ``num_DoF``, ``num_DoF``). Defaults to ``None``."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:13
msgid ""
"The joint-space gravity vector. It is a tensor of shape (``num_envs``, "
"``num_DoF``). Defaults to ``None``."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:15
msgid ""
"The current joint positions. It is a tensor of shape (``num_envs``, "
"``num_DoF``). Defaults to ``None``."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:17
msgid ""
"The current joint velocities. It is a tensor of shape (``num_envs``, "
"``num_DoF``). Defaults to ``None``."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:19
msgid ""
"The target joint positions the null space controller is trying to "
"enforce, when possible. It is a tensor of shape (``num_envs``, "
"``num_DoF``)."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:22
msgid ""
"When motion-control is enabled but the current end-effector pose or "
"velocity is not provided."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:23
msgid ""
"When inertial dynamics decoupling is enabled but the mass matrix is not "
"provided."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:25
msgid ""
"When closed-loop force control is enabled but the current end-effector "
"force is not provided."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:26
msgid ""
"When gravity compensation is enabled but the gravity vector is not "
"provided."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:27
msgid "When null-space control is enabled but the system is not redundant."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:28
msgid ""
"When dynamically consistent pseudo-inverse is enabled but the mass matrix"
" inverse is not     provided."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:29
msgid ""
"When null-space control is enabled but the current joint positions and "
"velocities are not     provided."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:30
msgid ""
"When target joint positions are provided for null-space control but their"
" dimensions do not     match the current joint positions."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:31
msgid "When an invalid null-space control method is provided."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute:33
msgid ""
"The joint efforts computed by the controller. It is a tensor of shape "
"(``num_envs``, ``num_DoF``)."
msgstr ""

#: of
#: omni.isaac.lab.controllers.operational_space.OperationalSpaceController.compute
msgid "返回类型"
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`target_types "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid "Type of task-space targets."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`motion_control_axes_task "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_control_axes_task>`\\"
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid "Motion direction to control in task reference frame."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`contact_wrench_control_axes_task "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.contact_wrench_control_axes_task>`\\"
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid "Contact wrench direction to control in task reference frame."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`inertial_dynamics_decoupling "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.inertial_dynamics_decoupling>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.inertial_dynamics_decoupling:1
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
"Whether to perform inertial dynamics decoupling for motion control "
"(inverse dynamics)."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`partial_inertial_dynamics_decoupling "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.partial_inertial_dynamics_decoupling>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.partial_inertial_dynamics_decoupling:1
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
"Whether to ignore the inertial coupling between the translational & "
"rotational motions."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`gravity_compensation "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.gravity_compensation>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.gravity_compensation:1
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid "Whether to perform gravity compensation."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`impedance_mode "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.impedance_mode>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.impedance_mode:1
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid "``\"fixed\"``, ``\"variable\"``, ``\"variable_kp\"``."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`motion_stiffness_task "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_stiffness_task>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_stiffness_task:1
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
"The positional gain for determining operational space command forces "
"based on task-space pose error."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`motion_damping_ratio_task "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_damping_ratio_task>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_damping_ratio_task:1
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
"The damping ratio is used in-conjunction with positional gain to compute "
"operational space command forces based on task-space velocity error."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`motion_stiffness_limits_task "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_stiffness_limits_task>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_stiffness_limits_task:1
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid "Minimum and maximum values for positional gains."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`motion_damping_ratio_limits_task "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_damping_ratio_limits_task>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_damping_ratio_limits_task:1
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
"Minimum and maximum values for damping ratios used to compute velocity "
"gains."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`contact_wrench_stiffness_task "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.contact_wrench_stiffness_task>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.contact_wrench_stiffness_task:1
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
"The proportional gain for determining operational space command forces "
"for closed-loop contact force control."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`nullspace_control "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.nullspace_control>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.nullspace_control:1
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid "``\"none\"``, ``\"position\"``."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`nullspace_stiffness "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.nullspace_stiffness>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.nullspace_stiffness:1
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid "The stiffness for null space control."
msgstr ""

#: of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid ""
":py:obj:`nullspace_damping_ratio "
"<omni.isaac.lab.controllers.OperationalSpaceControllerCfg.nullspace_damping_ratio>`\\"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.nullspace_damping_ratio:1
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:1:<autosummary>:1
msgid "The damping ratio for null space control."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:4
msgid "It has two sub-strings joined by underscore:"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:4
msgid "type of task-space target: ``\"pose\"``, ``\"wrench\"``"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.target_types:5
msgid ""
"reference for the task-space targets: ``\"abs\"`` (absolute), ``\"rel\"``"
" (relative, only for pose)"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_control_axes_task:1
msgid ""
"Motion direction to control in task reference frame. Mark as ``0/1`` for "
"each axis."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.contact_wrench_control_axes_task:1
msgid ""
"Contact wrench direction to control in task reference frame. Mark as 0/1 "
"for each axis."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.impedance_mode
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.nullspace_control
msgid "type"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.impedance_mode:3
msgid "Type of gains for motion control"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_damping_ratio_task:4
msgid "The following math operation is performed for computing velocity gains:"
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_damping_ratio_task:5
msgid ":math:`d_gains = 2 * sqrt(p_gains) * damping_ratio`."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_stiffness_limits_task:3
msgid ""
"Note: Used only when :obj:`impedance_mode` is ``\"variable\"`` or "
"``\"variable_kp\"``."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.motion_damping_ratio_limits_task:3
msgid "Note: Used only when :obj:`impedance_mode` is ``\"variable\"``."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.contact_wrench_stiffness_task:3
msgid ""
"If ``None``, then open-loop control of desired contact wrench is "
"performed."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.contact_wrench_stiffness_task:5
msgid ""
"Note: since only the linear forces could be measured at the moment, only "
"the first three elements are used for the feedback loop."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.nullspace_control:3
msgid ""
"Note: ``\"position\"`` is used to drive the redundant manipulator to zero"
" configuration by default. If ``target_joint_pos`` is provided in the "
"``compute()`` method, it will be driven to this configuration."
msgstr ""

#: ../../docstring of
#: omni.isaac.lab.controllers.OperationalSpaceControllerCfg.nullspace_control:6
msgid "The null space control method for redundant manipulators"
msgstr ""



