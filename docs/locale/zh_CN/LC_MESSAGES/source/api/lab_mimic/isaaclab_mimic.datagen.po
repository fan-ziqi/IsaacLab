# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.

msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-31 19:21+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:2
msgid "isaaclab_mimic.datagen"
msgstr ""

#: isaaclab_mimic.datagen:1 of
msgid "Sub-package with core implementation logic for Isaac Lab Mimic."
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:7
msgid "Classes"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
msgid ":py:obj:`DataGenerator <isaaclab_mimic.datagen.DataGenerator>`\\"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
#: isaaclab_mimic.datagen.data_generator.DataGenerator:1 of
msgid ""
"The main data generator object that loads a source dataset, parses it, "
"and generates new trajectories."
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
msgid ":py:obj:`DatagenInfo <isaaclab_mimic.datagen.DatagenInfo>`\\"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
msgid ""
"Defines the structure of information required from an environment for "
"data generation processes."
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
msgid ":py:obj:`DataGenInfoPool <isaaclab_mimic.datagen.DataGenInfoPool>`\\"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool:1 of
msgid "Pool of DatagenInfo for data generation."
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
msgid ":py:obj:`SelectionStrategy <isaaclab_mimic.datagen.SelectionStrategy>`\\"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
msgid "Defines methods and functions for selection strategies to implement."
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
msgid ":py:obj:`RandomStrategy <isaaclab_mimic.datagen.RandomStrategy>`\\"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
#: isaaclab_mimic.datagen.selection_strategy.RandomStrategy:1 of
msgid "Pick source demonstration randomly."
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
msgid ""
":py:obj:`NearestNeighborObjectStrategy "
"<isaaclab_mimic.datagen.NearestNeighborObjectStrategy>`\\"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy:1 of
msgid ""
"Pick source demonstration to be the one with the closest object pose to "
"the object in the current scene."
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
msgid ""
":py:obj:`NearestNeighborRobotDistanceStrategy "
"<isaaclab_mimic.datagen.NearestNeighborRobotDistanceStrategy>`\\"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy:1
#: of
msgid ""
"Pick source demonstration to be the one that minimizes the distance the "
"robot end effector will need to travel from the current pose to the first"
" pose in the transformed segment."
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
msgid ":py:obj:`Waypoint <isaaclab_mimic.datagen.Waypoint>`\\"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
#: isaaclab_mimic.datagen.waypoint.Waypoint:1 of
msgid ""
"Represents a single desired 6-DoF waypoint, along with corresponding "
"gripper actuation for this point."
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
msgid ":py:obj:`WaypointSequence <isaaclab_mimic.datagen.WaypointSequence>`\\"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
#: isaaclab_mimic.datagen.waypoint.WaypointSequence:1 of
msgid "Represents a sequence of Waypoint objects."
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
msgid ":py:obj:`WaypointTrajectory <isaaclab_mimic.datagen.WaypointTrajectory>`\\"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:19:<autosummary>:1
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1 of
msgid ""
"A sequence of WaypointSequence objects that corresponds to a full 6-DoF "
"trajectory."
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:22
msgid "Data Generator"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator:1
#: isaaclab_mimic.datagen.datagen_info.DatagenInfo:1
#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool:1
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy:1
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy:1
#: isaaclab_mimic.datagen.selection_strategy.RandomStrategy:1
#: isaaclab_mimic.datagen.waypoint.Waypoint:1
#: isaaclab_mimic.datagen.waypoint.WaypointSequence:1
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1 of
msgid "**Methods:**"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__:1:<autosummary>:1
#: of
msgid ""
":py:obj:`__init__ <isaaclab_mimic.datagen.DataGenerator.__init__>`\\ "
"\\(env\\[\\, src\\_demo\\_datagen\\_info\\_pool\\, ...\\]\\)"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__:1:<autosummary>
#: of
msgid "param env"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__:1
#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__:1:<autosummary>:1
#: of
msgid "environment to use for data generation"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__:1:<autosummary>:1
#: of
msgid ""
":py:obj:`randomize_subtask_boundaries "
"<isaaclab_mimic.datagen.DataGenerator.randomize_subtask_boundaries>`\\ "
"\\(\\)"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__:1:<autosummary>:1
#: of
msgid ""
"Apply random offsets to sample subtask boundaries according to the task "
"spec."
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__:1:<autosummary>:1
#: of
msgid ""
":py:obj:`select_source_demo "
"<isaaclab_mimic.datagen.DataGenerator.select_source_demo>`\\ "
"\\(eef\\_pose\\, object\\_pose\\, ...\\)"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__:1:<autosummary>:1
#: isaaclab_mimic.datagen.data_generator.DataGenerator.select_source_demo:1 of
msgid "Helper method to run source subtask segment selection."
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__:1:<autosummary>:1
#: of
msgid ""
":py:obj:`generate <isaaclab_mimic.datagen.DataGenerator.generate>`\\ "
"\\(env\\_id\\, success\\_term\\[\\, ...\\]\\)"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__:1:<autosummary>:1
#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate:1 of
msgid "Attempt to generate a new demonstration."
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__
#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate
#: isaaclab_mimic.datagen.data_generator.DataGenerator.select_source_demo
#: isaaclab_mimic.datagen.datagen_info.DatagenInfo.__init__
#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.__init__
#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.add_episode
#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.load_from_dataset_file
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo
#: isaaclab_mimic.datagen.selection_strategy.RandomStrategy.select_source_demo
#: isaaclab_mimic.datagen.waypoint.Waypoint.__init__
#: isaaclab_mimic.datagen.waypoint.WaypointSequence.__init__
#: isaaclab_mimic.datagen.waypoint.WaypointSequence.from_poses
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.add_waypoint_sequence
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.add_waypoint_sequence_for_target_pose
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.execute
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.merge of
msgid "参数"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__:3 of
msgid "source demo datagen info pool"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__:5 of
msgid "path to hdf5 dataset to use for generation"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.__init__:7 of
msgid ""
"list of demonstration keys to use in file. If not provided, all "
"demonstration keys will be used."
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.randomize_subtask_boundaries:1
#: of
msgid ""
"Apply random offsets to sample subtask boundaries according to the task "
"spec. Recall that each demonstration is segmented into a set of subtask "
"segments, and the end index of each subtask can have a random offset."
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.select_source_demo:3 of
msgid "current end effector pose"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.select_source_demo:5 of
msgid "current object pose for this subtask"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.select_source_demo:7 of
msgid "index of subtask"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.select_source_demo:9 of
msgid ""
"start and end indices for subtask segment in source demonstrations of "
"shape (N, 2)"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.select_source_demo:11 of
msgid "name of reference object for this subtask"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.select_source_demo:13 of
msgid "name of selection strategy"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.select_source_demo:15 of
msgid "extra kwargs for running selection strategy"
msgstr ""

#: isaaclab_mimic.datagen.WaypointSequence.last_waypoint
#: isaaclab_mimic.datagen.WaypointTrajectory.last_waypoint
#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate
#: isaaclab_mimic.datagen.data_generator.DataGenerator.select_source_demo
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo
#: isaaclab_mimic.datagen.selection_strategy.RandomStrategy.select_source_demo
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.execute
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.pop_first of
msgid "返回"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.select_source_demo:18 of
msgid "selected source demo index"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate
#: isaaclab_mimic.datagen.data_generator.DataGenerator.select_source_demo
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo
#: isaaclab_mimic.datagen.selection_strategy.RandomStrategy.select_source_demo
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.execute of
msgid "返回类型"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate:3 of
msgid "environment ID"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate:5 of
msgid "success function to check if the task is successful"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate:7 of
msgid "queue to store actions for each environment"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate:9 of
msgid ""
"if True, select a different source demonstration for each subtask during "
"data generation, else keep the same one for the entire episode"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate:12 of
msgid ""
"if True, each subtask segment will consist of the first robot pose and "
"the target poses instead of just the target poses. Can sometimes help "
"improve data generation quality as the interpolation segment will "
"interpolate to where the robot started in the source segment instead of "
"the first target pose. Note that the first subtask segment of each "
"episode will always include the first robot pose, regardless of this "
"argument."
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate:19 of
msgid ""
"if True, each interpolation segment will start from the last target pose "
"in the previous subtask segment, instead of the current robot pose. Can "
"sometimes improve data generation quality."
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate:23 of
msgid "if True, pause after every subtask during generation, for debugging."
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate:27 of
msgid ""
"dictionary with the following items:     initial_state (dict): initial "
"simulator state for the executed trajectory     states (list): simulator "
"state at each timestep     observations (list): observation dictionary at"
" each timestep     datagen_infos (list): datagen_info at each timestep"
"     actions (np.array): action executed at each timestep     success "
"(bool): whether the trajectory successfully solved the task or not     "
"src_demo_inds (list): list of selected source demonstration indices for "
"each subtask     src_demo_labels (np.array): same as @src_demo_inds, but "
"repeated to have a label for each timestep of the trajectory"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate:36 of
msgid "dictionary with the following items:"
msgstr ""

#: isaaclab_mimic.datagen.data_generator.DataGenerator.generate:30 of
msgid ""
"initial_state (dict): initial simulator state for the executed trajectory"
" states (list): simulator state at each timestep observations (list): "
"observation dictionary at each timestep datagen_infos (list): "
"datagen_info at each timestep actions (np.array): action executed at each"
" timestep success (bool): whether the trajectory successfully solved the "
"task or not src_demo_inds (list): list of selected source demonstration "
"indices for each subtask src_demo_labels (np.array): same as "
"@src_demo_inds, but repeated to have a label for each timestep of the "
"trajectory"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:29
msgid "Datagen Info"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info.DatagenInfo:1 of
msgid ""
"Defines the structure of information required from an environment for "
"data generation processes. The `DatagenInfo` class centralizes all "
"essential data elements needed for data generation in one place, reducing"
" the overhead and complexity of repeatedly querying the environment "
"whenever this information is needed."
msgstr ""

#: isaaclab_mimic.datagen.datagen_info.DatagenInfo:5 of
msgid "To allow for flexibility,not all information must be present."
msgstr ""

#: isaaclab_mimic.datagen.datagen_info.DatagenInfo:7 of
msgid ""
"Core Elements: - **eef_pose**: Captures the current 6 dimensional poses "
"of the robot's end-effector. - **object_poses**: Captures the 6 "
"dimensional poses of relevant objects in the scene. - "
"**subtask_term_signals**: Captures subtask completions signals. - "
"**target_eef_pose**: Captures the target 6 dimensional poses for robot's "
"end effector at each time step. - **gripper_action**:  Captures the "
"gripper's state."
msgstr ""

#: isaaclab_mimic.datagen.datagen_info.DatagenInfo.__init__:1:<autosummary>:1
#: of
msgid ""
":py:obj:`__init__ <isaaclab_mimic.datagen.DatagenInfo.__init__>`\\ "
"\\(\\[eef\\_pose\\, object\\_poses\\, ...\\]\\)"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info.DatagenInfo.__init__:1:<autosummary> of
msgid "param eef_pose"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info.DatagenInfo.__init__:1
#: isaaclab_mimic.datagen.datagen_info.DatagenInfo.__init__:1:<autosummary>:1
#: of
msgid "robot end effector poses of shape [..., 4, 4]"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info.DatagenInfo.__init__:3 of
msgid "dictionary mapping object name to object poses of shape [..., 4, 4]"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info.DatagenInfo.__init__:6 of
msgid ""
"dictionary mapping subtask name to a binary indicator (0 or 1) on whether"
" subtask has been completed. Each value in the dictionary could be an "
"int, float, or torch.Tensor of shape [..., 1]."
msgstr ""

#: isaaclab_mimic.datagen.datagen_info.DatagenInfo.__init__:10 of
msgid "target end effector poses of shape [..., 4, 4]"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info.DatagenInfo.__init__:12 of
msgid ""
"gripper actions of shape [..., D] where D is the dimension of the gripper"
" actuation action for the robot arm"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:36
msgid "Datagen Info Pool"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool:3 of
msgid ""
"This class is a container for storing `DatagenInfo` objects that are "
"extracted from episodes. The pool supports the use of an asyncio lock to "
"safely add new episodes to the pool while consuming the data, so it can "
"be shared across multiple mimic data generators."
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool:1:<autosummary>:1
#: of
msgid ""
":py:obj:`__init__ <isaaclab_mimic.datagen.DataGenInfoPool.__init__>`\\ "
"\\(env\\, env\\_cfg\\, device\\[\\, asyncio\\_lock\\]\\)"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool:1:<autosummary> of
msgid "param env_cfg"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.__init__:1
#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool:1:<autosummary>:1
#: of
msgid "environment configuration"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool:1:<autosummary>:1
#: of
msgid ""
":py:obj:`add_episode "
"<isaaclab_mimic.datagen.DataGenInfoPool.add_episode>`\\ \\(episode\\)"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.add_episode:1
#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool:1:<autosummary>:1
#: of
msgid "Add a datagen info from the given episode."
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool:1:<autosummary>:1
#: of
msgid ""
":py:obj:`load_from_dataset_file "
"<isaaclab_mimic.datagen.DataGenInfoPool.load_from_dataset_file>`\\ "
"\\(file\\_path\\[\\, ...\\]\\)"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.load_from_dataset_file:1
#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool:1:<autosummary>:1
#: of
msgid "Load from a dataset file."
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool:1
#: isaaclab_mimic.datagen.waypoint.WaypointSequence:1
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1 of
msgid "**Attributes:**"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.__init__:1:<autosummary>:1
#: of
msgid ""
":py:obj:`datagen_infos "
"<isaaclab_mimic.datagen.DataGenInfoPool.datagen_infos>`\\"
msgstr ""

#: isaaclab_mimic.datagen.DataGenInfoPool.datagen_infos:1
#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.__init__:1:<autosummary>:1
#: of
msgid "Returns the datagen infos."
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.__init__:1:<autosummary>:1
#: of
msgid ""
":py:obj:`subtask_indices "
"<isaaclab_mimic.datagen.DataGenInfoPool.subtask_indices>`\\"
msgstr ""

#: isaaclab_mimic.datagen.DataGenInfoPool.subtask_indices:1
#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.__init__:1:<autosummary>:1
#: of
msgid "Returns the subtask indices."
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.__init__:1:<autosummary>:1
#: of
msgid ""
":py:obj:`asyncio_lock "
"<isaaclab_mimic.datagen.DataGenInfoPool.asyncio_lock>`\\"
msgstr ""

#: isaaclab_mimic.datagen.DataGenInfoPool.asyncio_lock:1
#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.__init__:1:<autosummary>:1
#: of
msgid "Returns the asyncio lock."
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.__init__:1:<autosummary>:1
#: of
msgid ""
":py:obj:`num_datagen_infos "
"<isaaclab_mimic.datagen.DataGenInfoPool.num_datagen_infos>`\\"
msgstr ""

#: isaaclab_mimic.datagen.DataGenInfoPool.num_datagen_infos:1
#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.__init__:1:<autosummary>:1
#: of
msgid "Returns the number of datagen infos."
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.__init__:3 of
msgid "device to store the data"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.__init__:5 of
msgid "asyncio lock to use for thread safety"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.add_episode:3 of
msgid "episode to add"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.load_from_dataset_file:3
#: of
msgid "path to the dataset file"
msgstr ""

#: isaaclab_mimic.datagen.datagen_info_pool.DataGenInfoPool.load_from_dataset_file:5
#: of
msgid "keys of the demos to load"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:43
msgid "Random Strategy"
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.RandomStrategy.select_source_demo:1:<autosummary>:1
#: of
msgid ""
":py:obj:`select_source_demo "
"<isaaclab_mimic.datagen.RandomStrategy.select_source_demo>`\\ "
"\\(eef\\_pose\\, object\\_pose\\, ...\\)"
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo:1
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo:1:<autosummary>:1
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo:1
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo:1:<autosummary>:1
#: isaaclab_mimic.datagen.selection_strategy.RandomStrategy.select_source_demo:1
#: isaaclab_mimic.datagen.selection_strategy.RandomStrategy.select_source_demo:1:<autosummary>:1
#: of
msgid ""
"Selects source demonstration index using the current robot pose, relevant"
" object pose for the current subtask, and relevant information from the "
"source demonstrations for the current subtask."
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.RandomStrategy.select_source_demo:1:<autosummary>:1
#: of
msgid ""
":py:obj:`__init__ <isaaclab_mimic.datagen.RandomStrategy.__init__>`\\ "
"\\(\\)"
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo:5
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo:5
#: isaaclab_mimic.datagen.selection_strategy.RandomStrategy.select_source_demo:5
#: of
msgid "current 4x4 eef pose"
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo:7
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo:7
#: isaaclab_mimic.datagen.selection_strategy.RandomStrategy.select_source_demo:7
#: of
msgid "current 4x4 object pose, for the object in this subtask"
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo:9
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo:9
#: isaaclab_mimic.datagen.selection_strategy.RandomStrategy.select_source_demo:9
#: of
msgid ""
"DatagenInfo instance for the relevant subtask segment in the source "
"demonstrations"
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo:19
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo:19
#: isaaclab_mimic.datagen.selection_strategy.RandomStrategy.select_source_demo:13
#: of
msgid ""
"index of source demonstration - indicates which source subtask segment to"
" use"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:50
msgid "Nearest Neighbor Object Strategy"
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo:1:<autosummary>:1
#: of
msgid ""
":py:obj:`select_source_demo "
"<isaaclab_mimic.datagen.NearestNeighborObjectStrategy.select_source_demo>`\\"
" \\(eef\\_pose\\, object\\_pose\\, ...\\)"
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo:1:<autosummary>:1
#: of
msgid ""
":py:obj:`__init__ "
"<isaaclab_mimic.datagen.NearestNeighborObjectStrategy.__init__>`\\ \\(\\)"
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo:12
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo:12
#: of
msgid "weight on position for minimizing pose distance"
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo:14
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo:14
#: of
msgid "weight on rotation for minimizing pose distance"
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborObjectStrategy.select_source_demo:16
#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo:16
#: of
msgid ""
"pick source demo index uniformly at randomly from the top @nn_k nearest "
"neighbors"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:57
msgid "Nearest Neighbor Robot Distance Strategy"
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo:1:<autosummary>:1
#: of
msgid ""
":py:obj:`select_source_demo "
"<isaaclab_mimic.datagen.NearestNeighborRobotDistanceStrategy.select_source_demo>`\\"
" \\(eef\\_pose\\, object\\_pose\\, ...\\)"
msgstr ""

#: isaaclab_mimic.datagen.selection_strategy.NearestNeighborRobotDistanceStrategy.select_source_demo:1:<autosummary>:1
#: of
msgid ""
":py:obj:`__init__ "
"<isaaclab_mimic.datagen.NearestNeighborRobotDistanceStrategy.__init__>`\\"
" \\(\\)"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:64
msgid "Waypoint"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.Waypoint.__init__:1:<autosummary>:1 of
msgid ""
":py:obj:`__init__ <isaaclab_mimic.datagen.Waypoint.__init__>`\\ "
"\\(eef\\_names\\, pose\\, gripper\\_action\\[\\, ...\\]\\)"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.Waypoint.__init__:1:<autosummary> of
msgid "param pose"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.Waypoint.__init__:1
#: isaaclab_mimic.datagen.waypoint.Waypoint.__init__:1:<autosummary>:1 of
msgid "4x4 pose target for robot controller"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.Waypoint.__init__:3 of
msgid "gripper action for robot controller"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.Waypoint.__init__:5 of
msgid ""
"action noise amplitude to apply during execution at this timestep (for "
"arm actions, not gripper actions)"
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:71
msgid "Waypoint Sequence"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointSequence:1:<autosummary>:1 of
msgid ""
":py:obj:`__init__ <isaaclab_mimic.datagen.WaypointSequence.__init__>`\\ "
"\\(\\[sequence\\]\\)"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointSequence:1:<autosummary> of
msgid "param sequence"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointSequence.__init__:1
#: isaaclab_mimic.datagen.waypoint.WaypointSequence:1:<autosummary>:1 of
msgid "if provided, should be a list of Waypoint objects"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointSequence:1:<autosummary>:1 of
msgid ""
":py:obj:`from_poses "
"<isaaclab_mimic.datagen.WaypointSequence.from_poses>`\\ \\(eef\\_names\\,"
" poses\\, ...\\)"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointSequence.from_poses:1
#: isaaclab_mimic.datagen.waypoint.WaypointSequence:1:<autosummary>:1 of
msgid ""
"Instantiate a WaypointSequence object given a sequence of poses, gripper "
"actions, and action noise."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointSequence:1:<autosummary>:1 of
msgid ""
":py:obj:`split <isaaclab_mimic.datagen.WaypointSequence.split>`\\ "
"\\(ind\\)"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointSequence:1:<autosummary>:1 of
msgid ""
"Splits this sequence into 2 pieces, the part up to time index @ind, and "
"the rest."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointSequence.__init__:1:<autosummary>:1
#: of
msgid ""
":py:obj:`last_waypoint "
"<isaaclab_mimic.datagen.WaypointSequence.last_waypoint>`\\"
msgstr ""

#: isaaclab_mimic.datagen.WaypointSequence.last_waypoint:1
#: isaaclab_mimic.datagen.WaypointTrajectory.last_waypoint:1
#: isaaclab_mimic.datagen.waypoint.WaypointSequence.__init__:1:<autosummary>:1
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.__init__:1:<autosummary>:1
#: of
msgid "Return last waypoint in sequence."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointSequence.from_poses:4 of
msgid "sequence of pose matrices of shape (T, 4, 4)"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointSequence.from_poses:6 of
msgid ""
"sequence of gripper actions that should be applied at each timestep of "
"shape (T, D)."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointSequence.from_poses:9 of
msgid ""
"sequence of action noise magnitudes that should be applied at each "
"timestep. If a single float is provided, the noise magnitude will be "
"constant over the trajectory."
msgstr ""

#: isaaclab_mimic.datagen.WaypointSequence.last_waypoint:3
#: isaaclab_mimic.datagen.WaypointTrajectory.last_waypoint:3
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.pop_first:4 of
msgid "waypoint (Waypoint instance)"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointSequence.split:1 of
msgid ""
"Splits this sequence into 2 pieces, the part up to time index @ind, and "
"the rest. Returns 2 WaypointSequence objects."
msgstr ""

#: ../../source/api/lab_mimic/isaaclab_mimic.datagen.rst:78
msgid "Waypoint Trajectory"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1:<autosummary>:1 of
msgid ""
":py:obj:`__init__ <isaaclab_mimic.datagen.WaypointTrajectory.__init__>`\\"
" \\(\\)"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1:<autosummary>:1 of
msgid ""
":py:obj:`add_waypoint_sequence "
"<isaaclab_mimic.datagen.WaypointTrajectory.add_waypoint_sequence>`\\ "
"\\(sequence\\)"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.add_waypoint_sequence:1
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1:<autosummary>:1 of
msgid "Directly append sequence to list (no interpolation)."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1:<autosummary>:1 of
msgid ""
":py:obj:`add_waypoint_sequence_for_target_pose "
"<isaaclab_mimic.datagen.WaypointTrajectory.add_waypoint_sequence_for_target_pose>`\\"
" \\(...\\[\\, ...\\]\\)"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1:<autosummary>:1 of
msgid "Adds a new waypoint sequence corresponding to a desired target pose."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1:<autosummary>:1 of
msgid ""
":py:obj:`pop_first "
"<isaaclab_mimic.datagen.WaypointTrajectory.pop_first>`\\ \\(\\)"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1:<autosummary>:1 of
msgid "Removes first waypoint in first waypoint sequence and returns it."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1:<autosummary>:1 of
msgid ""
":py:obj:`merge <isaaclab_mimic.datagen.WaypointTrajectory.merge>`\\ "
"\\(other\\, eef\\_names\\[\\, num\\_steps\\_interp\\, ...\\]\\)"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.merge:1
#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1:<autosummary>:1 of
msgid "Merge this trajectory with another (@other)."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1:<autosummary>:1 of
msgid ""
":py:obj:`execute <isaaclab_mimic.datagen.WaypointTrajectory.execute>`\\ "
"\\(env\\, env\\_id\\, success\\_term\\[\\, ...\\]\\)"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory:1:<autosummary>:1 of
msgid "Main function to execute the trajectory."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.__init__:1:<autosummary>:1
#: of
msgid ""
":py:obj:`last_waypoint "
"<isaaclab_mimic.datagen.WaypointTrajectory.last_waypoint>`\\"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.add_waypoint_sequence:3
#: of
msgid "sequence to add"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.add_waypoint_sequence_for_target_pose:1
#: of
msgid ""
"Adds a new waypoint sequence corresponding to a desired target pose. A "
"new WaypointSequence will be constructed consisting of @num_steps "
"intermediate Waypoint objects. These can either be constructed with "
"linear interpolation from the last waypoint (default) or be a constant "
"set of target poses (set @skip_interpolation to True)."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.add_waypoint_sequence_for_target_pose:6
#: of
msgid "4x4 target pose"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.add_waypoint_sequence_for_target_pose:8
#: of
msgid "value for gripper action"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.add_waypoint_sequence_for_target_pose:10
#: of
msgid ""
"number of action steps when trying to reach this waypoint. Will add "
"intermediate linearly interpolated points between the last pose on this "
"trajectory and the target pose, so that the total number of steps is "
"@num_steps."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.add_waypoint_sequence_for_target_pose:14
#: of
msgid ""
"if True, keep the target pose fixed and repeat it @num_steps times "
"instead of using linearly interpolated targets."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.add_waypoint_sequence_for_target_pose:17
#: of
msgid ""
"scale of random gaussian noise to add during action execution (e.g. when "
"@execute is called)"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.pop_first:1 of
msgid ""
"Removes first waypoint in first waypoint sequence and returns it. If the "
"first waypoint sequence is now empty, it is also removed."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.merge:3 of
msgid "the other trajectory to merge into this one"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.merge:5 of
msgid ""
"if not None, add a waypoint sequence that interpolates between the end of"
" the current trajectory and the start of @other"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.merge:8 of
msgid ""
"if not None, add a waypoint sequence that has constant target poses "
"corresponding to the first target pose in @other"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.merge:11 of
msgid "noise to use during the interpolation segment"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.execute:1 of
msgid ""
"Main function to execute the trajectory. Will use "
"env_interface.target_eef_pose_to_action to convert each target pose at "
"each waypoint to an action command, and pass that along to env.step."
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.execute:5 of
msgid "environment to use for executing trajectory"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.execute:7 of
msgid "environment index"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.execute:9 of
msgid "success term to check if the task is successful"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.execute:10 of
msgid "queue for sending actions to the environment"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.execute:13 of
msgid ""
"dictionary with the following items for the executed trajectory:     "
"states (list): simulator state at each timestep     observations (list): "
"observation dictionary at each timestep     datagen_infos (list): "
"datagen_info at each timestep     actions (list): action executed at each"
" timestep     success (bool): whether the trajectory successfully solved "
"the task or not"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.execute:19 of
msgid "dictionary with the following items for the executed trajectory:"
msgstr ""

#: isaaclab_mimic.datagen.waypoint.WaypointTrajectory.execute:16 of
msgid ""
"states (list): simulator state at each timestep observations (list): "
"observation dictionary at each timestep datagen_infos (list): "
"datagen_info at each timestep actions (list): action executed at each "
"timestep success (bool): whether the trajectory successfully solved the "
"task or not"
msgstr ""
